
/private/var/folders/94/gs5hgw2x2mndqz64jxxkd1x40000gn/T/arduino/sketches/6788DC5862D5515EA00C8C2944C9F99D/RJI.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60023088 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0002b9a0 l    d  .fini	00000000 .fini
0002b9a4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200082c0 l    d  NonCacheable	00000000 NonCacheable
2000a8dc l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6006f478 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 aes.c
6002c398 l     O .text.progmem	00000028 RCON
6002c3c0 l     O .text.progmem	00000100 FSb
6002c4c0 l     O .text.progmem	00000400 RT0
6002c8c0 l     O .text.progmem	00000400 RT3
6002ccc0 l     O .text.progmem	00000400 RT1
6002d0c0 l     O .text.progmem	00000400 RT2
6002d4c0 l     O .text.progmem	00000400 FT0
6002d8c0 l     O .text.progmem	00000400 FT3
6002dcc0 l     O .text.progmem	00000400 FT1
6002e0c0 l     O .text.progmem	00000400 FT2
6002e4c0 l     O .text.progmem	00000100 RSb
6002e5c0 l     O .text.progmem	00000040 aes_test_cfb128_pt
6002e600 l     O .text.progmem	00000030 aes_test_ecb_dec
6002e630 l     O .text.progmem	00000030 aes_test_ecb_enc
6002e660 l     O .text.progmem	00000030 aes_test_cbc_dec
6002e690 l     O .text.progmem	00000030 aes_test_cbc_enc
6002e6c0 l     O .text.progmem	00000060 aes_test_cfb128_key
6002e720 l     O .text.progmem	000000c0 aes_test_cfb128_ct
6002e7e0 l     O .text.progmem	00000030 aes_test_ctr_nonce_counter
6002e810 l     O .text.progmem	00000030 aes_test_ctr_key
6002e840 l     O .text.progmem	0000000c aes_test_ctr_len
6002e84c l     O .text.progmem	00000090 aes_test_ctr_ct
6002e8dc l     O .text.progmem	00000090 aes_test_ctr_pt
00000000 l    df *ABS*	00000000 asn1parse.c
00000000 l    df *ABS*	00000000 asn1write.c
00000000 l    df *ABS*	00000000 base64.c
6002e96c l     O .text.progmem	00000040 base64_enc_map
6002e9ac l     O .text.progmem	00000080 base64_dec_map
6002ea2c l     O .text.progmem	00000040 base64_test_dec
6002ea6c l     O .text.progmem	00000059 base64_test_enc
00000000 l    df *ABS*	00000000 bignum.c
600037e0 l     F .text.code	00000054 mpi_sub_hlp
60003834 l     F .text.code	000002e2 mpi_mul_hlp
60004258 l     F .text.code	00000106 mpi_montmul
60004fbc l     F .text.code	000000a2 mpi_write_hlp
60005194 l     F .text.code	00000068 mpi_check_small_factors
600055a8 l     F .text.code	00000326 mpi_miller_rabin
6002eac8 l     O .text.progmem	000002a0 small_prime
6002ed68 l     O .text.progmem	00000024 gcd_pairs
00000000 l    df *ABS*	00000000 camellia.c
60006670 l     F .text.code	00000090 camellia_feistel
6002ed8c l     O .text.progmem	00000100 FSb3
6002ee8c l     O .text.progmem	00000100 FSb
6002ef8c l     O .text.progmem	00000100 FSb4
6002f08c l     O .text.progmem	00000100 FSb2
6002f18c l     O .text.progmem	00000030 SIGMA_CHARS
6002f1bc l     O .text.progmem	00000020 shifts
6002f1dc l     O .text.progmem	000000a0 indexes
6002f27c l     O .text.progmem	00000028 transposes
6002f2a4 l     O .text.progmem	000000c0 camellia_test_ecb_key
6002f364 l     O .text.progmem	00000060 camellia_test_ecb_cipher
6002f3c4 l     O .text.progmem	00000020 camellia_test_ecb_plain
6002f3e4 l     O .text.progmem	00000060 camellia_test_cbc_key
6002f444 l     O .text.progmem	00000090 camellia_test_cbc_cipher
6002f4d4 l     O .text.progmem	00000030 camellia_test_cbc_plain
6002f504 l     O .text.progmem	00000030 camellia_test_ctr_nonce_counter
6002f534 l     O .text.progmem	00000030 camellia_test_ctr_key
6002f564 l     O .text.progmem	0000000c camellia_test_ctr_len
6002f570 l     O .text.progmem	00000090 camellia_test_ctr_ct
6002f600 l     O .text.progmem	00000090 camellia_test_ctr_pt
00000000 l    df *ABS*	00000000 ccm.c
60007360 l     F .text.code	0000034a ccm_auth_crypt
6002f690 l     O .text.progmem	00000010 key
6002f6a0 l     O .text.progmem	00000060 res
6002f700 l     O .text.progmem	0000000c msg_len
6002f70c l     O .text.progmem	0000000c iv_len
6002f718 l     O .text.progmem	0000000c add_len
6002f724 l     O .text.progmem	0000000c tag_len
6002f730 l     O .text.progmem	0000000c iv
6002f73c l     O .text.progmem	00000018 msg
6002f754 l     O .text.progmem	00000014 ad
00000000 l    df *ABS*	00000000 cipher.c
60007978 l     F .text.code	00000024 add_pkcs_padding
6000799c l     F .text.code	00000064 get_pkcs_padding
60007a00 l     F .text.code	0000002a add_one_and_zeros_padding
60007a2c l     F .text.code	00000060 get_one_and_zeros_padding
60007a8c l     F .text.code	0000002c add_zeros_and_len_padding
60007ab8 l     F .text.code	0000005c get_zeros_and_len_padding
60007b14 l     F .text.code	00000012 add_zeros_padding
60007b28 l     F .text.code	00000048 get_zeros_padding
60007b70 l     F .text.code	00000018 get_no_padding
2000cc90 l     O .bss	00000004 supported_init
00000000 l    df *ABS*	00000000 cipher_wrap.c
60008334 l     F .text.code	00000004 aes_crypt_ecb_wrap
60008338 l     F .text.code	00000004 aes_crypt_cbc_wrap
6000833c l     F .text.code	00000004 aes_crypt_cfb128_wrap
60008340 l     F .text.code	00000004 aes_crypt_ctr_wrap
60008344 l     F .text.code	00000004 aes_setkey_dec_wrap
60008348 l     F .text.code	00000004 aes_setkey_enc_wrap
6000834c l     F .text.code	0000000c gcm_aes_setkey_wrap
60008358 l     F .text.code	0000000c ccm_aes_setkey_wrap
60008364 l     F .text.code	00000004 camellia_crypt_ecb_wrap
60008368 l     F .text.code	00000004 camellia_crypt_cbc_wrap
6000836c l     F .text.code	00000004 camellia_crypt_cfb128_wrap
60008370 l     F .text.code	00000004 camellia_crypt_ctr_wrap
60008374 l     F .text.code	00000004 camellia_setkey_dec_wrap
60008378 l     F .text.code	00000004 camellia_setkey_enc_wrap
6000837c l     F .text.code	0000000c gcm_camellia_setkey_wrap
60008388 l     F .text.code	0000000c ccm_camellia_setkey_wrap
60008394 l     F .text.code	00000008 des_crypt_ecb_wrap
6000839c l     F .text.code	00000008 des3_crypt_ecb_wrap
600083a4 l     F .text.code	00000004 des_crypt_cbc_wrap
600083a8 l     F .text.code	00000004 des3_crypt_cbc_wrap
600083ac l     F .text.code	00000004 des_setkey_dec_wrap
600083b0 l     F .text.code	00000004 des_setkey_enc_wrap
600083b4 l     F .text.code	00000004 des3_set2key_dec_wrap
600083b8 l     F .text.code	00000004 des3_set2key_enc_wrap
600083bc l     F .text.code	00000004 des3_set3key_dec_wrap
600083c0 l     F .text.code	00000004 des3_set3key_enc_wrap
600083c4 l     F .text.code	00000012 des3_ctx_free
600083d8 l     F .text.code	00000012 des_ctx_free
600083ec l     F .text.code	00000012 ccm_ctx_free
60008400 l     F .text.code	00000012 gcm_ctx_free
60008414 l     F .text.code	00000012 camellia_ctx_free
60008428 l     F .text.code	00000012 aes_ctx_free
6000843c l     F .text.code	00000018 des3_ctx_alloc
60008454 l     F .text.code	00000016 des_ctx_alloc
6000846c l     F .text.code	00000016 ccm_ctx_alloc
60008484 l     F .text.code	00000018 gcm_ctx_alloc
6000849c l     F .text.code	00000018 camellia_ctx_alloc
600084b4 l     F .text.code	00000018 aes_ctx_alloc
600346f4 l     O .text.progmem	0000001c aes_128_ecb_info
600346d8 l     O .text.progmem	0000001c aes_192_ecb_info
600346bc l     O .text.progmem	0000001c aes_256_ecb_info
600346a0 l     O .text.progmem	0000001c aes_128_cbc_info
60034684 l     O .text.progmem	0000001c aes_192_cbc_info
60034668 l     O .text.progmem	0000001c aes_256_cbc_info
6003464c l     O .text.progmem	0000001c aes_128_cfb128_info
60034630 l     O .text.progmem	0000001c aes_192_cfb128_info
60034614 l     O .text.progmem	0000001c aes_256_cfb128_info
600345f8 l     O .text.progmem	0000001c aes_128_ctr_info
600345dc l     O .text.progmem	0000001c aes_192_ctr_info
600345c0 l     O .text.progmem	0000001c aes_256_ctr_info
60034580 l     O .text.progmem	0000001c aes_128_gcm_info
60034564 l     O .text.progmem	0000001c aes_192_gcm_info
60034548 l     O .text.progmem	0000001c aes_256_gcm_info
60034508 l     O .text.progmem	0000001c aes_128_ccm_info
600344ec l     O .text.progmem	0000001c aes_192_ccm_info
600344d0 l     O .text.progmem	0000001c aes_256_ccm_info
60034490 l     O .text.progmem	0000001c camellia_128_ecb_info
60034474 l     O .text.progmem	0000001c camellia_192_ecb_info
60034458 l     O .text.progmem	0000001c camellia_256_ecb_info
6003443c l     O .text.progmem	0000001c camellia_128_cbc_info
60034420 l     O .text.progmem	0000001c camellia_192_cbc_info
60034404 l     O .text.progmem	0000001c camellia_256_cbc_info
600343e8 l     O .text.progmem	0000001c camellia_128_cfb128_info
600343cc l     O .text.progmem	0000001c camellia_192_cfb128_info
600343b0 l     O .text.progmem	0000001c camellia_256_cfb128_info
60034394 l     O .text.progmem	0000001c camellia_128_ctr_info
60034378 l     O .text.progmem	0000001c camellia_192_ctr_info
6003435c l     O .text.progmem	0000001c camellia_256_ctr_info
6003431c l     O .text.progmem	0000001c camellia_128_gcm_info
60034300 l     O .text.progmem	0000001c camellia_192_gcm_info
600342e4 l     O .text.progmem	0000001c camellia_256_gcm_info
600342a4 l     O .text.progmem	0000001c camellia_128_ccm_info
60034288 l     O .text.progmem	0000001c camellia_192_ccm_info
6003426c l     O .text.progmem	0000001c camellia_256_ccm_info
6003422c l     O .text.progmem	0000001c des_ecb_info
600341d0 l     O .text.progmem	0000001c des_ede_ecb_info
60034174 l     O .text.progmem	0000001c des_ede3_ecb_info
60034210 l     O .text.progmem	0000001c des_cbc_info
600341b4 l     O .text.progmem	0000001c des_ede_cbc_info
60034158 l     O .text.progmem	0000001c des_ede3_cbc_info
60034190 l     O .text.progmem	00000024 des_ede3_info
600341ec l     O .text.progmem	00000024 des_ede_info
60034248 l     O .text.progmem	00000024 des_info
600342c0 l     O .text.progmem	00000024 ccm_camellia_info
60034338 l     O .text.progmem	00000024 gcm_camellia_info
600344ac l     O .text.progmem	00000024 camellia_info
60034524 l     O .text.progmem	00000024 ccm_aes_info
6003459c l     O .text.progmem	00000024 gcm_aes_info
60034710 l     O .text.progmem	00000024 aes_info
00000000 l    df *ABS*	00000000 ctr_drbg.c
600084cc l     F .text.code	000001b0 block_cipher_df
6000867c l     F .text.code	00000098 ctr_drbg_update_internal
60008714 l     F .text.code	00000020 ctr_drbg_self_test_entropy
2000cca4 l     O .bss	00000004 test_offset
60034734 l     O .text.progmem	00000060 entropy_source_pr
60034794 l     O .text.progmem	00000010 result_pr
600347a4 l     O .text.progmem	00000040 entropy_source_nopr
600347e4 l     O .text.progmem	00000010 result_nopr
600347f4 l     O .text.progmem	00000010 nonce_pers_nopr
60034804 l     O .text.progmem	00000010 nonce_pers_pr
00000000 l    df *ABS*	00000000 des.c
60009870 l     F .text.code	00000060 des3_set2key
60009910 l     F .text.code	0000006c des3_set3key
60034814 l     O .text.progmem	00000080 odd_parity_table
60034894 l     O .text.progmem	00000080 weak_key_table
60034914 l     O .text.progmem	00000100 SB8
60034a14 l     O .text.progmem	00000100 SB7
60034b14 l     O .text.progmem	00000100 SB6
60034c14 l     O .text.progmem	00000100 SB4
60034d14 l     O .text.progmem	00000100 SB2
60034e14 l     O .text.progmem	00000100 SB5
60034f14 l     O .text.progmem	00000100 SB3
60035014 l     O .text.progmem	00000100 SB1
60035114 l     O .text.progmem	00000040 LHs
60035154 l     O .text.progmem	00000040 RHs
60035194 l     O .text.progmem	00000018 des3_test_keys
600351ac l     O .text.progmem	00000018 des3_test_ecb_dec
600351c4 l     O .text.progmem	00000018 des3_test_ecb_enc
600351dc l     O .text.progmem	00000018 des3_test_cbc_enc
600351f4 l     O .text.progmem	00000018 des3_test_cbc_dec
00000000 l    df *ABS*	00000000 dhm.c
60009d40 l     F .text.code	0000003c dhm_read_bignum
60009d7c l     F .text.code	00000064 dhm_check_range
6003520c l     O .text.progmem	000000fb mbedtls_test_dhm_params
00000000 l    df *ABS*	00000000 ecdh.c
00000000 l    df *ABS*	00000000 ecdsa.c
6000a704 l     F .text.code	0000005a derive_mpi
00000000 l    df *ABS*	00000000 ecp.c
6000ace8 l     F .text.code	00000090 ecp_modp
6000ad78 l     F .text.code	00000104 ecp_normalize_jac
6000ae7c l     F .text.code	0000004a ecp_safe_invert_jac
6000aec8 l     F .text.code	00000540 ecp_double_jac
6000b408 l     F .text.code	0000019c ecp_check_pubkey_sw
6000b5a4 l     F .text.code	0000025c ecp_normalize_jac_many
6000b800 l     F .text.code	00000078 ecp_select_comb.constprop.0
6000bacc l     F .text.code	000004d8 ecp_add_mixed
6000c7b0 l     F .text.code	000000b4 mbedtls_ecp_mul_shortcuts
2000c1d4 l     O .bss	00000004 add_count
2000c1d8 l     O .bss	00000004 dbl_count
2000c44c l     O .bss	00000005 ecp_supported_grp_id
2000c8c4 l     O .bss	00000004 init_done.0
2000c988 l     O .bss	00000004 mul_count
60035308 l     O .text.progmem	0000003c ecp_supported_curves
00000000 l    df *ABS*	00000000 ecp_curves.c
6000cebc l     F .text.code	0000050c ecp_mod_p384
6000d3c8 l     F .text.code	00000258 ecp_mod_p224
6000d620 l     F .text.code	000003b6 ecp_mod_p256
6000d9d8 l     F .text.code	00000172 ecp_mod_p192
20007cc0 l     O .data	00000004 one.0
60035344 l     O .text.progmem	00000018 secp192r1_p
6003535c l     O .text.progmem	00000018 secp192r1_b
60035374 l     O .text.progmem	00000018 secp192r1_n
6003538c l     O .text.progmem	00000018 secp192r1_gx
600353a4 l     O .text.progmem	00000018 secp192r1_gy
600353bc l     O .text.progmem	00000020 secp224r1_p
600353dc l     O .text.progmem	0000001c secp224r1_b
600353f8 l     O .text.progmem	0000001c secp224r1_n
60035414 l     O .text.progmem	0000001c secp224r1_gx
60035430 l     O .text.progmem	0000001c secp224r1_gy
6003544c l     O .text.progmem	00000020 secp256r1_p
6003546c l     O .text.progmem	00000020 secp256r1_b
6003548c l     O .text.progmem	00000020 secp256r1_n
600354ac l     O .text.progmem	00000020 secp256r1_gx
600354cc l     O .text.progmem	00000020 secp256r1_gy
600354ec l     O .text.progmem	00000030 secp384r1_p
6003551c l     O .text.progmem	00000030 secp384r1_b
6003554c l     O .text.progmem	00000030 secp384r1_n
6003557c l     O .text.progmem	00000030 secp384r1_gx
600355ac l     O .text.progmem	00000030 secp384r1_gy
00000000 l    df *ABS*	00000000 entropy.c
6000dc88 l     F .text.code	0000007c entropy_update
6000dd04 l     F .text.code	000000a4 entropy_gather_internal
6000dda8 l     F .text.code	00000014 entropy_dummy_source
00000000 l    df *ABS*	00000000 gcm.c
6000e164 l     F .text.code	00000124 gcm_mult
60035d38 l     O .text.progmem	00000018 pt_index
60035d38 l     O .text.progmem	00000018 key_index
600355e0 l     O .text.progmem	00000080 last4
60035660 l     O .text.progmem	00000480 ct
60035ae0 l     O .text.progmem	00000120 tag
60035c00 l     O .text.progmem	00000018 pt_len
60035c18 l     O .text.progmem	00000018 iv_index
60035c30 l     O .text.progmem	00000018 iv_len
60035c48 l     O .text.progmem	00000018 add_index
60035c60 l     O .text.progmem	00000018 add_len
60035c78 l     O .text.progmem	000000c0 key
60035d50 l     O .text.progmem	00000180 iv
60035ed0 l     O .text.progmem	00000180 additional
60036050 l     O .text.progmem	00000180 pt
00000000 l    df *ABS*	00000000 hmac_drbg.c
6000ecdc l     F .text.code	00000020 hmac_drbg_self_test_entropy
2000cca8 l     O .bss	00000004 test_offset
600361d0 l     O .text.progmem	00000038 entropy_pr
60036208 l     O .text.progmem	00000028 entropy_nopr
60036230 l     O .text.progmem	00000050 result_nopr
60036280 l     O .text.progmem	00000050 result_pr
00000000 l    df *ABS*	00000000 md.c
600362d0 l     O .text.progmem	0000001c supported_digests
200006e4 l     O .data	00000018 CSWTCH.2
00000000 l    df *ABS*	00000000 md5.c
600362ec l     O .text.progmem	0000001c md5_test_buflen
60036308 l     O .text.progmem	00000237 md5_test_buf
60036540 l     O .text.progmem	00000070 md5_test_sum
00000000 l    df *ABS*	00000000 md_wrap.c
6000ff8c l     F .text.code	00000004 md5_starts_wrap
6000ff90 l     F .text.code	00000004 md5_update_wrap
6000ff94 l     F .text.code	00000004 md5_finish_wrap
6000ff98 l     F .text.code	00000004 md5_clone_wrap
6000ff9c l     F .text.code	00000004 md5_process_wrap
6000ffa0 l     F .text.code	00000004 sha1_starts_wrap
6000ffa4 l     F .text.code	00000004 sha1_update_wrap
6000ffa8 l     F .text.code	00000004 sha1_finish_wrap
6000ffac l     F .text.code	00000004 sha1_clone_wrap
6000ffb0 l     F .text.code	00000004 sha1_process_wrap
6000ffb4 l     F .text.code	00000006 sha224_starts_wrap
6000ffbc l     F .text.code	00000004 sha224_update_wrap
6000ffc0 l     F .text.code	00000004 sha224_finish_wrap
6000ffc4 l     F .text.code	00000006 sha224_wrap
6000ffcc l     F .text.code	00000004 sha224_clone_wrap
6000ffd0 l     F .text.code	00000004 sha224_process_wrap
6000ffd4 l     F .text.code	00000006 sha256_starts_wrap
6000ffdc l     F .text.code	00000006 sha256_wrap
6000ffe4 l     F .text.code	00000006 sha384_starts_wrap
6000ffec l     F .text.code	00000004 sha384_update_wrap
6000fff0 l     F .text.code	00000004 sha384_finish_wrap
6000fff4 l     F .text.code	00000006 sha384_wrap
6000fffc l     F .text.code	00000004 sha384_clone_wrap
60010000 l     F .text.code	00000004 sha384_process_wrap
60010004 l     F .text.code	00000006 sha512_starts_wrap
6001000c l     F .text.code	00000006 sha512_wrap
60010014 l     F .text.code	00000012 md5_ctx_free
60010028 l     F .text.code	00000012 sha1_ctx_free
6001003c l     F .text.code	00000012 sha224_ctx_free
60010050 l     F .text.code	00000012 sha384_ctx_free
60010064 l     F .text.code	00000016 md5_ctx_alloc
6001007c l     F .text.code	00000016 sha1_ctx_alloc
60010094 l     F .text.code	00000016 sha224_ctx_alloc
600100ac l     F .text.code	00000016 sha384_ctx_alloc
00000000 l    df *ABS*	00000000 oid.c
600366d0 l     O .text.progmem	00000078 oid_x509_ext
60036748 l     O .text.progmem	00000190 oid_x520_attr_type
600368d8 l     O .text.progmem	00000050 oid_pk_alg
60036928 l     O .text.progmem	00000064 oid_ecp_grp
6003698c l     O .text.progmem	00000118 oid_sig_alg
60036aa4 l     O .text.progmem	0000008c oid_md_alg
60036b30 l     O .text.progmem	00000078 oid_md_hmac
60036ba8 l     O .text.progmem	00000070 oid_ext_key_usage
60036c18 l     O .text.progmem	0000003c oid_cipher_alg
60036c54 l     O .text.progmem	0000003c oid_pkcs12_pbe_alg
00000000 l    df *ABS*	00000000 pem.c
600105a0 l     F .text.code	000000ea pem_pbkdf1
6001068c l     F .text.code	0000005c pem_des3_decrypt
600106e8 l     F .text.code	00000062 pem_aes_decrypt
00000000 l    df *ABS*	00000000 pk.c
20000734 l     O .data	00000010 CSWTCH.5
00000000 l    df *ABS*	00000000 pk_wrap.c
600110e4 l     F .text.code	0000000e rsa_can_do
600110f4 l     F .text.code	0000000a rsa_get_bitlen
60011100 l     F .text.code	00000050 rsa_verify_wrap
60011150 l     F .text.code	0000003c rsa_sign_wrap
6001118c l     F .text.code	00000048 rsa_decrypt_wrap
600111d4 l     F .text.code	00000048 rsa_encrypt_wrap
6001121c l     F .text.code	00000004 rsa_check_pair_wrap
60011220 l     F .text.code	00000028 rsa_debug
60011248 l     F .text.code	0000000c eckey_can_do
60011254 l     F .text.code	00000004 eckey_get_bitlen
60011258 l     F .text.code	00000020 ecdsa_verify_wrap
60011278 l     F .text.code	00000004 ecdsa_sign_wrap
6001127c l     F .text.code	00000050 eckey_verify_wrap
600112cc l     F .text.code	00000054 eckey_sign_wrap
60011320 l     F .text.code	00000004 eckey_check_pair
60011324 l     F .text.code	00000014 eckey_debug
60011338 l     F .text.code	0000000c eckeydh_can_do
60011344 l     F .text.code	0000000c ecdsa_can_do
60011350 l     F .text.code	0000000c rsa_alt_can_do
6001135c l     F .text.code	0000000c rsa_alt_get_bitlen
60011368 l     F .text.code	00000042 rsa_alt_sign_wrap
600113ac l     F .text.code	00000040 rsa_alt_decrypt_wrap
600113ec l     F .text.code	00000012 rsa_free_wrap
60011400 l     F .text.code	00000012 eckey_free_wrap
60011414 l     F .text.code	00000012 ecdsa_free_wrap
60011428 l     F .text.code	00000014 rsa_alt_free_wrap
6001143c l     F .text.code	0000001a rsa_alloc_wrap
60011458 l     F .text.code	00000016 eckey_alloc_wrap
60011470 l     F .text.code	00000016 ecdsa_alloc_wrap
60011488 l     F .text.code	00000008 rsa_alt_alloc_wrap
60011490 l     F .text.code	00000098 rsa_alt_check_pair
00000000 l    df *ABS*	00000000 pkcs12.c
00000000 l    df *ABS*	00000000 pkcs5.c
60036d80 l     O .text.progmem	000000c0 result_key
60036e40 l     O .text.progmem	00000018 plen
60036e58 l     O .text.progmem	00000018 slen
60036e70 l     O .text.progmem	00000018 it_cnt
60036e88 l     O .text.progmem	00000018 key_len
60036ea0 l     O .text.progmem	000000f0 salt
60036f90 l     O .text.progmem	000000c0 password
00000000 l    df *ABS*	00000000 pkparse.c
60011d0c l     F .text.code	000000b8 pk_get_rsapubkey
60011dc4 l     F .text.code	00000210 pk_parse_key_pkcs1_der
60011fd4 l     F .text.code	00000058 pk_get_pk_alg
6001202c l     F .text.code	000002f4 pk_use_ecparams
60012320 l     F .text.code	000001a8 pk_parse_key_sec1_der
600124c8 l     F .text.code	000000e8 pk_parse_key_pkcs8_unencrypted_der
600125b0 l     F .text.code	00000124 pk_parse_key_pkcs8_encrypted_der
00000000 l    df *ABS*	00000000 platform_util.c
20007c80 l     O .data	00000004 memset_func
00000000 l    df *ABS*	00000000 rsa.c
60012b64 l     F .text.code	000000a2 mgf_mask
60012c08 l     F .text.code	0000013c rsa_rsassa_pkcs1_v15_encode
60012d44 l     F .text.code	0000001e myrand
60012d64 l     F .text.code	000000c4 rsa_check_context.constprop.0
00000000 l    df *ABS*	00000000 rsa_internal.c
00000000 l    df *ABS*	00000000 sha1.c
60037050 l     O .text.progmem	0000003c sha1_test_sum
6003708c l     O .text.progmem	0000000c sha1_test_buflen
60037098 l     O .text.progmem	000000ab sha1_test_buf
00000000 l    df *ABS*	00000000 sha256.c
60037144 l     O .text.progmem	00000100 K
60037244 l     O .text.progmem	000000c0 sha256_test_sum
60037304 l     O .text.progmem	0000000c sha256_test_buflen
60037310 l     O .text.progmem	000000ab sha256_test_buf
00000000 l    df *ABS*	00000000 sha512.c
600373c0 l     O .text.progmem	00000280 K
60037640 l     O .text.progmem	00000180 sha512_test_sum
600377c0 l     O .text.progmem	0000000c sha512_test_buflen
600377cc l     O .text.progmem	00000153 sha512_test_buf
00000000 l    df *ABS*	00000000 ssl_cache.c
00000000 l    df *ABS*	00000000 ssl_ciphersuites.c
60037c60 l     O .text.progmem	00001060 ciphersuite_definitions
2000ca84 l     O .bss	0000020c supported_ciphersuites
2000cc94 l     O .bss	00000004 supported_init
60037920 l     O .text.progmem	00000340 ciphersuite_preference
00000000 l    df *ABS*	00000000 ssl_cli.c
60018630 l     F .text.code	000000e0 ssl_write_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_srv.c
60019fb0 l     F .text.code	00000040 ssl_parse_client_dh_public
60019ff0 l     F .text.code	000000d0 ssl_parse_client_psk_identity
6001a0c0 l     F .text.code	00000198 ssl_parse_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_tls.c
6001bc58 l     F .text.code	00000040 ssl_update_checksum_start
6001bc98 l     F .text.code	00000024 ssl_update_checksum_md5sha1
6001bcbc l     F .text.code	0000004e ssl_calc_verify_tls
6001bd0c l     F .text.code	00000098 ssl_calc_finished_tls
6001bda4 l     F .text.code	0000000a ssl_update_checksum_sha256
6001bdb0 l     F .text.code	0000002c ssl_calc_verify_tls_sha256
6001bddc l     F .text.code	00000078 ssl_calc_finished_tls_sha256
6001be54 l     F .text.code	0000000a ssl_update_checksum_sha384
6001be60 l     F .text.code	0000002c ssl_calc_verify_tls_sha384
6001be8c l     F .text.code	0000007c ssl_calc_finished_tls_sha384
6001bf08 l     F .text.code	00000008 ssl_cookie_write_dummy
6001bf10 l     F .text.code	00000008 ssl_cookie_check_dummy
6001bf18 l     F .text.code	00000074 ssl_swap_epochs
6001bf8c l     F .text.code	00000124 tls_prf_generic
6001c0b0 l     F .text.code	00000022 tls_prf_sha256
6001c0d4 l     F .text.code	00000022 tls_prf_sha384
6001c0f8 l     F .text.code	00000210 tls1_prf
6001c308 l     F .text.code	00000094 ssl_session_copy
6001ce54 l     F .text.code	000001bc ssl_handshake_init
6001d0b8 l     F .text.code	0000012c ssl_session_reset_int
6001d1e8 l     F .text.code	00000044 ssl_start_renegotiation
6001dfb4 l     F .text.code	0000004a ssl_resend_hello_request
6001e088 l     F .text.code	00000066 ssl_check_ctr_renegotiate
6001e0f0 l     F .text.code	0000008c ssl_write_real
20007cc4 l     O .data	00000018 ssl_preset_default_hashes
20007cdc l     O .data	0000000c ssl_preset_suiteb_ciphersuites
20007ce8 l     O .data	00000003 ssl_preset_suiteb_curves
20007cec l     O .data	0000000c ssl_preset_suiteb_hashes
200006d4 l     O .data	00000010 CSWTCH.158
20000758 l     O .data	00000010 CSWTCH.72
00000000 l    df *ABS*	00000000 x509.c
00000000 l    df *ABS*	00000000 x509_crt.c
60020f14 l     F .text.code	0000004e x509_profile_check_key
60020f64 l     F .text.code	00000066 x509_crt_check_signature
60020fcc l     F .text.code	000000b8 x509_name_cmp
60021084 l     F .text.code	000000b0 x509_crt_find_parent_in
60021134 l     F .text.code	000000ba x509_crt_check_cn
60038cc0 l     O .text.progmem	000000a8 x509_crt_verify_strings
00000000 l    df *ABS*	00000000 tempmon.c
2000c9f0 l     O .bss	00000004 s_hotCount
2000c9f4 l     O .bss	00000004 s_hotTemp
2000c9f8 l     O .bss	00000004 s_hot_ROOM
2000c9fc l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00018768 l     F .text.itcm	00000088 schedule_transfer
000187f0 l     F .text.itcm	00000036 run_callbacks
00018828 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000c454 l     O .bss	00000008 endpoint0_buffer
2000c45c l     O .bss	00000004 endpoint0_notify_mask
2000ab00 l     O .bss	00000008 endpoint0_setupdata
2000c460 l     O .bss	00000004 endpointN_notify_mask
2000c9a4 l     O .bss	00000008 reply_buffer
2000ccd5 l     O .bss	00000001 sof_usage
2000ccdc l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2000ccd0 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000e0 l     F .text.itcm	00000000 register_tm_clones
00000104 l     F .text.itcm	00000000 frame_dummy
2000c98c l     O .bss	00000000 object.0
60023070 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 RJI.ino.cpp
000002e0 l     F .text.itcm	00000038 Settings::write(unsigned char*, unsigned char, int) [clone .constprop.0]
00000534 l     F .text.itcm	00000040 void Debug::printInfo<char const*, char const*>(char const*, char const*) [clone .constprop.0]
00000574 l     F .text.itcm	00000064 void Debug::printInfo<char const*, char const*, char const*, char const*>(char const*, char const*, char const*, char const*) [clone .isra.0]
000006c4 l     F .text.itcm	00000110 Network::pollWebServer() [clone .isra.0]
60023088 l     O .text.progmem	0000930f webpageA
000007d4 l     F .text.itcm	0000079c Settings::printSettings() [clone .isra.0]
00001564 l     F .text.itcm	000000c8 bool ArduinoJson::V721PB22::detail::VisitorAdapter<ArduinoJson::V721PB22::detail::JsonVariantCopier>::visit<ArduinoJson::V721PB22::JsonString>(ArduinoJson::V721PB22::JsonString const&) [clone .isra.0]
00003cec l     F .text.itcm	000000d4 Settings::setEngineer(int, ArduinoJson::V721PB22::JsonDocument) [clone .isra.0]
000050f4 l     F .text.itcm	00000a44 ArduinoJson::V721PB22::DeserializationError::Code ArduinoJson::V721PB22::detail::JsonDeserializer<ArduinoJson::V721PB22::detail::Reader<String, void> >::parseVariant<ArduinoJson::V721PB22::detail::AllowAllFilter>(ArduinoJson::V721PB22::detail::VariantData&, ArduinoJson::V721PB22::detail::AllowAllFilter, ArduinoJson::V721PB22::DeserializationOption::NestingLimit) [clone .isra.0]
00005cf4 l     F .text.itcm	0000051c ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::result_type ArduinoJson::V721PB22::detail::VariantData::accept<ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> > >(ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >&, ArduinoJson::V721PB22::detail::ResourceManager const*) const [clone .isra.0]
0000764c l     F .text.itcm	000005a8 ArduinoJson::V721PB22::detail::VisitorAdapter<ArduinoJson::V721PB22::detail::JsonVariantCopier>::result_type ArduinoJson::V721PB22::detail::VariantData::accept<ArduinoJson::V721PB22::detail::VisitorAdapter<ArduinoJson::V721PB22::detail::JsonVariantCopier> >(ArduinoJson::V721PB22::detail::VisitorAdapter<ArduinoJson::V721PB22::detail::JsonVariantCopier>&, ArduinoJson::V721PB22::detail::ResourceManager const*) const [clone .isra.0]
00008980 l     F .text.itcm	00000188 _GLOBAL__sub_I_DebugLight
00000000 l    df *ABS*	00000000 NativeEthernet.cpp
00009228 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN13EthernetClass17_dnsServerAddressE
2000be04 l     O .bss	00000004 guard variable for EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
2000bea0 l     O .bss	00000010 EthernetClass::link_callback(void*, fnet_bool_t, void*)::dhcp_params
2000beb0 l     O .bss	00000004 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
20001ba8 l     O .data	00000010 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::teensy_mutex_api
20001bb8 l     O .data	00000008 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::timer_api
20001bc0 l     O .data	00000010 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::teensy_mutex_api
20001bd0 l     O .data	00000008 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::timer_api
00000000 l    df *ABS*	00000000 crypto.cpp
00013028 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
000141b8 l     F .text.itcm	00000034 _GLOBAL__sub_I__ZN10websockets6crypto9internals13base64_encodeB5cxx11EPKhj
2000be14 l     O .bss	00000018 websockets::crypto::internals::base64_chars
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
00017578 l     F .text.itcm	00000084 pit_isr()
000175fc l     F .text.itcm	00000020 __tcf_0
00017790 l     F .text.itcm	0000002c _GLOBAL__sub_I__ZN13IntervalTimer14nvic_prioritesE
2000a8e0 l     O .bss	00000060 funct_table
00000000 l    df *ABS*	00000000 eh_alloc.o
0001a4f0 l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0001a578 l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0001a620 l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 certs.c
60032354 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha1
60032870 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha256
00000000 l    df *ABS*	00000000 usb_desc.c
20007814 l     O .data	00000012 device_descriptor
20007c84 l     O .data	00000028 microsoft_os_compatible_id_desc
20007cac l     O .data	00000012 microsoft_os_string_desc
60038e94 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
0001825c l     F .text.itcm	00000002 dummy_isr
20000744 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 Bounce.cpp
00000000 l    df *ABS*	00000000 NativeDns.cpp
00000000 l    df *ABS*	00000000 NativeEthernetClient.cpp
20007d10 l     O .data	00000001 EthernetClient::connect(IPAddress, unsigned short)::first_call
20007d11 l     O .data	00000001 EthernetClient::connect(char const*, unsigned short)::first_call
00000000 l    df *ABS*	00000000 NativeEthernetServer.cpp
00000000 l    df *ABS*	00000000 Nativesocket.cpp
20000674 l     O .data	00000005 CSWTCH.117
00000000 l    df *ABS*	00000000 fnet_cpu.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_eth.c
0000a4f0 l     F .text.itcm	00000004 fnet_mimxrt_eth_phy_init
0000a4f4 l     F .text.itcm	0000016c fnet_mimxrt_eth_init
200078e8 l     O .data	0000011c fnet_mimxrt_eth0_if
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr_inst.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_serial.cpp
00000000 l    df *ABS*	00000000 fnet_fec.c
0000a6f4 l     F .text.itcm	00000042 _fnet_fec_get_hw_addr
0000a738 l     F .text.itcm	00000026 _fnet_fec_get_statistics
0000a760 l     F .text.itcm	0000001e fnet_fec_isr_handler_top
0000a780 l     F .text.itcm	00000064 _fnet_fec_phy_read
0000a7e4 l     F .text.itcm	00000060 _fnet_fec_phy_write
0000a844 l     F .text.itcm	00000070 _fnet_fec_set_hw_addr
0000a8b4 l     F .text.itcm	00000028 _fnet_fec_release
0000a8dc l     F .text.itcm	0000019c _fnet_fec_init
0000ab18 l     F .text.itcm	0000002e fnet_fec_isr_handler_bottom
0000aa78 l     F .text.itcm	0000009e _fnet_fec_input
00000000 l    df *ABS*	00000000 fnet_dhcp.c
00000000 l    df *ABS*	00000000 fnet_dhcp_cln.c
0000ad68 l     F .text.itcm	0000013e _fnet_dhcp_cln_parse_options
0000aea8 l     F .text.itcm	000000dc _fnet_dhcp_cln_receive_message
0000af84 l     F .text.itcm	00000204 _fnet_dhcp_cln_send_message
0000b188 l     F .text.itcm	0000011c _fnet_dhcp_cln_set_state
0000b2a4 l     F .text.itcm	0000006c _fnet_dhcp_cln_apply_params
0000b310 l     F .text.itcm	00000294 _fnet_dhcp_cln_poll
2000c478 l     O .bss	000002cc fnet_dhcp_cln_if_list
20007884 l     O .data	00000006 fnet_dhcp_cln_parameter_request_list
00000000 l    df *ABS*	00000000 fnet_dns.c
0000b718 l     F .text.itcm	00000068 _fnet_dns_cmp_name
0000b9e8 l     F .text.itcm	000001e0 _fnet_dns_poll
2000c1dc l     O .bss	00000270 dns_if_list
00000000 l    df *ABS*	00000000 fnet_service.c
2000c7f0 l     O .bss	00000090 fnet_poll_if
2000c884 l     O .bss	00000004 fnet_service_mutex
00000000 l    df *ABS*	00000000 fnet_link.c
0000bc90 l     F .text.itcm	00000022 _fnet_link_poll
2000c7c4 l     O .bss	00000018 fnet_link_if_list
00000000 l    df *ABS*	00000000 fnet_tls.c
0000bd08 l     F .text.itcm	0000002a _fnet_tls_mbedtls_entropy_poll
0000bd34 l     F .text.itcm	00000038 _fnet_tls_mbedtls_recv
0000bd6c l     F .text.itcm	00000038 _fnet_tls_mbedtls_send
2000ab08 l     O .bss	00000e20 fnet_tls_if_list
2000b928 l     O .bss	00000318 fnet_tls_socket_if_list
00000000 l    df *ABS*	00000000 fnet_arp.c
0000c150 l     F .text.itcm	00000004 _fnet_arp_ip4_addr_conflict
0000c154 l     F .text.itcm	00000040 _fnet_arp_timer
0000c194 l     F .text.itcm	000000c8 _fnet_arp_add_entry
00000000 l    df *ABS*	00000000 fnet_checksum.c
0000c5f8 l     F .text.itcm	00000104 _fnet_checksum32_low
0000c6fc l     F .text.itcm	00000068 _fnet_checksum32_nb
00000000 l    df *ABS*	00000000 fnet_error.c
2000ccc8 l     O .bss	00000001 FNET_ERR_NUMBER
00000000 l    df *ABS*	00000000 fnet_eth.c
2000c744 l     O .bss	00000004 fnet_eth_number
00000000 l    df *ABS*	00000000 fnet_icmp4.c
0000cbf4 l     F .text.itcm	0000005e _fnet_icmp4_output
0000cc54 l     F .text.itcm	00000086 _fnet_icmp4_notify_protocol
0000ccdc l     F .text.itcm	000000e8 _fnet_icmp4_input
20000724 l     O .data	0000000d CSWTCH.42
00000000 l    df *ABS*	00000000 fnet_inet.c
0000ced0 l     F .text.itcm	00000096 _fnet_inet_pton_ip4
00000000 l    df *ABS*	00000000 fnet_ip.c
00000000 l    df *ABS*	00000000 fnet_ip4.c
0000d06c l     F .text.itcm	00000064 _fnet_ip4_frag_list_free.part.0
0000d0d0 l     F .text.itcm	00000034 _fnet_ip4_timer
0000d388 l     F .text.itcm	000004b0 _fnet_ip4_input_low
0000d838 l     F .text.itcm	0000007c _fnet_ip4_netif_output
2000c8c8 l     O .bss	00000004 ip_event
2000c8cc l     O .bss	00000004 ip_frag_list_head
2000ccc0 l     O .bss	00000002 ip_id.0
2000c8d0 l     O .bss	00000008 ip_queue
2000c8d8 l     O .bss	00000004 ip_timer_ptr
00000000 l    df *ABS*	00000000 fnet_isr.c
2000c7c0 l     O .bss	00000004 fnet_isr_table
2000c7dc l     O .bss	00000004 fnet_locked
2000788c l     O .data	00000004 fnet_event_desc_last
00000000 l    df *ABS*	00000000 fnet_mempool.c
00000000 l    df *ABS*	00000000 fnet_netbuf.c
0000dfec l     F .text.itcm	00000134 _fnet_netbuf_trim.part.0
2000c7e0 l     O .bss	00000004 fnet_mempool_main
00000000 l    df *ABS*	00000000 fnet_netif.c
0000e798 l     F .text.itcm	000000cc _fnet_netif_set_ip4_addr.part.0
2000c7e4 l     O .bss	00000004 fnet_netif_callback_ip4_addr_conflict
00000000 l    df *ABS*	00000000 fnet_prot.c
20002db4 l     O .data	00000010 fnet_prot_if_list
00000000 l    df *ABS*	00000000 fnet_raw.c
0000ee5c l     F .text.itcm	00000014 _fnet_raw_attach
0000ee70 l     F .text.itcm	00000030 _fnet_raw_shutdown
0000eea0 l     F .text.itcm	000000e8 _fnet_raw_snd
0000ef88 l     F .text.itcm	0000005e _fnet_raw_rcv
0000efe8 l     F .text.itcm	00000038 _fnet_raw_connect
0000f020 l     F .text.itcm	00000024 _fnet_raw_detach
0000f044 l     F .text.itcm	0000001c _fnet_raw_release
20002dc4 l     O .data	0000002c fnet_raw_socket_api
00000000 l    df *ABS*	00000000 fnet_socket.c
2000c888 l     O .bss	00000030 fnet_socket_desc
20007d0e l     O .data	00000002 fnet_port_last
00000000 l    df *ABS*	00000000 fnet_stack.c
2000c1c4 l     O .bss	00000004 _fnet_mutex_api
2000c8b8 l     O .bss	00000004 fnet_stack_mutex
00000000 l    df *ABS*	00000000 fnet_stdlib.c
2000c880 l     O .bss	00000004 fnet_rand_seed
00000000 l    df *ABS*	00000000 fnet_tcp.c
00010804 l     F .text.itcm	0000005e _fnet_tcp_process_fin
00010864 l     F .text.itcm	0000005c _fnet_tcp_set_synopt
000108c0 l     F .text.itcm	00000088 _fnet_tcp_init_connection
00010948 l     F .text.itcm	00000064 _fnet_tcp_getsockopt
000109ac l     F .text.itcm	00000030 _fnet_tcp_accept
000109dc l     F .text.itcm	00000056 _fnet_tcp_attach
00010a34 l     F .text.itcm	000000e4 _fnet_tcp_find_socket
00010b18 l     F .text.itcm	0000009a _fnet_tcp_setsockopt
00010bb4 l     F .text.itcm	00000180 _fnet_tcp_send_seg.constprop.0
00010d34 l     F .text.itcm	00000070 _fnet_tcp_send_rstsk
00010da4 l     F .text.itcm	0000008e _fnet_tcp_send_rst
00010e34 l     F .text.itcm	00000082 _fnet_tcp_get_opt.isra.0
00010eb8 l     F .text.itcm	00000068 _fnet_tcp_init
00011448 l     F .text.itcm	00000060 _fnet_tcp_fasttimo
00012124 l     F .text.itcm	0000005c _fnet_tcp_slowtimo
00010f20 l     F .text.itcm	000000cc _fnet_tcp_close_socket
00010fec l     F .text.itcm	00000048 _fnet_tcp_abort_socket
00011034 l     F .text.itcm	00000064 _fnet_tcp_listen
00011098 l     F .text.itcm	00000050 _fnet_tcp_release
000110e8 l     F .text.itcm	00000068 _fnet_tcp_drain
00011150 l     F .text.itcm	000000a0 _fnet_tcp_control_input
000111f0 l     F .text.itcm	0000011a _fnet_tcp_send_headseg
0001130c l     F .text.itcm	00000070 _fnet_tcp_send_ack
0001137c l     F .text.itcm	000000cc _fnet_tcp_rcv
000114a8 l     F .text.itcm	000000b8 _fnet_tcp_connect
00011560 l     F .text.itcm	00000158 _fnet_tcp_send_dataseg.constprop.0.isra.0
000116b8 l     F .text.itcm	00000156 _fnet_tcp_send_anydata
00011810 l     F .text.itcm	00000062 _fnet_tcp_shutdown
00011874 l     F .text.itcm	000000d4 _fnet_tcp_close
00011948 l     F .text.itcm	00000534 _fnet_tcp_dataprocess
00011e7c l     F .text.itcm	000002a6 _fnet_tcp_slowtimosk
00012180 l     F .text.itcm	0000012c _fnet_tcp_snd
000122ac l     F .text.itcm	00000748 _fnet_tcp_input
2000c1c8 l     O .bss	00000004 _fnet_tcp_initial_seq_number
2000c8bc l     O .bss	00000004 fnet_tcp_fasttimer
2000c8c0 l     O .bss	00000004 fnet_tcp_slowtimer
20002df0 l     O .data	0000002c fnet_tcp_socket_api
00000000 l    df *ABS*	00000000 fnet_timer.c
2000c1d0 l     O .bss	00000004 _fnet_timer_head
00000000 l    df *ABS*	00000000 fnet_udp.c
00012af0 l     F .text.itcm	0000001c _fnet_udp_attach
00012b0c l     F .text.itcm	00000030 _fnet_udp_shutdown
00012b3c l     F .text.itcm	000001a2 _fnet_udp_snd
00012ce0 l     F .text.itcm	00000060 _fnet_udp_rcv
00012d40 l     F .text.itcm	0000002e _fnet_udp_connect
00012d70 l     F .text.itcm	00000024 _fnet_udp_detach
00012d94 l     F .text.itcm	0000001c _fnet_udp_release
00012db0 l     F .text.itcm	000001e8 _fnet_udp_input
00012f98 l     F .text.itcm	00000090 _fnet_udp_control_input
20002e24 l     O .data	0000002c fnet_udp_socket_api
00000000 l    df *ABS*	00000000 message.cpp
200006fc l     O .data	00000028 CSWTCH.4
00000000 l    df *ABS*	00000000 websockets_client.cpp
00014240 l     F .text.itcm	00000018 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsEvent&&, String&&)
00014258 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00014270 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
000142ac l     F .text.itcm	0000007c std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
00000000 l    df *ABS*	00000000 websockets_endpoint.cpp
00014bb0 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
2000067c l     O .data	00000018 CSWTCH.139
00000000 l    df *ABS*	00000000 websockets_server.cpp
0001619c l     F .text.itcm	00000044 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .isra.0]
000164ec l     F .text.itcm	000000dc std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) [clone .isra.0]
00000000 l    df *ABS*	00000000 ws_common.cpp
00000000 l    df *ABS*	00000000 IPAddress.cpp
00000000 l    df *ABS*	00000000 Print.cpp
000177bc l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
00017e64 l     F .text.itcm	0000005c flash_wait
2000ccd2 l     O .bss	00000001 initialized
2000ca04 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
000190cc l     F .text.itcm	00000060 rx_queue_transfer
202000a0 l     O .bss.dma	00001000 rx_buffer
0001912c l     F .text.itcm	000000b4 rx_event
000191e0 l     F .text.itcm	00000090 usb_serial_flush_callback
202010a0 l     O .bss.dma	00002000 txbuffer
00019270 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000c9c0 l     O .bss	00000004 rx_available
2000c9c4 l     O .bss	00000010 rx_count
2000ccd3 l     O .bss	00000001 rx_head
2000c9d4 l     O .bss	00000010 rx_index
2000c9e4 l     O .bss	00000009 rx_list
2000ccc2 l     O .bss	00000002 rx_packet_size
2000ccd4 l     O .bss	00000001 rx_tail
2000a980 l     O .bss	00000100 rx_transfer
2000ccd6 l     O .bss	00000001 transmit_previous_timeout
2000ccc4 l     O .bss	00000002 tx_available
2000ccd7 l     O .bss	00000001 tx_head
2000ccd8 l     O .bss	00000001 tx_noautoflush
2000ccc6 l     O .bss	00000002 tx_packet_size
2000aa80 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000cccd l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 list.o
00000000 l    df *ABS*	00000000 tree.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 functional.o
00000000 l    df *ABS*	00000000 shared_ptr.o
00000000 l    df *ABS*	00000000 string-inst.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
0001a910 l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0001a9d0 l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
0001aa18 l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
0001af9c l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 cp-demangle.o
0001b560 l     F .text.itcm	000000f0 d_make_comp
0001b650 l     F .text.itcm	00000074 d_number
0001b6c4 l     F .text.itcm	00000046 d_call_offset
0001b70c l     F .text.itcm	00000036 d_ref_qualifier
0001b744 l     F .text.itcm	000000d4 d_count_templates_scopes
0001b818 l     F .text.itcm	0000001c d_pack_length
0001b834 l     F .text.itcm	00000048 d_discriminator
0001b87c l     F .text.itcm	0000001c d_index_template_argument.part.0
0001b898 l     F .text.itcm	00000078 d_growable_string_callback_adapter
0001b910 l     F .text.itcm	00000030 next_is_type_qual.isra.0
0001b940 l     F .text.itcm	00000044 d_append_char
0001b984 l     F .text.itcm	00000036 d_lookup_template_argument
0001b9bc l     F .text.itcm	00000094 d_find_pack
0001ba50 l     F .text.itcm	00000066 d_append_string
0001bab8 l     F .text.itcm	0000005e d_template_param
0001bb18 l     F .text.itcm	00000078 d_append_num
0001bb90 l     F .text.itcm	000000e0 d_source_name
0001bc70 l     F .text.itcm	00000194 d_substitution
0001be04 l     F .text.itcm	0000086e d_type
0001d458 l     F .text.itcm	00000152 d_cv_qualifiers
0001c73c l     F .text.itcm	0000006a d_function_type
0001da20 l     F .text.itcm	0000029c d_name
0001cd68 l     F .text.itcm	00000064 d_template_args_1
0001cef8 l     F .text.itcm	000004ec d_expression_1
0001c674 l     F .text.itcm	00000080 d_parmlist
0001c6f4 l     F .text.itcm	00000048 d_bare_function_type
0001c7a8 l     F .text.itcm	00000108 d_operator_name
0001c8b0 l     F .text.itcm	00000340 d_unqualified_name
0001cbf0 l     F .text.itcm	00000120 d_expr_primary
0001dcbc l     F .text.itcm	000000f6 d_encoding.part.0
0001d5ac l     F .text.itcm	00000474 d_special_name
0001cd10 l     F .text.itcm	00000058 d_template_arg
0001cdcc l     F .text.itcm	0000012a d_prefix
0001d3e4 l     F .text.itcm	00000072 d_exprlist
0001ddb4 l     F .text.itcm	000020f4 d_print_comp_inner
0001fea8 l     F .text.itcm	0000005a d_print_comp
0002053c l     F .text.itcm	000001d8 d_print_function_type
00020ff8 l     F .text.itcm	00000254 d_maybe_print_fold_expression
0002124c l     F .text.itcm	000001e4 d_maybe_print_designated_init
00020f1c l     F .text.itcm	000000da d_print_subexpr
00020b24 l     F .text.itcm	00000076 d_print_expr_op
0001ff04 l     F .text.itcm	00000638 d_print_mod
0002095c l     F .text.itcm	000001c8 d_print_array_type
00020714 l     F .text.itcm	00000248 d_print_mod_list
00020b9c l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
000214f4 l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 unwind-arm.o
00021cc0 l     F .text.itcm	00000012 selfrel_offset31
00021cd4 l     F .text.itcm	0000005c search_EIT_table
00021d30 l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
00021d58 l     F .text.itcm	00000098 get_eit_entry
00021df0 l     F .text.itcm	00000058 restore_non_core_regs
00021e48 l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
00021e54 l     F .text.itcm	00000002 _Unwind_DebugHook
00021e58 l     F .text.itcm	0000003a unwind_phase2
00021e94 l     F .text.itcm	000000ca unwind_phase2_forced
00022070 l     F .text.itcm	0000001a _Unwind_GetGR
000220bc l     F .text.itcm	00000018 _Unwind_SetGR
00022158 l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
00022874 l     F .text.itcm	00000038 next_unwind_byte
000228ac l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
000228c8 l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-calloc.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-printf.o
00000000 l    df *ABS*	00000000 libc_a-vfprintf.o
00024dc4 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00024e44 l     F .text.itcm	00000076 __sprint_r.part.0
00025e60 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-putchar.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-puts.o
00000000 l    df *ABS*	00000000 libc_a-rand.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00026634 l     F .text.itcm	00000018 stdio_exit_handler
0002664c l     F .text.itcm	00000040 cleanup_stdio
0002668c l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-strstr.o
00027258 l     F .text.itcm	000000c6 critical_factorization
00027320 l     F .text.itcm	000001f8 two_way_long_needle
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00027e00 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-strnlen.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
0002b8a0 l     F .text.itcm	00000008 __mbedtls_ssl_read_veneer
0002b8a8 l     F .text.itcm	00000008 __mbedtls_ssl_cache_free_veneer
0002b8b0 l     F .text.itcm	00000008 __mbedtls_ssl_config_free_veneer
0002b8b8 l     F .text.itcm	00000008 __mbedtls_ssl_conf_rng_veneer
0002b8c0 l     F .text.itcm	00000008 __mbedtls_ssl_conf_own_cert_veneer
0002b8c8 l     F .text.itcm	00000008 __mbedtls_pk_init_veneer
0002b8d0 l     F .text.itcm	00000008 __mbedtls_ssl_setup_veneer
0002b8d8 l     F .text.itcm	00000008 __mbedtls_ssl_close_notify_veneer
0002b8e0 l     F .text.itcm	00000008 __mbedtls_ssl_conf_ca_chain_veneer
0002b8e8 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_seed_veneer
0002b8f0 l     F .text.itcm	00000008 __mbedtls_ssl_config_defaults_veneer
0002b8f8 l     F .text.itcm	00000008 __mbedtls_ssl_conf_session_cache_veneer
0002b900 l     F .text.itcm	00000008 __mbedtls_x509_crt_free_veneer
0002b908 l     F .text.itcm	00000008 __mbedtls_ssl_conf_authmode_veneer
0002b910 l     F .text.itcm	00000008 __mbedtls_ssl_handshake_veneer
0002b918 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0002b920 l     F .text.itcm	00000008 __mbedtls_entropy_add_source_veneer
0002b928 l     F .text.itcm	00000008 __mbedtls_ssl_cache_init_veneer
0002b930 l     F .text.itcm	00000008 ___init_veneer
0002b938 l     F .text.itcm	00000008 __mbedtls_ssl_set_bio_veneer
0002b940 l     F .text.itcm	00000008 __mbedtls_entropy_free_veneer
0002b948 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_free_veneer
0002b950 l     F .text.itcm	00000008 __mbedtls_pk_parse_key_veneer
0002b958 l     F .text.itcm	00000008 __mbedtls_ssl_set_hostname_veneer
0002b960 l     F .text.itcm	00000008 __mbedtls_pk_free_veneer
0002b968 l     F .text.itcm	00000008 __mbedtls_ssl_config_init_veneer
0002b970 l     F .text.itcm	00000008 __mbedtls_x509_crt_init_veneer
0002b978 l     F .text.itcm	00000008 __mbedtls_ssl_write_veneer
0002b980 l     F .text.itcm	00000008 __mbedtls_ssl_free_veneer
0002b988 l     F .text.itcm	00000008 __mbedtls_entropy_init_veneer
0002b990 l     F .text.itcm	00000008 __mbedtls_x509_crt_parse_veneer
0002b998 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_init_veneer
60022fc0 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60022fc8 l     F .text.code	00000008 __memset_veneer
60022fd0 l     F .text.code	00000008 __set_arm_clock_veneer
60022fd8 l     F .text.code	00000008 __calloc_veneer
60022fe0 l     F .text.code	00000008 __snprintf_veneer
60022fe8 l     F .text.code	00000008 __pwm_init_veneer
60022ff0 l     F .text.code	00000008 __main_veneer
60022ff8 l     F .text.code	00000008 __strstr_veneer
60023000 l     F .text.code	00000008 __puts_veneer
60023008 l     F .text.code	00000008 __memmove_veneer
60023010 l     F .text.code	00000008 __printf_veneer
60023018 l     F .text.code	00000008 __memcmp_veneer
60023020 l     F .text.code	00000008 __strcmp_veneer
60023028 l     F .text.code	00000008 ____aeabi_uldivmod_veneer
60023030 l     F .text.code	00000008 __delay_veneer
60023038 l     F .text.code	00000008 __memcpy_veneer
60023040 l     F .text.code	00000008 __sm_set_pool_veneer
60023048 l     F .text.code	00000008 __strlen_veneer
60023050 l     F .text.code	00000008 __free_veneer
60023058 l     F .text.code	00000008 __putchar_veneer
60023060 l     F .text.code	00000008 __rand_veneer
60023068 l     F .text.code	00000008 ____libc_init_array_veneer
00019e34 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
200017f4 g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
6001cd20 g     F .text.code	00000028 mbedtls_ssl_session_free
000001e8  w    F .text.itcm	0000001e websockets::network::Teensy41TcpClient::read(unsigned char*, unsigned long)
0001b340 g     F .text.itcm	00000040 std::logic_error::~logic_error()
00018364 g     F .text.itcm	00000010 main
0002195c g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20001a0c g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
20007c7c g     O .data	00000004 mbedtls_test_srv_key
00019e04 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
60008940 g     F .text.code	00000012 mbedtls_ctr_drbg_random
00000128  w    F .text.itcm	00000006 websockets::network::Teensy41TcpClient::getSocket() const
00019428 g     F .text.itcm	00000002 usb_serial_reset
0001b4d0 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
6001c39c g     F .text.code	0000000a mbedtls_ssl_init
60016384 g     F .text.code	00000786 mbedtls_internal_sha256_process
600032a8 g     F .text.code	00000050 mbedtls_asn1_write_ia5_string
000276a0 g     F .text.itcm	00000024 _sbrk_r
6000f638 g     F .text.code	0000000a mbedtls_md5_free
600101a0 g     F .text.code	00000044 mbedtls_oid_get_x509_ext_type
60016d40 g     F .text.code	00000004 mbedtls_sha256_update
0002b714 g     F .text.itcm	00000024 _wcsnrtombs_r
000276c4 g     F .text.itcm	0000002c _write_r
6000ed04 g     F .text.code	00000004 mbedtls_hmac_drbg_set_prediction_resistance
000150b0 g     F .text.itcm	00000060 websockets::internals::readExtendedPayloadLength(websockets::network::TcpClient&, websockets::internals::Header const&)
20001778 g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
00000454  w    F .text.itcm	00000050 websockets::network::Teensy41TcpServer::poll()
6000c92c g     F .text.code	0000003c mbedtls_ecp_check_privkey
000160e4  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
20200000 g     O .bss.dma	00000004 EthernetClass::socket_buf_transmit
20002e74 g     O .data	00000004 mbedtls_test_srv_crt_len
60020354 g     F .text.code	000000aa mbedtls_ssl_get_key_exchange_md_tls1_2
6001c874 g     F .text.code	00000034 mbedtls_ssl_conf_max_frag_len
000165c8 g     F .text.itcm	00000444 websockets::recvHandshakeRequest(websockets::network::TcpClient&)
0001793c g     F .text.itcm	00000038 String::String(String const&)
0000cab4 g     F .text.itcm	00000034 _fnet_eth_is_connected
0000d8b4 g     F .text.itcm	0000026c _fnet_ip4_output
0002196c g     F .text.itcm	0000005a .hidden __floatdidf
000097c4  w    F .text.itcm	00000050 EthernetClient::operator==(bool)
00026d8c g     F .text.itcm	00000060 memcmp
00014d40 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
0000fc34 g     F .text.itcm	000000e0 fnet_socket_recvfrom
2000be60 g     O .bss	00000004 EventResponder::firstYield
6001d8c0 g     F .text.code	00000034 mbedtls_ssl_update_handshake_status
600110c4 g     F .text.code	00000014 mbedtls_pk_get_name
6000f578 g     F .text.code	00000034 mbedtls_md_hmac_reset
00000f94  w    F .text.itcm	000000b4 ArduinoJson::V721PB22::detail::ResourceManager::~ResourceManager()
0000ea80 g     F .text.itcm	0000001c fnet_netif_get_ip4_addr_type
600019cc g     F .text.code	000004a4 mbedtls_internal_aes_encrypt
20001ac8  w    O .data	00000014 vtable for ArduinoJson::V721PB22::detail::DefaultAllocator
60020d84 g     F .text.code	0000004c mbedtls_x509_get_serial
0002b5e0 g     F .text.itcm	0000002c _read_r
6000f650 g     F .text.code	00000034 mbedtls_md5_starts_ret
0000f430 g     F .text.itcm	000000ac _fnet_socket_get_uniqueport
0000a2e0 g     F .text.itcm	00000064 EthernetClass::socketConnect(unsigned char, unsigned char*, unsigned short)
000276f0 g     F .text.itcm	0000000c __errno
00014e28 g     F .text.itcm	000001d0 websockets::internals::WebsocketsEndpoint::getHeader[abi:cxx11](unsigned long long, unsigned char, bool, bool)
6001c440 g     F .text.code	00000006 mbedtls_ssl_conf_dtls_badmac_limit
60008cac g     F .text.code	00000008 mbedtls_des_init
0000bc44 g     F .text.itcm	00000018 fnet_service_unregister
6000b954 g     F .text.code	00000034 mbedtls_ecp_keypair_init
0002b0d4 g     F .text.itcm	00000154 __mdiff
00014238  w    F .text.itcm	00000006 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
60011000 g     F .text.code	00000028 mbedtls_pk_decrypt
0000021c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
0000ca94 g     F .text.itcm	0000001e _fnet_eth_phy_write
2000cccc g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
200017b8 g     O .data	0000000c typeinfo for std::bad_exception
00027f28 g     F .text.itcm	00000cec _dtoa_r
60009de0 g     F .text.code	00000008 mbedtls_dhm_init
20001af0 g     O .data	00000014 vtable for std::length_error
00022ba4 g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
6000fe50 g     F .text.code	00000030 mbedtls_md5_starts
60018520 g     F .text.code	00000030 mbedtls_ssl_ciphersuite_from_string
00014c7c g     F .text.itcm	0000006c websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
600102ec g     F .text.code	0000003c mbedtls_oid_get_oid_by_ec_grp
60011028 g     F .text.code	00000028 mbedtls_pk_encrypt
0000f8e4 g     F .text.itcm	00000054 fnet_socket_close
60010edc g     F .text.code	000000c4 mbedtls_pk_verify_ext
000002b8  w    F .text.itcm	00000006 ArduinoJson::V721PB22::detail::DefaultAllocator::allocate(unsigned int)
60008740 g     F .text.code	0000001c mbedtls_ctr_drbg_free
2000c9bc g     O .bss	00000004 resetTeensy
0000df90 g     F .text.itcm	0000005c _fnet_mempool_malloc_max
00018700  w    F .text.itcm	00000004 abort
00009f48 g     F .text.itcm	00000068 EthernetServer::write(unsigned char const*, unsigned int)
2000c464 g     O .bss	00000004 errno
0000ca74 g     F .text.itcm	0000001e _fnet_eth_phy_read
6000fe84 g     F .text.code	00000004 mbedtls_md5_finish
0000c784 g     F .text.itcm	00000030 _fnet_checksum_pseudo_netbuf_start
0002b090 g     F .text.itcm	00000042 __mcmp
000100c4 g     F .text.itcm	00000026 _fnet_socket_buffer_release
00028ef0 g     F .text.itcm	00001b44 _svfprintf_r
600099bc g     F .text.code	00000384 mbedtls_des_self_test
600035ac g     F .text.code	00000170 mbedtls_base64_decode
00025ff8 g     F .text.itcm	00000018 realloc
600077f4 g     F .text.code	00000184 mbedtls_ccm_self_test
6000e770 g     F .text.code	00000076 mbedtls_gcm_auth_decrypt
200019e0 g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
0001a900 g     F .text.itcm	00000008 __cxa_get_globals_fast
60023088 g       .text.code	00000000 __init_array_end
0001761c g     F .text.itcm	00000104 IntervalTimer::beginCycles(teensy::inplace_function<void (), 16u, 8u>, unsigned long)
20002d6c g     O .data	00000006 fnet_eth_null_addr
00019bd0 g     F .text.itcm	00000022 std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
0002b564 g     F .text.itcm	0000002c _fstat_r
00014ba8  w    F .text.itcm	00000006 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
60015f9c g     F .text.code	00000088 mbedtls_sha1_update_ret
60009000 g     F .text.code	0000045e mbedtls_des3_crypt_ecb
0000042c  w    F .text.itcm	00000026 Logic::~Logic()
60006274 g     F .text.code	000003fc mbedtls_mpi_self_test
0000dd24 g     F .text.itcm	0000005c fnet_isr_unregister
0000a660 g     F .text.itcm	0000000c fnet_cpu_isr
6001e5b8 g     F .text.code	0000008c mbedtls_ssl_check_cert_usage
00010278 g     F .text.itcm	00000016 fnet_socket_addr_is_unspecified
6000cb38 g     F .text.code	00000384 mbedtls_ecp_self_test
60003f80 g     F .text.code	000000ce mbedtls_mpi_read_binary
600132dc g     F .text.code	00000004 mbedtls_rsa_get_len
0000cf6c g     F .text.itcm	0000004c _fnet_ip_queue_append
000218d4 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001a768 g     F .text.itcm	00000070 __gnu_end_cleanup
0000e6a8 g     F .text.itcm	00000030 _fnet_netbuf_concat
60004f3c g     F .text.code	0000007e mbedtls_mpi_mod_int
00003dc0  w    F .text.itcm	00000228 int ArduinoJson::V721PB22::detail::VariantRefBase<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::as<int>() const
20007270 g     O .data	00000004 IntervalTimer::nvic_priorites
00021658 g     F .text.itcm	0000027a .hidden __aeabi_dsub
0001b040 g     F .text.itcm	00000038 __cxa_throw
00027c9c g     F .text.itcm	0000004c _wcrtomb_r
6000efb8 g     F .text.code	00000220 mbedtls_hmac_drbg_self_test
60007e30 g     F .text.code	00000224 mbedtls_cipher_update
2000be48 g     O .bss	00000004 EthernetClass::stack_heap_size
0000c9fc g     F .text.itcm	0000003c _fnet_eth_multicast_leave_ip4
6001c9c4 g     F .text.code	0000004c mbedtls_ssl_get_record_expansion
60004148 g     F .text.code	00000092 mbedtls_mpi_shift_r
600310e4 g     O .text.progmem	000006ab mbedtls_test_srv_key_rsa
00017df4 g     F .text.itcm	00000070 pinMode
00008ca8  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#4}::_FUN(void*)
0000b5a4 g     F .text.itcm	000000d4 fnet_dhcp_cln_init
6000997c g     F .text.code	0000001e mbedtls_des3_set3key_enc
2000cd00 g       .bss	00000000 _ebss
60002490 g     F .text.code	00000014 mbedtls_aes_crypt_ecb
0000e408 g     F .text.itcm	00000148 _fnet_netbuf_pullup
60030bc4 g     O .text.progmem	00000004 mbedtls_test_cli_crt_rsa_len
6000a294 g     F .text.code	0000005c mbedtls_dhm_free
00027aec g     F .text.itcm	00000002 __retarget_lock_release_recursive
000013d8  w    F .text.itcm	0000008c ArduinoJson::V721PB22::detail::StringBuilder::append(char)
00022754 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
60018044 g     F .text.code	0000012c mbedtls_sha512_ret
6000efa0 g     F .text.code	00000018 mbedtls_hmac_drbg_free
6000f684 g     F .text.code	00000694 mbedtls_internal_md5_process
600040a0 g     F .text.code	000000a6 mbedtls_mpi_shift_l
60020a3c g     F .text.code	00000040 mbedtls_x509_get_sig
20002dac g     O .data	00000008 fnet_fec_eth_api
600227f4 g     F .text.code	00000002 startup_default_early_hook
0000927c  w    F .text.itcm	00000004 EthernetClient::setConnectionTimeout(unsigned short)
6000ace0 g     F .text.code	00000004 mbedtls_ecdsa_init
6000a760 g     F .text.code	000001b8 mbedtls_ecdsa_sign
00000140  w    F .text.itcm	00000008 ArduinoJson::V721PB22::detail::DefaultAllocator::reallocate(void*, unsigned int)
0002208c g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
6001e52c g     F .text.code	0000004c mbedtls_ssl_set_calc_verify_md
60002bd0 g     F .text.code	00000064 mbedtls_asn1_get_bitstring
00003454  w    F .text.itcm	000001b0 ArduinoJson::V721PB22::detail::MemoryPoolList<ArduinoJson::V721PB22::detail::ResourceManager::SlotData>::allocSlot(ArduinoJson::V721PB22::Allocator*)
200017d0  w    O .data	00000008 typeinfo for std::_Sp_make_shared_tag
0000c7fc g     F .text.itcm	0000008e _fnet_eth_input
60003cc0 g     F .text.code	0000003a mbedtls_mpi_swap
00008cac  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00008f98 g     F .text.itcm	0000023c EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)
00015524 g     F .text.itcm	00000020 websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool)
6000999c g     F .text.code	00000020 mbedtls_des3_set3key_dec
00016164  w    F .text.itcm	00000038 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
6001449c g     F .text.code	000001f4 mbedtls_rsa_gen_key
60007c48 g     F .text.code	00000020 mbedtls_cipher_free
0000f77c g     F .text.itcm	00000168 fnet_socket_bind
000092a4 g     F .text.itcm	00000048 EthernetClient::connected()
20001bd8  w    O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<void (&)(), void (*)(), void>(void (&)())::vt
0002768c g     F .text.itcm	00000008 _localeconv_r
60031794 g     O .text.progmem	000004ad mbedtls_test_srv_crt_rsa
0002195c g     F .text.itcm	0000006a .hidden __floatundidf
00027d88 g     F .text.itcm	00000078 frexp
60003c2c g     F .text.code	00000094 mbedtls_mpi_copy
00010720 g     F .text.itcm	0000002a fnet_strnlen
0001b118 g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00015024 g     F .text.itcm	00000088 websockets::internals::readUntilSuccessfullOrError(websockets::network::TcpClient&, unsigned char*, unsigned long)
60021e80 g     F .text.code	0000000a mbedtls_x509_crt_init
6000de00 g     F .text.code	00000032 mbedtls_entropy_add_source
600058d0 g     F .text.code	0000026a mbedtls_mpi_gcd
2000178c g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
60006c70 g     F .text.code	00000128 mbedtls_camellia_crypt_ecb
60008148 g     F .text.code	00000038 mbedtls_cipher_write_tag
60001f74 g     F .text.code	0000006a mbedtls_aes_crypt_ctr
6001cd5c g     F .text.code	0000001c mbedtls_ssl_sig_hash_set_add
6001e69c g     F .text.code	0000003c mbedtls_ssl_send_flight_completed
60002eb0 g     F .text.code	0000002e mbedtls_asn1_free_named_data_list
000198f8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00016304  w    F .text.itcm	000000b0 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
60020844 g     F .text.code	00000010 mbedtls_x509_get_alg
0002201c g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
000151e4 g     F .text.itcm	00000234 websockets::internals::WebsocketsEndpoint::_recv()
00014204  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
200017ac g     O .data	0000000c typeinfo for std::length_error
0000c2bc g     F .text.itcm	00000016 _fnet_arp_release
000107f4 g     F .text.itcm	00000010 fnet_srand
60005b3c g     F .text.code	000004d4 mbedtls_mpi_inv_mod
0000bc00 g     F .text.itcm	00000044 fnet_service_register
20007124 g     O .data	00000001 String::zerotermination
0000f1e4 g     F .text.itcm	00000014 _fnet_socket_init
0001a434 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
200017e4 g     O .data	00000008 typeinfo for std::exception
00070400 g       *ABS*	00000000 _flashimagelen
60008054 g     F .text.code	000000f4 mbedtls_cipher_finish
60036cc0 g     O .text.progmem	00000030 mbedtls_ecdsa_info
200017a0 g     O .data	0000000c typeinfo for std::logic_error
600104cc g     F .text.code	0000003c mbedtls_oid_get_oid_by_md
6001054c g     F .text.code	00000054 mbedtls_oid_get_pkcs12_pbe_alg
0000d1e8 g     F .text.itcm	0000000e _fnet_ip4_will_fragment
60038d78 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_suiteb
0000e88c g     F .text.itcm	00000024 fnet_netif_get_by_number
0001a854 g     F .text.itcm	0000008a __cxa_end_catch
20001b90  w    O .data	00000018 ArduinoJson::V721PB22::detail::FloatTraits<float, 4u>::positiveBinaryPowersOfTen()::factors
0001a2c8  w    F .text.itcm	00000054 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0000fdb4 g     F .text.itcm	00000108 fnet_socket_setopt
000263e8 g     F .text.itcm	00000088 snprintf
6000e724 g     F .text.code	0000004a mbedtls_gcm_crypt_and_tag
0002b9a0 g     F .fini	00000000 _fini
60033c88 g     O .text.progmem	00000004 mbedtls_test_ca_crt_ec_len
00019de4 g     F .text.itcm	00000020 std::__throw_bad_alloc()
0000febc g     F .text.itcm	00000208 fnet_socket_getopt
6000b948 g     F .text.code	0000000c mbedtls_ecp_group_init
000101cc g     F .text.itcm	00000078 _fnet_socket_buffer_read_address
6001fc28 g     F .text.code	0000041c mbedtls_ssl_parse_certificate
0001783c g     F .text.itcm	0000004c Print::print(String const&)
00008c88 g     F .text.itcm	0000000c EthernetClass::timer_get_ms()
6000ab1c g     F .text.code	0000009c mbedtls_ecdsa_write_signature
0001a8e0 g     F .text.itcm	00000002 std::exception::~exception()
6000b878 g     F .text.code	00000008 mbedtls_ecp_curve_list
0001a464 g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000242c  w    F .text.itcm	00000214 Network::sendMessageToVideoHub(char const*)
0000fd28 g     F .text.itcm	0000008c fnet_socket_getpeername
600332b0 g     O .text.progmem	000000e9 mbedtls_test_cli_key_ec
2000c7ec g     O .bss	00000004 fnet_netif_list
60002fec g     F .text.code	0000002a mbedtls_asn1_write_raw_buffer
0001903c g     F .text.itcm	0000001c usb_receive
00022808 g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
20001b34 g     O .data	00000014 vtable for std::bad_function_call
60002c84 g     F .text.code	000000b0 mbedtls_asn1_get_sequence_of
6001e4f8 g     F .text.code	00000012 mbedtls_ssl_pk_alg_from_sig
00014a90 g     F .text.itcm	0000004e websockets::WebsocketsClient::close(websockets::CloseReason)
6001d42c g     F .text.code	00000034 mbedtls_ssl_reset_checksum
0000bda4 g     F .text.itcm	00000140 fnet_tls_init
20001814 g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
0000e8d8 g     F .text.itcm	00000050 _fnet_netif_release
0001613c g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
0000bc84 g     F .text.itcm	0000000c fnet_service_mutex_unlock
0000ec24 g     F .text.itcm	0000000c _fnet_netif_join_ip4_multicast
000091d4 g     F .text.itcm	0000001c EthernetClass::localIP()
6001c828 g     F .text.code	0000000a mbedtls_ssl_conf_min_version
00001464  w    F .text.itcm	00000100 ArduinoJson::V721PB22::detail::VariantData::clear(ArduinoJson::V721PB22::detail::ResourceManager*)
6000f3ac g     F .text.code	00000006 mbedtls_md_get_type
000226e8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
0000c2d4 g     F .text.itcm	0000006c fnet_arp_get_mac
0000ecbc g     F .text.itcm	0000001a fnet_netif_get_scope_id
00001048  w    F .text.itcm	000001b8 ArduinoJson::V721PB22::detail::ResourceManager::allocExtension()
00019f10  w    F .text.itcm	0000004e std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
60006080 g     F .text.code	000001f4 mbedtls_mpi_gen_prime
6001cb10 g     F .text.code	000001a0 mbedtls_ssl_config_defaults
60004e7c g     F .text.code	0000002c mbedtls_mpi_div_int
0000e120 g     F .text.itcm	00000080 _fnet_netbuf_new
600227f4  w    F .text.code	00000002 startup_early_hook
6000c134 g     F .text.code	00000034 mbedtls_ecp_tls_read_point
60009e44 g     F .text.code	0000012c mbedtls_dhm_make_params
6001704c g     F .text.code	0000000a mbedtls_sha512_clone
00027708 g     F .text.itcm	000002dc strcmp
00008c80 g     F .text.itcm	00000004 EthernetClass::teensy_mutex_init(void**)
60018038 g     F .text.code	00000004 mbedtls_sha512_update
6001c6e4 g     F .text.code	00000006 mbedtls_ssl_conf_dhm_min_bitlen
60010db4 g     F .text.code	0000000a mbedtls_pk_init
0000d2a8 g     F .text.itcm	0000005c _fnet_ip4_multicast_join
20007800 g     O .data	00000004 __malloc_trim_threshold
60020eec g     F .text.code	00000028 mbedtls_x509_key_size_helper
0000e748 g     F .text.itcm	00000010 _fnet_free
600082b0 g     F .text.code	00000084 mbedtls_cipher_auth_decrypt
60010fa0 g     F .text.code	00000060 mbedtls_pk_sign
00009548 g     F .text.itcm	0000002c EthernetClient::read()
00018708 g     F .text.itcm	00000060 tempmonGetTemp
00009c48 g     F .text.itcm	000000f0 EthernetServer::begin()
60012eac g     F .text.code	00000074 mbedtls_rsa_import_raw
6001cb08 g     F .text.code	00000008 mbedtls_ssl_config_init
0002b46c g     F .text.itcm	000000b0 __swbuf_r
20007810 g     O .data	00000004 _impure_ptr
6000f644 g     F .text.code	0000000a mbedtls_md5_clone
00010244 g     F .text.itcm	00000020 fnet_socket_addr_is_multicast
6000b988 g     F .text.code	00000020 mbedtls_ecp_point_free
60008954 g     F .text.code	00000308 mbedtls_ctr_drbg_self_test
2000191c g     O .data	00000070 vtable for EthernetClient
6002061c g     F .text.code	00000004 mbedtls_x509_time_is_future
0002b9a4 g       .ARM.exidx	00000000 __exidx_start
00026e98 g     F .text.itcm	00000066 _fputwc_r
60007cc0 g     F .text.code	00000050 mbedtls_cipher_setkey
00009574 g     F .text.itcm	00000030 EthernetClient::peek()
6001c814 g     F .text.code	00000006 mbedtls_ssl_get_alpn_protocol
00000000 g       .text.itcm	00000000 _stext
600049e4 g     F .text.code	0000001c mbedtls_mpi_mul_int
2000185c g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
000190bc  w    F .text.itcm	00000004 usb_serial_class::flush()
00009a70 g     F .text.itcm	0000004c EthernetClient::operator==(EthernetClient const&)
00026ff8 g     F .text.itcm	000000a4 memset
600182f0 g     F .text.code	000000be mbedtls_ssl_cache_get
0000a2c4 g     F .text.itcm	0000001c EthernetClass::socketListen(unsigned char)
6000ba98 g     F .text.code	00000006 mbedtls_ecp_group_copy
2000c748 g     O .bss	00000078 fnet_ip4_multicast_list
60001000 g     O .text.headers	00000020 ImageVectorTable
20280000 g       .text.csf	00000000 _heap_end
60009460 g     F .text.code	000000c4 mbedtls_des3_crypt_cbc
0000e928 g     F .text.itcm	00000040 _fnet_netif_release_all
60006718 g     F .text.code	000004a4 mbedtls_camellia_setkey_enc
00014ae0 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
6001332c g     F .text.code	00000064 mbedtls_rsa_check_privkey
0001a8e8 g     F .text.itcm	00000008 std::bad_exception::what() const
6002025c g     F .text.code	000000f6 mbedtls_ssl_get_key_exchange_md_ssl_tls
6000168c g     F .text.code	00000228 mbedtls_aes_setkey_enc
70000000 g       .bss.extram	00000000 _extram_end
20001bf0  w    O .data	000000c9 std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
200018a8 g     O .data	00000012 typeinfo name for std::bad_exception
0001074c g     F .text.itcm	0000001a fnet_strcpy
00018f80 g     F .text.itcm	00000064 usb_config_tx
6000f3e4 g     F .text.code	00000014 mbedtls_md_finish
0001b0e8 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
60008180 g     F .text.code	00000068 mbedtls_cipher_check_tag
00019bf4 g     F .text.itcm	0000000e std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
60002a54 g     F .text.code	00000096 mbedtls_asn1_get_len
000179e4 g     F .text.itcm	000002f0 set_arm_clock
6000f5ac g     F .text.code	00000070 mbedtls_md_hmac
0000de94 g     F .text.itcm	00000088 _fnet_mempool_free
000160fc  w    F .text.itcm	00000006 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
20007280 g     O .data	00000004 __brkval
60004050 g     F .text.code	0000004e mbedtls_mpi_write_binary
6000ace4 g     F .text.code	00000004 mbedtls_ecdsa_free
2000ccdb g     O .bss	00000001 usb_high_speed
00017720 g     F .text.itcm	00000070 IntervalTimer::end()
0001a8e8 g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
60022800 g     F .text.code	00000004 startup_debug_reset
6000df1c g     F .text.code	0000000a mbedtls_entropy_update_manual
00021918 g     F .text.itcm	00000042 .hidden __extendsfdf2
000186f4  w    F .text.itcm	00000004 _isatty
00015dc4 g     F .text.itcm	00000254 websockets::internals::WebsocketsEndpoint::handleFrameInStandardMode(websockets::internals::WebsocketsFrame&)
00014494 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6001ca60 g     F .text.code	00000020 mbedtls_ssl_get_session
00014494 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
00019058 g     F .text.itcm	00000004 usb_transfer_status
60016d48 g     F .text.code	00000004 mbedtls_sha256_process
00028c14 g     F .text.itcm	000000a0 _malloc_trim_r
000190b4  w    F .text.itcm	00000004 usb_serial_class::clear()
60014a8c g     F .text.code	000001fc mbedtls_rsa_deduce_primes
00022c44 g     F .text.itcm	00000010 malloc
00002300  w    F .text.itcm	0000012c Network::reconnectToVideoHub(IPAddress, unsigned short)
0002afa0 g     F .text.itcm	000000f0 __lshift
000226f0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
0000e8b0 g     F .text.itcm	00000028 _fnet_netif_get_by_sockaddr
6001d22c g     F .text.code	00000126 mbedtls_ssl_free
20007128 g     O .data	00000120 _impure_data
00022b90 g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
00004e00  w    F .text.itcm	000002f4 ArduinoJson::V721PB22::detail::JsonDeserializer<ArduinoJson::V721PB22::detail::Reader<String, void> >::parseQuotedString()
6001c4f0 g     F .text.code	000000c0 mbedtls_ssl_conf_psk
60003f74 g     F .text.code	0000000c mbedtls_mpi_size
00000020 g     F .text.itcm	000000c0 irq_gpio6789
20007cf8  w    O .data	00000016 usb_string_serial_number
6001c448 g     F .text.code	00000006 mbedtls_ssl_conf_handshake_timeout
60022804 g     F .text.code	00000110 configure_cache
00007400  w    F .text.itcm	0000016c ArduinoJson::V721PB22::detail::VariantData* ArduinoJson::V721PB22::detail::ObjectData::addMember<ArduinoJson::V721PB22::detail::JsonStringAdapter>(ArduinoJson::V721PB22::detail::JsonStringAdapter, ArduinoJson::V721PB22::detail::ResourceManager*)
000033dc g     F .text.itcm	00000078 resetButtonFun()
0001055c g     F .text.itcm	00000018 _fnet_mutex_unlock
6000abd8 g     F .text.code	00000098 mbedtls_ecdsa_read_signature
000161ec g     F .text.itcm	00000028 websockets::WebsocketsServer::available()
6001803c g     F .text.code	00000004 mbedtls_sha512_finish
00021634 g     F .text.itcm	0000001a __cxa_current_exception_type
60015134 g     F .text.code	00000e68 mbedtls_internal_sha1_process
0000fa08 g     F .text.itcm	0000012c fnet_socket_accept
00010590 g     F .text.itcm	0000001c _fnet_stack_mutex_unlock
00008cbc g     F .text.itcm	00000002 EthernetClass::teensy_mutex_lock(void**)
00009274  w    F .text.itcm	00000004 EthernetClient::remotePort()
6001e3b8 g     F .text.code	00000104 mbedtls_ssl_psk_derive_premaster
6001c81c g     F .text.code	0000000a mbedtls_ssl_conf_max_version
600333a0 g     O .text.progmem	0000033d mbedtls_test_cli_crt_ec
0001a654 g     F .text.itcm	000000b0 __cxa_type_match
00027ce8 g     F .text.itcm	00000016 _wcsrtombs_r
6001e030 g     F .text.code	00000058 mbedtls_ssl_renegotiate
00026f00 g     F .text.itcm	000000f8 memmove
0001b200 g     F .text.itcm	00000004 std::type_info::__is_function_p() const
60008f3c g     F .text.code	000000c4 mbedtls_des_crypt_cbc
0000a66c g     F .text.itcm	00000078 fnet_cpu_isr_install
00012a38 g     F .text.itcm	00000044 _fnet_timer_poll
2000c7e8 g     O .bss	00000004 fnet_netif_default
20001a90  w    O .data	00000028 vtable for websockets::network::Teensy41TcpServer
6001c5b0 g     F .text.code	00000074 mbedtls_ssl_set_hs_psk
00017570  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#3}::_FUN(void*, void*)
600102a8 g     F .text.code	00000044 mbedtls_oid_get_ec_grp
00019e6c g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
000184a8 g     F .text.itcm	00000004 operator new(unsigned int)
00000148  w    F .text.itcm	00000006 ArduinoJson::V721PB22::detail::DefaultAllocator::deallocate(void*)
6001e368 g     F .text.code	0000001e mbedtls_ssl_write_change_cipher_spec
60006010 g     F .text.code	0000006e mbedtls_mpi_is_prime
00025fb8 g     F .text.itcm	00000040 rand
70000000 g       .bss.extram	00000000 _extram_start
60070400 g       .text.csf	00000000 __text_csf_end
6001c854 g     F .text.code	0000000e mbedtls_ssl_conf_extended_master_secret
60002e34 g     F .text.code	00000032 mbedtls_asn1_get_alg_null
00027168 g     F .text.itcm	0000008a strncmp
2000c04c g     O .bss	00000001 __lock___malloc_recursive_mutex
0001a090  w    F .text.itcm	00000058 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00021f60 g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
00008b08 g     F .text.itcm	00000028 Bounce::Bounce(unsigned char, unsigned long)
6000e554 g     F .text.code	000000fa mbedtls_gcm_update
00009abc  w    F .text.itcm	00000004 Print::availableForWrite()
2000be40 g     O .bss	00000004 EthernetClass::socket_size
6002052c g     F .text.code	000000ec mbedtls_x509_serial_gets
6000f414 g     F .text.code	000000dc mbedtls_md_hmac_starts
6000fe80 g     F .text.code	00000004 mbedtls_md5_update
000196f8 g     F .text.itcm	0000002c usb_serial_putchar
6000a670 g     F .text.code	00000030 mbedtls_ecdh_read_public
00009778  w    F .text.itcm	0000004c EthernetClient::operator!=(bool)
000226f8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
0000bf4c g     F .text.itcm	0000005a fnet_tls_set_ca_certificate
60016e30 g     F .text.code	00000204 mbedtls_sha256_self_test
00022030 g     F .text.itcm	00000002 .hidden _Unwind_Complete
6000a478 g     F .text.code	00000064 mbedtls_ecdh_compute_shared
60032d8c g     O .text.progmem	00000004 mbedtls_test_ca_crt_rsa_len
60023070 g       .text.code	00000000 __preinit_array_end
6000b880 g     F .text.code	00000040 mbedtls_ecp_grp_id_list
600143b8 g     F .text.code	00000074 mbedtls_rsa_pkcs1_verify
000279dc g     F .text.itcm	000000ba strcpy
2000be54 g     O .bss	00000004 EthernetServer::server_port
6001c498 g     F .text.code	0000000e mbedtls_ssl_conf_ciphersuites_for_version
00017d7c g     F .text.itcm	00000054 digitalWrite
0000c340 g     F .text.itcm	00000144 _fnet_arp_input
60002c34 g     F .text.code	00000050 mbedtls_asn1_get_bitstring_null
00003fe8  w    F .text.itcm	000001ac ArduinoJson::V721PB22::detail::JsonDeserializer<ArduinoJson::V721PB22::detail::Reader<String, void> >::parseNumericValue(ArduinoJson::V721PB22::detail::VariantData&)
6001ccb0 g     F .text.code	00000066 mbedtls_ssl_config_free
00022034 g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
0000021c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
000102cc g     F .text.itcm	00000024 _fnet_socket_addr_route
00000f70  w    F .text.itcm	00000022 Print::write(char const*)
0000eb10 g     F .text.itcm	00000038 _fnet_netif_set_hw_addr
600150e0 g     F .text.code	0000000a mbedtls_sha1_clone
200019ac  w    O .data	00000028 vtable for usb_serial_class
0000e30c g     F .text.itcm	00000020 _fnet_netbuf_from_buf
0000a6e4  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
20001780 g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
6000a918 g     F .text.code	000000ac mbedtls_ecdsa_sign_det
0001a428 g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
2000cca0 g     O .bss	00000004 systick_safe_read
600332ac g     O .text.progmem	00000004 mbedtls_test_cli_key_ec_len
000095f4 g     F .text.itcm	000000a0 EthernetClient::connect(char const*, unsigned short, bool)
20007264 g     O .data	00000004 __cxxabiv1::__unexpected_handler
60003bb0 g     F .text.code	0000007a mbedtls_mpi_shrink
00016104 g     F .text.itcm	00000038 websockets::WebsocketsServer::~WebsocketsServer()
20001a58  w    O .data	00000038 vtable for websockets::network::Teensy41TcpClient
60007de0 g     F .text.code	00000018 mbedtls_cipher_reset
60018598 g     F .text.code	0000001c mbedtls_ssl_get_ciphersuite_sig_alg
0000b678 g     F .text.itcm	00000024 fnet_dhcp_cln_release
60014dcc g     F .text.code	00000200 mbedtls_rsa_validate_params
60016130 g     F .text.code	00000004 mbedtls_sha1_process
0000c484 g     F .text.itcm	0000009c _fnet_arp_send_request
6002f768 g     O .text.progmem	00000004 mbedtls_test_cas_pem_len
00027694 g     F .text.itcm	0000000c __cxa_atexit
60033b18 g     O .text.progmem	00000004 mbedtls_test_ca_key_ec_len
6000b8e0 g     F .text.code	0000001c mbedtls_ecp_curve_info_from_tls_id
00014328 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
6001e7ec g     F .text.code	0000005c mbedtls_ssl_recv_flight_completed
000156f0 g     F .text.itcm	000006d4 websockets::internals::WebsocketsEndpoint::handleFrameInStreamingMode(websockets::internals::WebsocketsFrame&)
000186dc  w    F .text.itcm	00000004 _read
20007af0 g     O .data	00000080 isr_table_gpio2
6001df7c g     F .text.code	00000038 mbedtls_ssl_send_alert_message
60002b1c g     F .text.code	00000052 mbedtls_asn1_get_bool
0001905c g     F .text.itcm	00000058 usb_init_serialnumber
00000025 g       *ABS*	00000000 _teensy_model_identifier
20007b70 g     O .data	00000080 isr_table_gpio3
6000f4f0 g     F .text.code	00000028 mbedtls_md_hmac_update
00021550 g     F .text.itcm	000000e4 __cxa_call_unexpected
0002aa34 g     F .text.itcm	000000d8 __smakebuf_r
00014ae0 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
0000e9cc g     F .text.itcm	00000018 fnet_netif_set_ip4_dns
20001794 g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
20007a70 g     O .data	00000080 isr_table_gpio1
0002abd0 g     F .text.itcm	00000012 _Bfree
00027ae4 g     F .text.itcm	00000002 __retarget_lock_close_recursive
20007bf0 g     O .data	00000080 isr_table_gpio4
00022c64 g     F .text.itcm	00000560 _malloc_r
60010e70 g     F .text.code	00000012 mbedtls_pk_can_do
000188c0 g     F .text.itcm	0000002c usb_stop_sof_interrupts
20007c78 g     O .data	00000004 mbedtls_test_srv_crt
00017974 g     F .text.itcm	00000028 String::String(String&&)
0000ebfc g     F .text.itcm	00000026 fnet_netif_init
000161e0 g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
00009280 g     F .text.itcm	00000024 EthernetClient::connect(IPAddress, unsigned short, bool)
0002b51c g     F .text.itcm	00000024 strnlen
00019ec8  w    F .text.itcm	00000048 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
000186e8  w    F .text.itcm	0000000a _fstat
60010e60 g     F .text.code	00000010 mbedtls_pk_get_bitlen
0000d318 g     F .text.itcm	00000070 _fnet_ip4_addr_is_broadcast
2000190c g     O .data	0000000d typeinfo name for std::type_info
0000fc20 g     F .text.itcm	00000012 fnet_socket_send
000161e0 g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
6000875c g     F .text.code	00000004 mbedtls_ctr_drbg_set_prediction_resistance
20001adc g     O .data	00000014 vtable for std::logic_error
000145cc g     F .text.itcm	000000a8 websockets::WebsocketsClient::available(bool)
60002598 g     F .text.code	000004bc mbedtls_aes_self_test
20000310 g     O .data	00000028 __mprec_bigtens
60004360 g     F .text.code	000000a2 mbedtls_mpi_cmp_mpi
00010128 g     F .text.itcm	0000005a _fnet_socket_buffer_append_address
00026010 g     F .text.itcm	000003d8 _realloc_r
00010768 g     F .text.itcm	0000000e fnet_tolower
2000ccd1 g     O .bss	00000001 external_psram_size
0000a358 g     F .text.itcm	00000098 EthernetClass::socketRecv(unsigned char, unsigned char*, short)
6000fe8c g     F .text.code	00000060 mbedtls_md5_ret
6000a4dc g     F .text.code	0000000a mbedtls_ecdh_init
00014754 g     F .text.itcm	0000033c websockets::WebsocketsClient::poll()
60031790 g     O .text.progmem	00000004 mbedtls_test_srv_crt_rsa_len
2000c048 g     O .bss	00000001 __lock___atexit_recursive_mutex
00028ec0 g     F .text.itcm	0000002a __ascii_mbtowc
00022408  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
0000ea2c g     F .text.itcm	0000001a fnet_netif_get_ip4_subnet_mask
00022410  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
0001a3c4 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
0000ad40 g     F .text.itcm	00000026 _fnet_dhcp_add_option
60022fb4 g     F .text.code	00000000 _init
00002640  w    F .text.itcm	000003f4 Logic::parseButton(int, bool)
0000e6ec g     F .text.itcm	00000032 _fnet_netbuf_queue_del
600044f8 g     F .text.code	00000092 mbedtls_mpi_sub_abs
60031c44 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_rsa_len
00022400 g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
6000c0c0 g     F .text.code	00000074 mbedtls_ecp_point_read_binary
0000a6f0  w    F .text.itcm	00000004 usb_serial_class::read()
20007cf8 g     O .data	00000016 usb_string_serial_number_default
000218d4 g     F .text.itcm	0000001e .hidden __floatunsidf
00027680 g     F .text.itcm	0000000c __locale_mb_cur_max
6000f3bc g     F .text.code	00000014 mbedtls_md_starts
000094e8 g     F .text.itcm	00000028 EthernetClient::write(unsigned char const*, unsigned int)
0000c920 g     F .text.itcm	00000014 _fnet_eth_release
60013134 g     F .text.code	00000120 mbedtls_rsa_export_raw
00014228  w    F .text.itcm	0000000e std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
60021e60 g     F .text.code	00000020 mbedtls_x509_crt_verify
200002c8  w    O .data	00000048 ArduinoJson::V721PB22::detail::FloatTraits<double, 8u>::positiveBinaryPowersOfTen()::factors
60001e70 g     F .text.code	0000007a mbedtls_aes_crypt_cfb128
600103c0 g     F .text.code	00000040 mbedtls_oid_get_oid_by_sig_alg
00021918 g     F .text.itcm	00000042 .hidden __aeabi_f2d
000002c0  w    F .text.itcm	00000020 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
60014798 g     F .text.code	000002f4 mbedtls_rsa_self_test
6001e578 g     F .text.code	00000020 mbedtls_ssl_check_curve
60010e10 g     F .text.code	00000050 mbedtls_pk_setup_rsa_alt
000021f8  w    F .text.itcm	00000108 Network::connectToVideoHub(IPAddress, unsigned short)
0001b0fc g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6000f3d0 g     F .text.code	00000014 mbedtls_md_update
6001c7cc g     F .text.code	00000006 mbedtls_ssl_conf_sni
6001292c g     F .text.code	000000f0 mbedtls_pk_parse_subpubkey
60018174 g     F .text.code	00000168 mbedtls_sha512_self_test
00016214 g     F .text.itcm	00000088 websockets::WebsocketsServer::listen(unsigned short)
6001a2a8 g     F .text.code	000019ac mbedtls_ssl_handshake_server_step
0000db90 g     F .text.itcm	000000d2 _fnet_ip4_setsockopt
20200020 g     O .bss.dma	00000062 usb_descriptor_buffer
200082c0 g     O NonCacheable	0000261c fnet_fec0_buf
00012a7c g     F .text.itcm	00000012 fnet_timer_poll
0000f938 g     F .text.itcm	00000048 fnet_socket_shutdown
000102f0 g     F .text.itcm	00000144 fnet_socket_poll
00026cc0 g     F .text.itcm	000000cc __swsetup_r
2000cccb g     O .bss	00000001 EventResponder::runningFromYield
6000a5d0 g     F .text.code	0000004c mbedtls_ecdh_get_params
6001c8c8 g     F .text.code	0000000e mbedtls_ssl_conf_session_tickets
60008d48 g     F .text.code	000001f4 mbedtls_des_crypt_ecb
0000c074 g     F .text.itcm	00000020 fnet_tls_socket_close
00009510 g     F .text.itcm	00000038 EthernetClient::read(unsigned char*, unsigned int)
0000c00c g     F .text.itcm	00000068 fnet_tls_socket
00027518 g     F .text.itcm	00000168 strstr
60013044 g     F .text.code	000000f0 mbedtls_rsa_export
6001c7bc g     F .text.code	00000008 mbedtls_ssl_set_hs_ca_chain
00014ba4  w    F .text.itcm	00000002 std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0000c7e4 g     F .text.itcm	0000000c fnet_error_get
000186f8  w    F .text.itcm	00000006 _lseek
60010dc0 g     F .text.code	00000020 mbedtls_pk_free
0000e6d8 g     F .text.itcm	00000014 _fnet_netbuf_queue_add
6001c864 g     F .text.code	0000000e mbedtls_ssl_conf_cert_req_ca_list
00026bf4 g     F .text.itcm	000000aa _fwrite_r
60020854 g     F .text.code	000001e8 mbedtls_x509_get_rsassa_pss_params
00004c34  w    F .text.itcm	000001cc ArduinoJson::V721PB22::detail::TextFormatter<ArduinoJson::V721PB22::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::writeString(char const*, unsigned int)
00014d40 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
60014fcc g     F .text.code	00000100 mbedtls_rsa_validate_crt
00009fb0 g     F .text.itcm	000000f0 EthernetServer::accept()
00002e24 g     F .text.itcm	00000534 setup
200018ec g     O .data	0000000d typeinfo name for std::bad_alloc
600132d4 g     F .text.code	00000006 mbedtls_rsa_set_padding
0000ca38 g     F .text.itcm	0000003c _fnet_eth_multicast_join_ip4
000036d0  w    F .text.itcm	0000021c unsigned short ArduinoJson::V721PB22::detail::VariantRefBase<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::as<unsigned short>() const
60001020 g     O .text.headers	0000000c BootData
20007828 g     O .data	0000005c fnet_cpu_eth0_if
60016128 g     F .text.code	00000004 mbedtls_sha1_update
60014690 g     F .text.code	00000106 mbedtls_rsa_copy
0000de8c g     F .text.itcm	00000006 _fnet_mempool_release
0000ec8c g     F .text.itcm	0000001e fnet_netif_is_connected
60013be8 g     F .text.code	000001a0 mbedtls_rsa_rsaes_oaep_decrypt
0001af60 g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
60007c08 g     F .text.code	00000038 mbedtls_cipher_info_from_values
2000cc98 g     O .bss	00000004 systick_cycle_count
0002abe4 g     F .text.itcm	000000a4 __multadd
00018fe4 g     F .text.itcm	00000030 usb_prepare_transfer
00022b58 g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
60003b50 g     F .text.code	00000060 mbedtls_mpi_grow
00009498 g     F .text.itcm	0000001c EthernetClient::availableForWrite()
20002d60 g     O .data	00000004 fnet_dhcp_magic_cookie
60020a7c g     F .text.code	00000090 mbedtls_x509_get_sig_alg
6001c94c g     F .text.code	0000000c mbedtls_ssl_get_bytes_avail
6001c428 g     F .text.code	00000006 mbedtls_ssl_conf_export_keys_cb
0000d030 g     F .text.itcm	0000003a _fnet_ip_getsockopt
2000be58 g     O .bss	00000004 EthernetServer::tls_socket_ptr
0002bcf8 g       .text.itcm	00000000 _etext
0002b540 g     F .text.itcm	00000024 _close_r
60002e68 g     F .text.code	00000028 mbedtls_asn1_find_named_data
60008734 g     F .text.code	0000000a mbedtls_ctr_drbg_init
200010fc  w    O .data	00000010 teensy::inplace_function_detail::empty_vtable<void>
600365b0 g     O .text.progmem	00000030 mbedtls_sha512_info
00000130  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::close()
60011a20 g     F .text.code	000001fc mbedtls_pkcs5_pbes2
60001fe0 g     F .text.code	000004b0 mbedtls_internal_aes_decrypt
00008ca0  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
6001c8b8 g     F .text.code	0000000e mbedtls_ssl_conf_cbc_record_splitting
60004a00 g     F .text.code	0000047c mbedtls_mpi_div_mpi
60017040 g     F .text.code	0000000a mbedtls_sha512_free
600018b4 g     F .text.code	00000118 mbedtls_aes_setkey_dec
00008c84 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_release(void**)
60003258 g     F .text.code	00000050 mbedtls_asn1_write_printable_string
60017c60 g     F .text.code	000000a0 mbedtls_sha512_update_ret
6000e3e8 g     F .text.code	0000016a mbedtls_gcm_starts
000106d4 g     F .text.itcm	0000000c fnet_memset_zero
60013a54 g     F .text.code	00000044 mbedtls_rsa_pkcs1_encrypt
0002b738 g     F .text.itcm	00000040 __assert_func
6001cd80 g     F .text.code	00000032 mbedtls_ssl_transform_free
6001cad0 g     F .text.code	00000038 mbedtls_ssl_handshake_step
600336e4 g     O .text.progmem	000000e9 mbedtls_test_srv_key_ec
60007df8 g     F .text.code	00000038 mbedtls_cipher_update_ad
60006bbc g     F .text.code	000000b4 mbedtls_camellia_setkey_dec
6001e6d8 g     F .text.code	00000114 mbedtls_ssl_write_finished
000184b8 g     F .text.itcm	00000062 ultoa
60008870 g     F .text.code	000000d0 mbedtls_ctr_drbg_random_with_add
60009fb8 g     F .text.code	00000028 mbedtls_dhm_read_public
2000ccc9 g     O .bss	00000001 EthernetClass::socket_num
2000be5c g     O .bss	00000004 EthernetServer::_tls
00003358 g     F .text.itcm	00000084 resetInterface()
2000be70 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
6001c66c g     F .text.code	0000003a mbedtls_ssl_conf_dh_param_bin
60012b54 g     F .text.code	00000010 mbedtls_platform_zeroize
6001d8f4 g     F .text.code	000000a8 mbedtls_ssl_flush_output
000091f0 g     F .text.itcm	0000001c EthernetClass::subnetMask()
00019940 g     F .text.itcm	00000020 systick_isr
0000cff0 g     F .text.itcm	0000003e _fnet_ip_setsockopt
600076fc g     F .text.code	00000014 mbedtls_ccm_free
000105ac g     F .text.itcm	00000120 fnet_memcpy
0001a704 g     F .text.itcm	00000064 __cxa_begin_cleanup
60022e24 g     F .text.code	000000e8 usb_init
0000990c g     F .text.itcm	00000164 EthernetClient::available()
0000e758 g     F .text.itcm	00000010 _fnet_malloc
60003464 g     F .text.code	00000148 mbedtls_base64_encode
60013820 g     F .text.code	000000f4 mbedtls_rsa_rsaes_pkcs1_v15_encrypt
00002a34 g     F .text.itcm	000003f0 buttonCallback(int, bool)
2000bc40 g     O .bss	00000030 GPIs
00000234  w    F .text.itcm	00000020 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
6001e254 g     F .text.code	00000114 mbedtls_ssl_write_certificate
0000e78c g     F .text.itcm	0000000c _fnet_mem_release
60038d88 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_next
00008be0 g     F .text.itcm	00000006 DNSClient::begin(IPAddress const&)
20001be8  w    O .data	00000008 std::_Sp_make_shared_tag::_S_ti()::__tag
60038dcc g     O .text.progmem	00000062 usb_config_descriptor_12
60010c94 g     F .text.code	00000108 mbedtls_pem_write_buffer
00000134  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
6000baa0 g     F .text.code	0000002a mbedtls_ecp_set_zero
20000000 g       .data	00000000 _sdata
0002709c g     F .text.itcm	000000cc strchr
6000f3b4 g     F .text.code	00000006 mbedtls_md_get_name
00001200  w    F .text.itcm	000001d8 ArduinoJson::V721PB22::detail::decomposeFloat(double, signed char)
6001ca54 g     F .text.code	0000000a mbedtls_ssl_get_peer_cert
0000ec30 g     F .text.itcm	0000000c _fnet_netif_leave_ip4_multicast
6000e650 g     F .text.code	000000d2 mbedtls_gcm_finish
0000b780 g     F .text.itcm	000001c8 fnet_dns_init
6001e20c g     F .text.code	00000048 mbedtls_ssl_close_notify
20007260 g     O .data	00000004 __cxxabiv1::__terminate_handler
0001629c g     F .text.itcm	00000068 websockets::WebsocketsServer::poll()
2000cc9c g     O .bss	00000004 systick_millis_count
00022850 g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
aaaaafff g       *ABS*	00000000 _flexram_bank_config
00014494 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
60013390 g     F .text.code	0000003c mbedtls_rsa_check_pub_priv
60003e7c g     F .text.code	0000004a mbedtls_mpi_set_bit
0000c934 g     F .text.itcm	00000004 _fnet_eth_drain
60034000 g     O .text.progmem	00000158 mbedtls_cipher_definitions
00017cd4 g     F .text.itcm	000000a8 delay
2000727c g     O .data	00000004 __atexit_recursive_mutex
0000dde4 g     F .text.itcm	00000054 fnet_event_raise
20008000 g     O .data	000002c0 _VectorsRam
00027d00 g     F .text.itcm	00000088 __register_exitproc
00028cb4 g     F .text.itcm	0000020c _free_r
20001b18  w    O .data	0000001c vtable for std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>
0001af3c g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
6000e294 g     F .text.code	00000154 mbedtls_gcm_setkey
6001d010 g     F .text.code	000000a8 mbedtls_ssl_setup
6000e7e8 g     F .text.code	00000016 mbedtls_gcm_free
60011528 g     F .text.code	00000008 mbedtls_pkcs12_pbe_sha1_rc4_128
0000eae8 g     F .text.itcm	00000026 fnet_netif_get_hw_addr
00002130 g     F .text.itcm	0000007c startButtons(void (*)(int, bool))
600133cc g     F .text.code	00000090 mbedtls_rsa_public
00000190  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
6001c77c g     F .text.code	00000040 mbedtls_ssl_set_hs_own_cert
0000c094 g     F .text.itcm	00000022 fnet_tls_socket_connect
60006f5c g     F .text.code	00000404 mbedtls_camellia_self_test
0001a12c  w    F .text.itcm	0000019c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
600183b0 g     F .text.code	000000dc mbedtls_ssl_cache_set
20007070 g     O .data	00000084 usb_descriptor_list
0000f980 g     F .text.itcm	00000088 fnet_socket_listen
60007748 g     F .text.code	0000002c mbedtls_ccm_star_encrypt_and_tag
60031c48 g     O .text.progmem	0000000d mbedtls_test_ca_pwd_rsa
0000e864 g     F .text.itcm	00000028 _fnet_netif_drain
60006d98 g     F .text.code	000000e4 mbedtls_camellia_crypt_cbc
60009de8 g     F .text.code	0000005a mbedtls_dhm_read_params
60018040 g     F .text.code	00000004 mbedtls_sha512_process
0000ab48 g     F .text.itcm	000000ec fnet_fec_output
0000f214 g     F .text.itcm	00000020 _fnet_socket_list_add
00019c04 g     F .text.itcm	0000002e std::_Rb_tree_increment(std::_Rb_tree_node_base*)
00009864  w    F .text.itcm	000000a8 EthernetClient::operator!=(EthernetClient const&)
0001a3bc g     F .text.itcm	00000008 std::bad_alloc::what() const
00010544 g     F .text.itcm	00000018 _fnet_mutex_lock
6001848c g     F .text.code	00000008 mbedtls_ssl_cache_set_max_entries
20001b78  w    O .data	00000018 ArduinoJson::V721PB22::detail::FloatTraits<float, 4u>::negativeBinaryPowersOfTen()::factors
20000000 g     O .data	00000280 endpoint_queue_head
20007a4c g     O .data	00000024 fnet_udp_prot_if
0001a4c4 g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
60002d34 g     F .text.code	00000048 mbedtls_asn1_get_mpi
60013dd0 g     F .text.code	000000f8 mbedtls_rsa_rsassa_pkcs1_v15_sign
00014c18 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6000edf4 g     F .text.code	00000072 mbedtls_hmac_drbg_reseed
6000a474 g     F .text.code	00000004 mbedtls_ecdh_gen_public
00001c44  w    F .text.itcm	000004ec Settings::writeDefaults()
60004404 g     F .text.code	00000030 mbedtls_mpi_cmp_int
60010444 g     F .text.code	00000044 mbedtls_oid_get_md_hmac
00015544 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::ping(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
20200008 g     O .bss.dma	00000004 EthernetClass::socket_buf_len
00010184 g     F .text.itcm	00000046 _fnet_socket_buffer_read_record
600098f0 g     F .text.code	00000020 mbedtls_des3_set2key_dec
60021e8c g     F .text.code	000000dc mbedtls_x509_crt_free
0001973c g     F .text.itcm	00000050 usb_serial_write_buffer_free
0001952c g     F .text.itcm	000000e0 usb_serial_read
60003cfc g     F .text.code	0000007a mbedtls_mpi_safe_cond_assign
0001a448 g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
00022bb0  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
2000c080 g     O .bss	00000004 __malloc_max_total_mem
60008d20 g     F .text.code	00000028 mbedtls_des_key_check_weak
0000c5b0 g     F .text.itcm	0000001e fnet_arp_send_request
0000ac34 g     F .text.itcm	00000090 fnet_fec_multicast_join
20007804 g     O .data	0000000c __sglue
0001799c g     F .text.itcm	0000000e String::~String()
2000c8dc g     O .bss	000000ac mbedtls_cipher_supported
0001b340 g     F .text.itcm	00000040 std::logic_error::~logic_error()
000160e4  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
60018494 g     F .text.code	0000002c mbedtls_ssl_cache_free
20001d60 g     O .data	00000101 _ctype_
00026470 g     F .text.itcm	00000130 __sflush_r
0000ecac g     F .text.itcm	00000010 _fnet_netif_signal_ip4_addr_conflict
60001680 g     F .text.code	0000000c mbedtls_aes_free
0000d1f8 g     F .text.itcm	0000003c _fnet_ip4_set_socket_addr
60007d9c g     F .text.code	00000044 mbedtls_cipher_set_iv
000231c4 g     F .text.itcm	00000028 printf
20001894 g     O .data	00000011 typeinfo name for std::length_error
000219c8 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
600150cc g     F .text.code	00000008 mbedtls_sha1_init
00008d10 g     F .text.itcm	00000010 EthernetClass::setSocketSize(unsigned int)
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00014cf0 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
600227f8  w    F .text.code	00000002 startup_middle_hook
2000be64 g     O .bss	00000004 EventResponder::lastInterrupt
0000dd90 g     F .text.itcm	00000054 fnet_isr_unlock
2000a960 g     O .bss	00000020 endpoint0_transfer_data
000267a8 g     F .text.itcm	0000000c __sfp_lock_release
00021650 g     F .text.itcm	00000000 .hidden __aeabi_drsub
60002fc8 g     F .text.code	00000022 mbedtls_asn1_write_tag
0001b380 g     F .text.itcm	00000040 std::length_error::~length_error()
000143ec g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
0000bbc8 g     F .text.itcm	00000038 fnet_service_poll
6000982c g     F .text.code	0000000a mbedtls_des_setkey_enc
2000ccdd g     O .bss	00000001 yield_active_check_flags
6001e848 g     F .text.code	000000a0 mbedtls_ssl_resend
6001ca80 g     F .text.code	00000050 mbedtls_ssl_handshake
0001a8e4 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
0001a390  w    F .text.itcm	0000002c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0001b154 g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00026ca0 g     F .text.itcm	00000020 fwrite
00013e94 g     F .text.itcm	00000324 websockets::crypto::websocketsHandshakeEncodeKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
60022c98 g     F .text.code	0000005c usb_pll_start
6000e288 g     F .text.code	0000000a mbedtls_gcm_init
0001aaa8 g     F .text.itcm	00000494 __gxx_personality_v0
600024a4 g     F .text.code	000000ea mbedtls_aes_crypt_cbc
00017ec0 g     F .text.itcm	00000048 eeprom_initialize
6001e4e0 g     F .text.code	00000018 mbedtls_ssl_sig_from_pk_alg
00000134  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
6001f9b0 g     F .text.code	0000005e mbedtls_ssl_read_record
6001c834 g     F .text.code	0000000e mbedtls_ssl_conf_fallback
60033b04 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_ec_len
60010e84 g     F .text.code	00000058 mbedtls_pk_verify
000038f0  w    F .text.itcm	00000224 unsigned char ArduinoJson::V721PB22::detail::VariantRefBase<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::as<unsigned char>() const
000019e4  w    F .text.itcm	00000260 Settings::Settings()
60007710 g     F .text.code	00000036 mbedtls_ccm_encrypt_and_tag
60008848 g     F .text.code	00000026 mbedtls_ctr_drbg_update
00026760 g     F .text.itcm	0000003c __sinit
0000ec3c g     F .text.itcm	0000004e _fnet_netif_is_connected
20000338 g     O .data	000000c8 __mprec_tens
60030bc8 g     O .text.progmem	00000517 mbedtls_test_cli_crt_rsa
600087f4 g     F .text.code	00000052 mbedtls_ctr_drbg_seed
00022808 g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
6001c900 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation_period
60010de0 g     F .text.code	00000030 mbedtls_pk_setup
00008cc0 g     F .text.itcm	00000050 EthernetClass::link_callback(void*, fnet_bool_t, void*)
000174a8 g     F .text.itcm	0000000e websockets::internals::fromInternalString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
6001a258 g     F .text.code	00000008 mbedtls_ssl_conf_dtls_cookies
6000c968 g     F .text.code	000000a4 mbedtls_ecp_gen_keypair_base
000231f0 g     F .text.itcm	00001bd4 _vfprintf_r
00004434  w    F .text.itcm	00000800 ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::StaticStringWriter>::result_type ArduinoJson::V721PB22::detail::VariantData::accept<ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::StaticStringWriter> >(ArduinoJson::V721PB22::detail::JsonSerializer<ArduinoJson::V721PB22::detail::StaticStringWriter>&, ArduinoJson::V721PB22::detail::ResourceManager const*) const
200073f4 g     O .data	00000408 __malloc_av_
0000acc4 g     F .text.itcm	0000007c fnet_fec_multicast_leave
000001bc  w    F .text.itcm	00000012 websockets::network::Teensy41TcpServer::available()
00019960 g     F .text.itcm	0000007a flexpwm_init
60038dc8 g     O .text.progmem	00000004 string0
00014ce8 g     F .text.itcm	00000008 websockets::internals::swapEndianess(unsigned long long)
60018604 g     F .text.code	0000002c mbedtls_ssl_get_ciphersuite_id
0001b1fc g     F .text.itcm	00000002 std::type_info::~type_info()
00022bb0  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
6001e644 g     F .text.code	00000026 mbedtls_ssl_write_version
00026dec g     F .text.itcm	000000aa __fputwc
00012a90 g     F .text.itcm	00000040 _fnet_timer_new
0000d15c g     F .text.itcm	00000048 _fnet_ip4_release
600100c4 g     F .text.code	000000dc mbedtls_oid_get_numeric_string
200018fc g     O .data	0000000d typeinfo name for std::exception
60036d20 g     O .text.progmem	00000030 mbedtls_eckey_info
0000d1a4 g     F .text.itcm	00000044 _fnet_ip4_route
0000e550 g     F .text.itcm	00000008 _fnet_netbuf_trim
60003b18 g     F .text.code	0000000e mbedtls_mpi_init
60022914 g     F .text.code	00000384 configure_external_ram
2000c084 g     O .bss	00000004 __malloc_top_pad
00022418 g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
000271f4 g     F .text.itcm	00000064 strncpy
0000f1f8 g     F .text.itcm	0000001a _fnet_socket_set_error
6000462c g     F .text.code	00000072 mbedtls_mpi_add_int
00019e6c g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
60038d68 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_default
20007c70 g     O .data	00000004 mbedtls_test_ca_crt
600132e0 g     F .text.code	0000004c mbedtls_rsa_check_pubkey
6000de34 g     F .text.code	00000002 mbedtls_entropy_gather
2000a940 g     O .bss	00000020 endpoint0_transfer_ack
2000c1c0 g     O .bss	00000004 __stdio_exit_handler
60002e90 g     F .text.code	00000020 mbedtls_asn1_free_named_data
6001d99c g     F .text.code	000005e0 mbedtls_ssl_write_record
00022708 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
00019c34 g     F .text.itcm	00000038 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00009d38 g     F .text.itcm	00000210 EthernetServer::available()
000190c4  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
60011c1c g     F .text.code	000000f0 mbedtls_pkcs5_self_test
000092f4 g     F .text.itcm	000000ac EthernetClient::connect(char const*, unsigned short)
20007274  w    O .data	00000004 ArduinoJson::V721PB22::detail::DefaultAllocator::instance()::allocator
6000b8fc g     F .text.code	0000002c mbedtls_ecp_curve_info_from_name
0000e3c8 g     F .text.itcm	00000040 _fnet_netbuf_free_chain
2000ccd9 g     O .bss	00000001 usb_cdc_line_rtsdtr
6000f630 g     F .text.code	00000008 mbedtls_md5_init
00025ee0 g     F .text.itcm	00000010 putchar
0001b450 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
00027ae0 g     F .text.itcm	00000002 __retarget_lock_init_recursive
0000cdc4 g     F .text.itcm	0000010c _fnet_icmp4_error
0000c0b8 g     F .text.itcm	00000010 fnet_tls_socket_set_hostname
00017900 g     F .text.itcm	0000003a String::String(char const*)
6000ca28 g     F .text.code	0000002e mbedtls_ecp_gen_key
60011050 g     F .text.code	0000004c mbedtls_pk_check_pair
00017f08 g     F .text.itcm	0000007c eeprom_read_byte
60022cf4 g     F .text.code	00000130 tempmon_init
0000dc64 g     F .text.itcm	00000040 _fnet_isr_handler
60016d44 g     F .text.code	00000004 mbedtls_sha256_finish
20001b04 g     O .data	00000014 vtable for std::bad_exception
0001851c g     F .text.itcm	0000018c unused_interrupt_vector
600211f0 g     F .text.code	000006ec mbedtls_x509_crt_info
00019ad0 g     F .text.itcm	00000024 rtc_get
2000c054 g     O .bss	00000028 __malloc_current_mallinfo
0000e398 g     F .text.itcm	00000030 _fnet_netbuf_free
60020728 g     F .text.code	0000010c mbedtls_x509_get_name
6000a2f0 g     F .text.code	0000010c mbedtls_dhm_parse_dhm
2000c088 g     O .bss	00000138 __sf
0000f234 g     F .text.itcm	00000028 _fnet_socket_list_del
000178d8 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
60010c6c g     F .text.code	00000026 mbedtls_pem_free
6001442c g     F .text.code	0000006e mbedtls_rsa_free
00010434 g     F .text.itcm	000000e4 fnet_init
0000cae8 g     F .text.itcm	0000010c _fnet_eth_phy_init
6000fef0 g     F .text.code	0000009c mbedtls_md5_self_test
2000beb8 g     O .bss	00000190 __atexit0
00019650 g     F .text.itcm	00000018 usb_serial_available
00000138  w    F .text.itcm	00000006 websockets::network::Teensy41TcpServer::getSocket() const
00022700 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
0002bcfc g       .ARM.exidx	00000000 __exidx_end
2000ccb8 g     O .bss	00000004 usb_timer0_callback
00017574  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#4}::_FUN(void*)
0000e558 g     F .text.itcm	0000014e _fnet_netbuf_cut_center
60036c90 g     O .text.progmem	00000030 mbedtls_rsa_alt_info
6000de38 g     F .text.code	000000e2 mbedtls_entropy_func
6001c3c8 g     F .text.code	0000000e mbedtls_ssl_conf_authmode
000179ac g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000004a4  w    F .text.itcm	00000090 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
6000f3a4 g     F .text.code	00000006 mbedtls_md_get_size
00019bc4 g     F .text.itcm	0000000a __aeabi_atexit
60007c40 g     F .text.code	00000008 mbedtls_cipher_init
0000a120 g     F .text.itcm	00000044 EthernetClass::socketClose(unsigned char)
200017d8 g     O .data	0000000c typeinfo for std::bad_alloc
0001b380 g     F .text.itcm	00000040 std::length_error::~length_error()
60009f70 g     F .text.code	00000048 mbedtls_dhm_set_group
600185d0 g     F .text.code	0000000e mbedtls_ssl_ciphersuite_uses_psk
60014c88 g     F .text.code	000000c8 mbedtls_rsa_deduce_private_exponent
200018bc g     O .data	00000016 typeinfo name for std::bad_function_call
000163b4  w    F .text.itcm	00000136 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00024ebc g     F .text.itcm	00000018 __sprint_r
0000dca4 g     F .text.itcm	00000048 _fnet_isr_vector_init
202030a0 g       .bss.dma	00000000 _heap_start
00026bac g     F .text.itcm	00000046 _fwalk_sglue
6001e4bc g     F .text.code	00000022 mbedtls_ssl_sig_from_pk
000160e8  w    F .text.itcm	00000004 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
60038d98  w    O .text.progmem	00000016 usb_string_product_name
6000ba38 g     F .text.code	00000030 mbedtls_ecp_keypair_free
0000a6ec  w    F .text.itcm	00000004 usb_serial_class::available()
00026818 g     F .text.itcm	00000086 _fputs_r
6000f328 g     F .text.code	0000004c mbedtls_md_setup
00014b90 g     F .text.itcm	00000014 websockets::WebsocketsClient::~WebsocketsClient()
0002b228 g     F .text.itcm	000000d4 __d2b
60016134 g     F .text.code	00000068 mbedtls_sha1_ret
600310e0 g     O .text.progmem	00000004 mbedtls_test_srv_key_rsa_len
0000f4dc g     F .text.itcm	00000038 _fnet_socket_copy
6001c3f0 g     F .text.code	0000000c mbedtls_ssl_set_bio
2000ccb4 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00008c94  w    F .text.itcm	00000004 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#1}::_FUN(void*)
6001c958 g     F .text.code	00000014 mbedtls_ssl_get_verify_result
60018574 g     F .text.code	00000022 mbedtls_ssl_get_ciphersuite_sig_pk_alg
60017d00 g     F .text.code	0000023c mbedtls_sha512_finish_ret
600219b0 g     F .text.code	00000060 mbedtls_x509_crt_check_extended_key_usage
60010228 g     F .text.code	00000044 mbedtls_oid_get_pk_alg
600337d4 g     O .text.progmem	0000032d mbedtls_test_srv_crt_ec
00007c48 g     F .text.itcm	00000d38 websocketMessageCallback(websockets::WebsocketsClient&, websockets::WebsocketsMessage)
00004194  w    F .text.itcm	000002a0 ArduinoJson::V721PB22::detail::TextFormatter<ArduinoJson::V721PB22::detail::StaticStringWriter>::writeFloat(double, signed char)
000021ac g     F .text.itcm	0000004c pollButtons()
0002282c g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
0000ea48 g     F .text.itcm	0000001a fnet_netif_get_ip4_gateway
00014ff8 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::poll()
60006e7c g     F .text.code	0000007e mbedtls_camellia_crypt_cfb128
6001191c g     F .text.code	00000104 mbedtls_pkcs5_pbkdf2_hmac
2000724c g     O .data	00000004 F_CPU_ACTUAL
0000756c  w    F .text.itcm	000000e0 ArduinoJson::V721PB22::detail::VariantData* ArduinoJson::V721PB22::detail::ObjectData::getOrAddMember<ArduinoJson::V721PB22::detail::JsonStringAdapter>(ArduinoJson::V721PB22::detail::JsonStringAdapter, ArduinoJson::V721PB22::detail::ResourceManager*)
60002594 g     F .text.code	00000004 mbedtls_aes_decrypt
60038db0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20007284 g     O .data	00000000 .hidden __dso_handle
6001c7c4 g     F .text.code	00000008 mbedtls_ssl_set_hs_authmode
0002ad28 g     F .text.itcm	0000005c __i2b
60012e28 g     F .text.code	00000016 mbedtls_rsa_init
000186e0  w    F .text.itcm	00000006 _close
00000f94  w    F .text.itcm	000000b4 ArduinoJson::V721PB22::detail::ResourceManager::~ResourceManager()
0002679c g     F .text.itcm	0000000c __sfp_lock_acquire
00015570 g     F .text.itcm	0000009c websockets::internals::WebsocketsEndpoint::close(websockets::CloseReason)
60007c68 g     F .text.code	00000058 mbedtls_cipher_setup
00009694 g     F .text.itcm	000000e4 EthernetClient::connectPoll()
6001fa10 g     F .text.code	00000218 mbedtls_ssl_read
6000ac70 g     F .text.code	00000032 mbedtls_ecdsa_genkey
000199dc g     F .text.itcm	000000f4 pwm_init
6001d354 g     F .text.code	000000d8 mbedtls_ssl_handshake_wrapup
6001c458 g     F .text.code	00000034 mbedtls_ssl_set_session
0001a908 g     F .text.itcm	00000008 __cxa_get_globals
00014d40 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
2000ccca g     O .bss	00000001 EthernetClass::link_status
60033b08 g     O .text.progmem	0000000d mbedtls_test_ca_pwd_ec
200077fc g     O .data	00000004 __malloc_sbrk_base
20002e70 g     O .data	00000004 mbedtls_test_cli_crt_len
0002b3e8 g     F .text.itcm	0000003e __swrite
6000f1d8 g     F .text.code	00000008 mbedtls_md_list
6000db4c g     F .text.code	0000013c mbedtls_ecp_group_load
60022f0c g     F .text.code	00000054 _reboot_Teensyduino_
0000a164 g     F .text.itcm	00000160 EthernetClass::socketBegin(unsigned char, unsigned short)
20007a04 g     O .data	00000024 fnet_raw_prot_if
00010574 g     F .text.itcm	0000001c _fnet_stack_mutex_lock
60030518 g     O .text.progmem	000006ab mbedtls_test_cli_key_rsa
00000318  w    F .text.itcm	00000070 websockets::network::Teensy41TcpServer::listen(unsigned short)
0000de4c g     F .text.itcm	0000003e _fnet_mempool_init
00019fcc  w    F .text.itcm	000000aa std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
20001a48 g     O .data	00000010 vtable for websockets::WebsocketsServer
0002b2fc g     F .text.itcm	000000c6 _fclose_r
2000bcb8 g     O .bss	0000003c Network
00014c18 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6001eff8 g     F .text.code	000009b8 mbedtls_ssl_read_record_layer
6000a9c4 g     F .text.code	00000158 mbedtls_ecdsa_verify
0002b7a0 g     F .text.itcm	00000100 __ssprint_r
600032f8 g     F .text.code	00000072 mbedtls_asn1_write_bitstring
2000ccbc g     O .bss	00000004 usb_timer1_callback
60002aec g     F .text.code	0000002e mbedtls_asn1_get_tag
0000a4e4 g     F .text.itcm	00000006 fnet_htons
0000c7f0 g     F .text.itcm	0000000c fnet_error_set
0002ab84 g     F .text.itcm	0000004c _Balloc
0001a078  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00010708 g     F .text.itcm	00000018 fnet_strlen
60008cf4 g     F .text.code	0000002c mbedtls_des_key_check_key_parity
6001c3b8 g     F .text.code	0000000e mbedtls_ssl_conf_transport
60003e5c g     F .text.code	00000020 mbedtls_mpi_get_bit
600150d4 g     F .text.code	0000000a mbedtls_sha1_free
6001c48c g     F .text.code	0000000a mbedtls_ssl_conf_ciphersuites
60017038 g     F .text.code	00000008 mbedtls_sha512_init
00019f60  w    F .text.itcm	0000006a std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0001793c g     F .text.itcm	00000038 String::String(String const&)
20000280  w    O .data	00000048 ArduinoJson::V721PB22::detail::FloatTraits<double, 8u>::negativeBinaryPowersOfTen()::factors
60023070 g       .text.code	00000000 __preinit_array_start
6000f280 g     F .text.code	00000018 mbedtls_md_info_from_type
2000c07c g     O .bss	00000004 __malloc_max_sbrked_mem
60009838 g     F .text.code	00000038 mbedtls_des_setkey_dec
6001109c g     F .text.code	00000028 mbedtls_pk_debug
60013d88 g     F .text.code	00000048 mbedtls_rsa_pkcs1_decrypt
0000a4ec g     F .text.itcm	00000004 fnet_htonl
60008ccc g     F .text.code	0000000c mbedtls_des3_free
2000c1cc g     O .bss	00000004 _fnet_timer_api
60008cd8 g     F .text.code	0000001c mbedtls_des_key_set_parity
000095a4 g     F .text.itcm	00000050 EthernetClient::write(unsigned char)
6001c3e0 g     F .text.code	00000006 mbedtls_ssl_conf_rng
0001b4e4  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
6006f800 g     O .text.csf	00000c00 hab_csf
6001026c g     F .text.code	0000003c mbedtls_oid_get_oid_by_pk_alg
60013254 g     F .text.code	00000080 mbedtls_rsa_export_crt
6001e8e8 g     F .text.code	00000340 mbedtls_ssl_prepare_handshake_record
20007250 g     O .data	00000010 Serial
00021430 g     F .text.itcm	000000c4 __cxa_demangle
00009b20 g     F .text.itcm	00000128 EthernetServer::poll(void*)
00017500 g     F .text.itcm	00000066 IPAddress::fromString(char const*)
000227c0 g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
0002b428 g     F .text.itcm	00000020 __sseek
00001630  w    F .text.itcm	000003b4 ArduinoJson::V721PB22::detail::parseNumber(char const*)
00022bb4 g     F .text.itcm	00000018 calloc
0002b778 g     F .text.itcm	00000028 fiprintf
60021978 g     F .text.code	00000038 mbedtls_x509_crt_check_key_usage
2000a8dc g       .bss	00000000 _sbss
0002ab0c g     F .text.itcm	00000076 _putc_r
6000371c g     F .text.code	000000c4 mbedtls_base64_self_test
000178bc  w    F .text.itcm	0000001c _write
0000042c  w    F .text.itcm	00000026 Logic::~Logic()
000001d0  w    F .text.itcm	00000016 websockets::network::Teensy41TcpClient::poll()
6003339c g     O .text.progmem	00000004 mbedtls_test_cli_crt_ec_len
0001993c g     F .text.itcm	00000004 pendablesrvreq_isr
60016b0c g     F .text.code	00000088 mbedtls_sha256_update_ret
60016e2c g     F .text.code	00000004 mbedtls_sha256
60010400 g     F .text.code	00000044 mbedtls_oid_get_md_alg
000146b8 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePing(websockets::WebsocketsMessage)
0000ed8c g     F .text.itcm	0000003c _fnet_prot_release
60030514 g     O .text.progmem	00000004 mbedtls_test_cli_key_rsa_len
2000be90  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
6001175c g     F .text.code	000001c0 mbedtls_pkcs12_pbe
6001c7d4 g     F .text.code	00000040 mbedtls_ssl_conf_alpn_protocols
6000a4e8 g     F .text.code	00000048 mbedtls_ecdh_free
60036640 g     O .text.progmem	00000030 mbedtls_sha224_info
60007b88 g     F .text.code	00000034 mbedtls_cipher_list
00014d40 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
00012a2c g     F .text.itcm	0000000c fnet_timer_get_ms
6000ddbc g     F .text.code	00000024 mbedtls_entropy_init
6000abb8 g     F .text.code	00000020 mbedtls_ecdsa_write_signature_det
0000ed0c g     F .text.itcm	00000024 _fnet_netif_get_by_scope_id
2000beb4 g     O .bss	00000004 __atexit
00022710 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
600051fc g     F .text.code	00000368 mbedtls_mpi_exp_mod
0000b69c g     F .text.itcm	00000006 fnet_dhcp_cln_is_enabled
6000458c g     F .text.code	0000004e mbedtls_mpi_add_mpi
00003c7c  w    F .text.itcm	0000006e char const* ArduinoJson::V721PB22::detail::VariantRefBase<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::as<char const*>() const
6001ec28 g     F .text.code	000000c4 mbedtls_ssl_handle_message_type
6000dde0 g     F .text.code	00000020 mbedtls_entropy_free
00000208  w    F .text.itcm	00000012 websockets::network::Teensy41TcpClient::close()
0001b450 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
20001b64 g     O .data	00000014 vtable for std::bad_alloc
60038db0  w    O .text.progmem	00000018 usb_string_manufacturer_name
00014204  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
6001ef34 g     F .text.code	000000c4 mbedtls_ssl_dtls_replay_update
60018550 g     F .text.code	00000024 mbedtls_ssl_ciphersuite_from_id
0000ea9c g     F .text.itcm	0000001a fnet_netif_set_ip4_addr_type
000106cc g     F .text.itcm	00000008 fnet_memset
6001c6a8 g     F .text.code	0000003c mbedtls_ssl_conf_dh_param_ctx
0000b6a4 g     F .text.itcm	00000034 fnet_dhcp_cln_get_by_netif
000093a0 g     F .text.itcm	00000034 EthernetClient::stop()
6001e66c g     F .text.code	00000030 mbedtls_ssl_read_version
60013ec8 g     F .text.code	000001c4 mbedtls_rsa_rsassa_pss_sign
6002012c g     F .text.code	00000130 mbedtls_ssl_parse_finished
0001a5d0 g     F .text.itcm	0000002e __cxa_allocate_exception
00014720 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handleClose(websockets::WebsocketsMessage)
00022850 g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
000268b8 g     F .text.itcm	000002f4 __sfvwrite_r
00018704 g     F .text.itcm	00000004 Panic_Temp_isr
0000a40c g     F .text.itcm	00000058 EthernetClass::socketSendAvailable(unsigned char)
20200004 g     O .bss.dma	00000004 EthernetClass::socket_buf_receive
0000f350 g     F .text.itcm	000000e0 _fnet_socket_lookup
0000ecd8 g     F .text.itcm	00000034 fnet_netif_get_by_scope_id
00014674 g     F .text.itcm	00000042 websockets::WebsocketsClient::send(char const*)
00008b30 g     F .text.itcm	0000005c Bounce::update()
6001ecec g     F .text.code	000001c4 mbedtls_ssl_fetch_input
20001ab8 g     O .data	00000010 vtable for websockets::internals::WebsocketsEndpoint
00010518 g     F .text.itcm	0000000e fnet_poll
0001560c g     F .text.itcm	000000e4 websockets::internals::WebsocketsEndpoint::handleMessageInternally(websockets::WebsocketsMessage&)
6000ed08 g     F .text.code	00000004 mbedtls_hmac_drbg_set_entropy_len
6000b9a8 g     F .text.code	0000008e mbedtls_ecp_group_free
6001c3a8 g     F .text.code	0000000e mbedtls_ssl_conf_endpoint
000178a0 g     F .text.itcm	0000001c Print::println()
00015110 g     F .text.itcm	000000d4 websockets::internals::readData[abi:cxx11](websockets::network::TcpClient&, unsigned long long)
00003b14  w    F .text.itcm	00000168 bool ArduinoJson::V721PB22::detail::VariantRefBase<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::as<bool>() const
6000c1f0 g     F .text.code	00000048 mbedtls_ecp_tls_write_group
00000264  w    F .text.itcm	00000054 websockets::network::Teensy41TcpClient::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00017900 g     F .text.itcm	0000003a String::String(char const*)
0000d304 g     F .text.itcm	00000014 _fnet_ip4_multicast_leave_entry
00022798 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
6001074c g     F .text.code	0000000a mbedtls_pem_init
0000eb48 g     F .text.itcm	000000b4 _fnet_netif_init
6000336c g     F .text.code	00000050 mbedtls_asn1_write_octet_string
2000be3c g     O .bss	00000004 EthernetClass::socket_ptr
6000b8c0 g     F .text.code	00000020 mbedtls_ecp_curve_info_from_grp_id
00019af4 g     F .text.itcm	0000004c sm_align_pool
6001c844 g     F .text.code	0000000e mbedtls_ssl_conf_encrypt_then_mac
00014cf0 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
0000eab8 g     F .text.itcm	00000030 _fnet_netif_get_hw_addr
6000c864 g     F .text.code	00000090 mbedtls_ecp_muladd
6000f61c g     F .text.code	00000014 mbedtls_md_process
0000c968 g     F .text.itcm	00000094 _fnet_eth_output_ip4
00024ed4 g     F .text.itcm	00000f8c _vfiprintf_r
0001978c g     F .text.itcm	00000094 usb_serial_flush_output
00022b84 g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
6000eda8 g     F .text.code	0000004a mbedtls_hmac_drbg_seed_buf
600226e8 g     F .text.code	0000010c mbedtls_x509_crt_parse
0000cf68 g     F .text.itcm	00000004 fnet_inet_aton
6001c450 g     F .text.code	00000008 mbedtls_ssl_conf_session_cache
00008d20 g     F .text.itcm	00000278 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)
6001c62c g     F .text.code	00000040 mbedtls_ssl_conf_dh_param
0000edc8 g     F .text.itcm	0000005c _fnet_prot_find
6001c96c g     F .text.code	00000010 mbedtls_ssl_get_ciphersuite
000267b4 g     F .text.itcm	00000064 fputc
200017ec g     O .data	00000008 typeinfo for std::type_info
60020044 g     F .text.code	000000e8 mbedtls_ssl_parse_change_cipher_spec
00019014 g     F .text.itcm	00000028 usb_transmit
000129f4 g     F .text.itcm	0000001c _fnet_timer_init
2000c9ac g     O .bss	00000010 resetButton
000092ec g     F .text.itcm	00000006 EthernetClient::close()
600030a4 g     F .text.code	0000003c mbedtls_asn1_write_null
600227fc  w    F .text.code	00000002 startup_late_hook
60020400 g     F .text.code	0000012c mbedtls_x509_dn_gets
600185e0 g     F .text.code	00000024 mbedtls_ssl_get_ciphersuite_name
00025f08 g     F .text.itcm	000000a0 _puts_r
0002282c g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
0000db28 g     F .text.itcm	00000066 _fnet_ip4_getsockopt
20002d64 g     O .data	00000006 fnet_eth_broadcast
6000c01c g     F .text.code	000000a4 mbedtls_ecp_point_write_binary
6001e598 g     F .text.code	00000020 mbedtls_ssl_check_sig_hash
0002b450 g     F .text.itcm	0000001a __ascii_wctomb
0000c88c g     F .text.itcm	00000070 _fnet_eth_output
600184c0 g     F .text.code	00000060 mbedtls_ssl_list_ciphersuites
60012f20 g     F .text.code	00000124 mbedtls_rsa_complete
60036670 g     O .text.progmem	00000030 mbedtls_sha1_info
600140cc g     F .text.code	000000ec mbedtls_rsa_rsassa_pkcs1_v15_verify
2000ccda g     O .bss	00000001 usb_configuration
0001613c g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
600182dc g     F .text.code	00000014 mbedtls_ssl_cache_init
00018f1c g     F .text.itcm	00000064 usb_config_rx
6001c6f4 g     F .text.code	00000088 mbedtls_ssl_set_hostname
0000d234 g     F .text.itcm	00000038 _fnet_ip4_input
6001e50c g     F .text.code	00000010 mbedtls_ssl_md_alg_from_hash
600162c0 g     F .text.code	00000008 mbedtls_sha256_init
6001408c g     F .text.code	00000040 mbedtls_rsa_pkcs1_sign
60010d9c g     F .text.code	00000018 mbedtls_pk_info_from_type
60020e2c g     F .text.code	000000c0 mbedtls_x509_sig_alg_gets
2000ccac g     O .bss	00000008 usb_cdc_line_coding
00005b38  w    F .text.itcm	000001bc ArduinoJson::V721PB22::detail::TextFormatter<ArduinoJson::V721PB22::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::writeFloat(double, signed char)
0000b6d8 g     F .text.itcm	00000030 fnet_dhcp_cln_get_options
6001c404 g     F .text.code	0000001c mbedtls_ssl_set_timer_cb
000184b0 g     F .text.itcm	00000004 operator delete(void*)
000218f4 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00022baa g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
0001a3d8 g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
2000c050 g     O .bss	00000001 __lock___sfp_recursive_mutex
0001af4c g     F .text.itcm	00000014 std::terminate()
6000c238 g     F .text.code	00000578 mbedtls_ecp_mul
60021a48 g     F .text.code	00000418 mbedtls_x509_crt_verify_with_profile
600101e4 g     F .text.code	00000044 mbedtls_oid_get_attr_short_name
000184ac g     F .text.itcm	00000004 operator new[](unsigned int)
60007be4 g     F .text.code	00000024 mbedtls_cipher_info_from_type
2000be4c g     O .bss	00000008 EthernetClass::_dnsServerAddress
600033bc g     F .text.code	000000a6 mbedtls_asn1_store_named_data
60002b70 g     F .text.code	00000060 mbedtls_asn1_get_int
60018710 g     F .text.code	000018a0 mbedtls_ssl_handshake_client_step
0000c25c g     F .text.itcm	00000060 _fnet_arp_init
60009524 g     F .text.code	00000308 mbedtls_des_setkey
600046a0 g     F .text.code	00000070 mbedtls_mpi_sub_int
6000a0a0 g     F .text.code	000001f4 mbedtls_dhm_calc_secret
0000bcb4 g     F .text.itcm	00000054 fnet_link_init
0000e73c g     F .text.itcm	0000000c _fnet_malloc_max_netbuf
60005564 g     F .text.code	00000042 mbedtls_mpi_fill_random
60031c5c g     O .text.progmem	000006f6 mbedtls_test_ca_key_rsa
00000388  w    F .text.itcm	000000a4 websockets::network::Teensy41TcpServer::accept()
6002f76c g     O .text.progmem	00000da7 mbedtls_test_cas_pem
60020b0c g     F .text.code	00000278 mbedtls_x509_get_time
00014328 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
0000bc5c g     F .text.itcm	0000001c _fnet_service_init
00017974 g     F .text.itcm	00000028 String::String(String&&)
00000174  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
6000fe88 g     F .text.code	00000004 mbedtls_md5_process
00009260  w    F .text.itcm	00000014 EthernetClient::remoteIP()
00017f84 g     F .text.itcm	000000ec eepromemu_flash_write
600161a0 g     F .text.code	00000120 mbedtls_sha1_self_test
00017568  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#1}::_FUN(void*)
6000a530 g     F .text.code	00000078 mbedtls_ecdh_make_params
0002b448 g     F .text.itcm	00000008 __sclose
60006700 g     F .text.code	0000000a mbedtls_camellia_init
200078c4 g     O .data	00000024 fnet_icmp4_prot_if
00015418 g     F .text.itcm	0000010c websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool, bool, char const*)
0000dd80 g     F .text.itcm	00000010 fnet_isr_lock
0001b0e8 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6001e000 g     F .text.code	00000030 mbedtls_ssl_send_fatal_handshake_failure
000227c0 g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
0001960c g     F .text.itcm	00000044 usb_serial_peekchar
6001c8a8 g     F .text.code	0000000e mbedtls_ssl_conf_truncated_hmac
60033c8c g     O .text.progmem	00000373 mbedtls_test_ca_crt_ec
00008cac  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
2000198c g     O .data	00000020 vtable for EthernetServer
0001a0e8  w    F .text.itcm	00000042 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
00000150  w    F .text.itcm	00000022 websockets::network::Teensy41TcpClient::send(unsigned char const*, unsigned long)
6000f2a4 g     F .text.code	00000036 mbedtls_md_free
0000bee4 g     F .text.itcm	00000066 fnet_tls_set_own_certificate
0001a7d8 g     F .text.itcm	0000007c __cxa_begin_catch
6000670c g     F .text.code	0000000c mbedtls_camellia_free
60036cf0 g     O .text.progmem	00000030 mbedtls_eckeydh_info
00012a10 g     F .text.itcm	0000001c _fnet_timer_release
2020000c g     O .bss.dma	00000004 EthernetClass::socket_port
6001c97c g     F .text.code	00000048 mbedtls_ssl_get_version
20007c74 g     O .data	00000004 mbedtls_test_cli_crt
600030e0 g     F .text.code	00000050 mbedtls_asn1_write_oid
600110d8 g     F .text.code	0000000a mbedtls_pk_get_type
0000e768 g     F .text.itcm	00000024 _fnet_malloc_zero
00003604  w    F .text.itcm	000000ca ArduinoJson::V721PB22::detail::VariantData::getOrAddElement(unsigned int, ArduinoJson::V721PB22::detail::ResourceManager*)
20007288 g     O .data	0000016c __global_locale
600336e0 g     O .text.progmem	00000004 mbedtls_test_srv_key_ec_len
0000fd14 g     F .text.itcm	00000012 fnet_socket_recv
00017888 g     F .text.itcm	00000016 Print::print(long)
00012ad0 g     F .text.itcm	00000020 _fnet_timer_free
00019ebc g     F .text.itcm	0000000c std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
60003018 g     F .text.code	0000008a mbedtls_asn1_write_mpi
6000f3f8 g     F .text.code	0000001c mbedtls_md
000093d4 g     F .text.itcm	000000c4 EthernetClient::connect(IPAddress, unsigned short)
00019e9c g     F .text.itcm	00000020 std::__throw_bad_function_call()
000268a0 g     F .text.itcm	00000018 fputs
6000ca0c g     F .text.code	0000001a mbedtls_ecp_gen_keypair
00021530 g     F .text.itcm	0000001e __cxa_call_terminate
60016d4c g     F .text.code	000000e0 mbedtls_sha256_ret
00027ae8 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
000190c0  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
000226c8 g     F .text.itcm	00000018 .hidden restore_core_regs
60021f68 g     F .text.code	00000780 mbedtls_x509_crt_parse_der
0000e32c g     F .text.itcm	0000006a _fnet_netbuf_to_buf
60023070 g       .text.code	00000000 __init_array_start
0001a600 g     F .text.itcm	00000020 __cxa_free_exception
0000bc78 g     F .text.itcm	0000000c fnet_service_mutex_lock
600366a0 g     O .text.progmem	00000030 mbedtls_md5_info
00022bcc g     F .text.itcm	00000078 _calloc_r
6000bfb8 g     F .text.code	00000034 mbedtls_ecp_point_cmp
00008ba0 g     F .text.itcm	0000003e DNSClient::fnet_dns_callback(fnet_dns_resolved_addr_t const*, unsigned long, char const*, void*)
60011530 g     F .text.code	0000022c mbedtls_pkcs12_derivation
60010488 g     F .text.code	00000044 mbedtls_oid_get_extended_key_usage
60008764 g     F .text.code	00000004 mbedtls_ctr_drbg_set_reseed_interval
60008cb4 g     F .text.code	0000000a mbedtls_des_free
0000f2cc g     F .text.itcm	00000082 _fnet_socket_conflict
0000c7b4 g     F .text.itcm	0000002e _fnet_checksum_pseudo_netbuf_end
0000e9b4 g     F .text.itcm	00000018 fnet_netif_set_ip4_gateway
6000b928 g     F .text.code	00000020 mbedtls_ecp_point_init
6001c8d8 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation
6000fd18 g     F .text.code	00000088 mbedtls_md5_update_ret
00019e80 g     F .text.itcm	0000001c std::bad_function_call::~bad_function_call()
2000be44 g     O .bss	00000004 EthernetClass::stack_heap_ptr
00019e64 g     F .text.itcm	00000008 std::bad_function_call::what() const
60003f08 g     F .text.code	0000006a mbedtls_mpi_bitlen
000226c8 g     F .text.itcm	00000018 .hidden __restore_core_regs
00009278  w    F .text.itcm	00000004 EthernetClient::localPort()
0000fb34 g     F .text.itcm	000000ec fnet_socket_sendto
000228cc g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
6001c910 g     F .text.code	0000003c mbedtls_ssl_check_pending
20200014 g     O .bss.dma	00000004 EthernetClass::socket_buf_index
200082c0 g     O NonCacheable	00000000 .hidden __TMC_END__
200017c4 g     O .data	0000000c typeinfo for std::bad_function_call
600337d0 g     O .text.progmem	00000004 mbedtls_test_srv_crt_ec_len
0000ea10 g     F .text.itcm	0000001a fnet_netif_get_ip4_addr
6000f2dc g     F .text.code	0000004c mbedtls_md_init_ctx
60012e40 g     F .text.code	0000006c mbedtls_rsa_import
200018d4  w    O .data	00000018 typeinfo name for std::_Sp_make_shared_tag
6000ef8c g     F .text.code	00000012 mbedtls_hmac_drbg_random
6000ba68 g     F .text.code	0000002e mbedtls_ecp_copy
00021fc8 g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
6001c624 g     F .text.code	00000006 mbedtls_ssl_conf_psk_cb
00006210  w    F .text.itcm	00000188 ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::detail::ElementProxy<ArduinoJson::V721PB22::JsonDocument&> >::getOrCreateData() const
00016a0c g     F .text.itcm	00000a38 websockets::WebsocketsServer::accept()
60002590 g     F .text.code	00000004 mbedtls_aes_encrypt
60004710 g     F .text.code	00000116 mbedtls_mpi_mul_mpi
0000cfb8 g     F .text.itcm	00000036 _fnet_ip_queue_read
60003b28 g     F .text.code	00000026 mbedtls_mpi_free
60032d90 g     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa
000227e4 g     F .text.itcm	00000022 .hidden ___Unwind_Resume
0002ad84 g     F .text.itcm	0000015c __multiply
6000bfec g     F .text.code	0000002e mbedtls_ecp_point_read_string
0002aee0 g     F .text.itcm	000000c0 __pow5mult
0001942c g     F .text.itcm	00000100 usb_serial_configure
6001e388 g     F .text.code	00000030 mbedtls_ssl_optimize_checksum
2000be68 g     O .bss	00000004 EventResponder::firstInterrupt
00019724 g     F .text.itcm	00000018 usb_serial_write
00018070 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
0000e968 g     F .text.itcm	0000002c fnet_netif_is_initialized
00000006 g       *ABS*	00000000 _itcm_block_count
60007bbc g     F .text.code	00000028 mbedtls_cipher_info_from_string
60002ee0 g     F .text.code	000000e6 mbedtls_asn1_write_len
0000c938 g     F .text.itcm	0000002e _fnet_eth_change_addr_notify
0001af68 g     F .text.itcm	00000014 std::unexpected()
00008c98  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
00014288  w    F .text.itcm	00000024 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00025ef0 g     F .text.itcm	0000000c __malloc_lock
200029f0 g     O .data	00000370 digital_pin_to_info_PGM
00018128 g     F .text.itcm	00000134 eeprom_write_byte
6000ecfc g     F .text.code	00000008 mbedtls_hmac_drbg_init
200019d4 g     O .data	0000000c vtable for IPAddress
00017dd0 g     F .text.itcm	00000024 digitalRead
20001b48  w    O .data	0000001c vtable for std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>
60012a1c g     F .text.code	00000138 mbedtls_pk_parse_public_key
0000bfa8 g     F .text.itcm	00000062 fnet_tls_release
6000ed0c g     F .text.code	00000004 mbedtls_hmac_drbg_set_reseed_interval
6001c6ec g     F .text.code	00000004 mbedtls_ssl_conf_curves
60036d50 g     O .text.progmem	00000030 mbedtls_rsa_info
000219f8 g     F .text.itcm	000002c8 .hidden __udivmoddi4
6000ca58 g     F .text.code	000000e0 mbedtls_ecp_check_pub_priv
60038ea0 g       *ABS*	00000000 _stextload
000107d0 g     F .text.itcm	00000024 fnet_rand
60010758 g     F .text.code	00000514 mbedtls_pem_read_buffer
0000c764 g     F .text.itcm	0000001e _fnet_checksum_netbuf
00010290 g     F .text.itcm	00000024 fnet_socket_addr_are_equal
000174b8 g     F .text.itcm	00000048 IPAddress::printTo(Print&) const
0001b33c g     F .text.itcm	00000004 std::runtime_error::what() const
60013a98 g     F .text.code	00000150 mbedtls_rsa_rsaes_pkcs1_v15_decrypt
0000920c g     F .text.itcm	0000001c EthernetClass::gatewayIP()
0000f060 g     F .text.itcm	00000184 _fnet_raw_input
00022c54 g     F .text.itcm	00000010 free
600218dc g     F .text.code	0000009c mbedtls_x509_crt_verify_info
00014494 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6000a5a8 g     F .text.code	00000028 mbedtls_ecdh_read_params
00009ac0  w    F .text.itcm	00000002 Print::flush()
6001c3d8 g     F .text.code	00000006 mbedtls_ssl_conf_verify
6001c420 g     F .text.code	00000008 mbedtls_ssl_conf_session_tickets_cb
20007890 g     O .data	00000034 fnet_fec0_if
2000bc70 g     O .bss	00000048 Logic
0001b3c0 g     F .text.itcm	00000048 std::logic_error::~logic_error()
0001a8e0 g     F .text.itcm	00000002 std::exception::~exception()
6000c8f4 g     F .text.code	00000038 mbedtls_ecp_check_pubkey
00007bf4  w    F .text.itcm	00000052 ArduinoJson::V721PB22::JsonDocument::JsonDocument(ArduinoJson::V721PB22::JsonDocument const&)
60016024 g     F .text.code	000000c8 mbedtls_sha1_finish_ret
00008be8 g     F .text.itcm	00000098 DNSClient::getHostByName(char const*, IPAddress&, unsigned short)
20200010 g     O .bss.dma	00000004 EthernetClass::socket_addr
0002acc8 g     F .text.itcm	00000060 __lo0bits
60033b1c g     O .text.progmem	0000016a mbedtls_test_ca_key_ec
6000f518 g     F .text.code	00000060 mbedtls_md_hmac_finish
600160ec g     F .text.code	0000003c mbedtls_sha1_starts
00021658 g     F .text.itcm	0000027a .hidden __subdf3
60009fe0 g     F .text.code	000000c0 mbedtls_dhm_make_public
600162e0 g     F .text.code	000000a4 mbedtls_sha256_starts_ret
0001b33c g     F .text.itcm	00000004 std::logic_error::what() const
60038e30 g     O .text.progmem	00000062 usb_config_descriptor_480
0000c10c g     F .text.itcm	00000042 fnet_tls_socket_send
0001a3c4 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
00009ac4 g     F .text.itcm	0000001c EthernetServer::write(unsigned char)
60003d78 g     F .text.code	00000084 mbedtls_mpi_safe_cond_swap
20002d74 g     O .data	00000038 fnet_fec_api
6000a61c g     F .text.code	00000054 mbedtls_ecdh_make_public
60004ea8 g     F .text.code	00000094 mbedtls_mpi_mod_mpi
0002165c g     F .text.itcm	00000276 .hidden __adddf3
600141b8 g     F .text.code	000001cc mbedtls_rsa_rsassa_pss_verify_ext
6000a3fc g     F .text.code	00000078 mbedtls_dhm_self_test
000265a0 g     F .text.itcm	00000054 _fflush_r
6000df28 g     F .text.code	0000023c mbedtls_entropy_self_test
6000c198 g     F .text.code	00000058 mbedtls_ecp_tls_read_group
00019820  w    F .text.itcm	000000d8 yield
6001cd78 g     F .text.code	00000006 mbedtls_ssl_sig_hash_set_const_hash
60014d50 g     F .text.code	0000007c mbedtls_rsa_deduce_crt
0001b078 g     F .text.itcm	0000006e __cxa_rethrow
00013090  w    F .text.itcm	00000e04 websockets::crypto::internals::sha1::process_block(unsigned char const*)
6001ca10 g     F .text.code	00000044 mbedtls_ssl_get_max_frag_len
6001037c g     F .text.code	00000044 mbedtls_oid_get_sig_alg_desc
00009ae0 g     F .text.itcm	00000040 EthernetServer::operator bool()
0001799c g     F .text.itcm	0000000e String::~String()
00027af0 g     F .text.itcm	00000000 memchr
0000b708 g     F .text.itcm	00000010 fnet_dhcp_cln_set_response_timeout
6001cd18 g     F .text.code	00000008 mbedtls_ssl_session_init
20007248 g     O .data	00000004 F_BUS_ACTUAL
00009814  w    F .text.itcm	00000050 EthernetClient::operator bool()
00021fd8 g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
20007268 g     O .data	00000008 EthernetClass::_fnet_poll
6000bfa4 g     F .text.code	00000012 mbedtls_ecp_is_zero
20001838 g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
60038d98 g     O .text.progmem	00000016 usb_string_product_name_default
000184b4 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0002b3c4 g     F .text.itcm	00000022 __sread
0000a344 g     F .text.itcm	00000014 EthernetClass::socketDisconnect(unsigned char)
600227f8 g     F .text.code	00000002 startup_default_middle_hook
60008cc0 g     F .text.code	0000000a mbedtls_des3_init
600162d4 g     F .text.code	0000000a mbedtls_sha256_clone
6000e800 g     F .text.code	000004dc mbedtls_gcm_self_test
6000c168 g     F .text.code	00000030 mbedtls_ecp_tls_write_point
6000823c g     F .text.code	00000074 mbedtls_cipher_auth_encrypt
200082c0 g       .data	00000000 _edata
00018260 g     F .text.itcm	00000104 attachInterrupt
60005060 g     F .text.code	00000134 mbedtls_mpi_write_string
0000ed30 g     F .text.itcm	0000005c _fnet_prot_init
6001e51c g     F .text.code	00000010 mbedtls_ssl_hash_from_md_alg
60020dd0 g     F .text.code	0000005c mbedtls_x509_get_ext
000141ec g     F .text.itcm	00000018 websockets::messageTypeFromOpcode(unsigned char)
0001b408 g     F .text.itcm	00000048 std::length_error::~length_error()
000227ac g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
2000ca00 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000c0c8 g     F .text.itcm	00000042 fnet_tls_socket_recv
6001c3e8 g     F .text.code	00000006 mbedtls_ssl_conf_dbg
6000f1e0 g     F .text.code	000000a0 mbedtls_md_info_from_string
00025fa8 g     F .text.itcm	00000010 puts
00027a98 g     F .text.itcm	00000048 __libc_init_array
000186a8  w    F .text.itcm	00000034 _sbrk
60014384 g     F .text.code	00000032 mbedtls_rsa_rsassa_pss_verify
600162c8 g     F .text.code	0000000a mbedtls_sha256_free
6001eeb0 g     F .text.code	00000084 mbedtls_ssl_dtls_replay_check
00022040 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
6000ed10 g     F .text.code	00000098 mbedtls_hmac_drbg_update
20002e78 g     O .data	00000004 mbedtls_test_srv_key_len
60021a10 g     F .text.code	00000038 mbedtls_x509_crt_is_revoked
0002b5b4 g     F .text.itcm	0000002c _lseek_r
2000cccf g     O .bss	00000001 _fnet_is_enabled
60007774 g     F .text.code	00000068 mbedtls_ccm_star_auth_decrypt
60016c9c g     F .text.code	000000a4 mbedtls_sha256_starts
6001612c g     F .text.code	00000004 mbedtls_sha1_finish
60004828 g     F .text.code	000001bc mbedtls_mpi_read_string
000227e4 g     F .text.itcm	00000022 .hidden _Unwind_Resume
0000dcec g     F .text.itcm	00000038 fnet_event_init
6001619c g     F .text.code	00000004 mbedtls_sha1
00006398  w    F .text.itcm	00000f90 Network::pollWebSocketServer()
600041dc g     F .text.code	0000007c mbedtls_mpi_cmp_abs
00008b8c g     F .text.itcm	00000012 Bounce::fallingEdge()
60002d7c g     F .text.code	000000b8 mbedtls_asn1_get_alg
000188ec g     F .text.itcm	00000630 usb_isr
000218f4 g     F .text.itcm	00000022 .hidden __floatsidf
20001884 g     O .data	00000010 typeinfo name for std::logic_error
0001a8f0 g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
60017f3c g     F .text.code	000000fc mbedtls_sha512_starts
600081e8 g     F .text.code	00000054 mbedtls_cipher_crypt
0001b204 g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
0000e1a0 g     F .text.itcm	0000016c _fnet_netbuf_copy
6000ee68 g     F .text.code	0000006e mbedtls_hmac_drbg_seed
60003130 g     F .text.code	00000068 mbedtls_asn1_write_algorithm_identifier
6000f374 g     F .text.code	00000030 mbedtls_md_clone
00019b40 g     F .text.itcm	00000084 sm_set_pool
6000fda0 g     F .text.code	000000b0 mbedtls_md5_finish_ret
0000df1c g     F .text.itcm	00000074 _fnet_mempool_malloc
00014208  w    F .text.itcm	00000020 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0001af7c g     F .text.itcm	00000010 std::get_terminate()
60017058 g     F .text.code	00000108 mbedtls_sha512_starts_ret
600076b4 g     F .text.code	00000048 mbedtls_ccm_setkey
0001a3f4 g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
60008768 g     F .text.code	0000008a mbedtls_ctr_drbg_reseed
60006efc g     F .text.code	00000060 mbedtls_camellia_crypt_ctr
0000ea64 g     F .text.itcm	0000001a fnet_netif_get_ip4_dns
60008c5c g     F .text.code	0000004e mbedtls_ctr_drbg_seed_entropy_len
6000164c g     F .text.code	00000028 ResetHandler
0001b4d0 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
0000a464 g     F .text.itcm	00000080 EthernetClass::socketSend(unsigned char, unsigned char const*, unsigned short)
000100ec g     F .text.itcm	0000003a _fnet_socket_buffer_append_record
0001a434 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
20001a38 g     O .data	00000010 vtable for websockets::WebsocketsClient
00017444 g     F .text.itcm	00000064 websockets::internals::fromInterfaceString[abi:cxx11](String const&&)
60064b9c g       *ABS*	00000000 _sdataload
000196d8 g     F .text.itcm	00000020 usb_serial_getchar
60010508 g     F .text.code	00000044 mbedtls_oid_get_cipher_alg
00008b08 g     F .text.itcm	00000028 Bounce::Bounce(unsigned char, unsigned long)
0000e720 g     F .text.itcm	0000001c _fnet_heap_init
0001a078  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
000019e4  w    F .text.itcm	00000260 Settings::Settings()
6001cd48 g     F .text.code	00000014 mbedtls_ssl_sig_hash_set_find
2000be6c g     O .bss	00000004 EventResponder::lastYield
6000aca4 g     F .text.code	0000003c mbedtls_ecdsa_from_keypair
00016018 g     F .text.itcm	000000cc websockets::internals::WebsocketsEndpoint::recv()
000265f4 g     F .text.itcm	00000040 sprintf
0001a648 g     F .text.itcm	00000000 __cxa_end_cleanup
0000ea04 g     F .text.itcm	0000000c _fnet_netif_get_default
600150ec g     F .text.code	00000048 mbedtls_sha1_starts_ret
6001c6f0 g     F .text.code	00000004 mbedtls_ssl_conf_sig_hashes
0000a3f0 g     F .text.itcm	0000001c EthernetClass::socketPeek(unsigned char)
6001d460 g     F .text.code	00000460 mbedtls_ssl_derive_keys
0001b1fc g     F .text.itcm	00000002 std::type_info::~type_info()
0000ee24 g     F .text.itcm	00000038 _fnet_prot_drain
00018374 g     F .text.itcm	00000134 memcpy
60010328 g     F .text.code	00000054 mbedtls_oid_get_sig_alg
6001e17c g     F .text.code	00000090 mbedtls_ssl_write
0000db20 g     F .text.itcm	00000006 _fnet_ip4_maximum_packet
000190b8  w    F .text.itcm	00000004 usb_serial_class::peek()
0000d26c g     F .text.itcm	0000003c _fnet_ip4_drain
0001b1d0 g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000106e0 g     F .text.itcm	00000026 fnet_memcmp
0001afe8 g     F .text.itcm	00000058 __cxa_init_primary_exception
0001af8c g     F .text.itcm	00000010 std::get_unexpected()
000102b4 g     F .text.itcm	00000018 _fnet_socket_addr_copy
0001756c  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#2}::_FUN(void*, void*)
6001cdb4 g     F .text.code	000000a0 mbedtls_ssl_handshake_free
6000eed8 g     F .text.code	000000b4 mbedtls_hmac_drbg_random_with_add
60003ec8 g     F .text.code	0000003e mbedtls_mpi_lsb
60018170 g     F .text.code	00000004 mbedtls_sha512
00010528 g     F .text.itcm	0000001c _fnet_mutex_init
00025efc g     F .text.itcm	0000000c __malloc_unlock
0001b55c  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
0001a4a8 g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000a0a0 g     F .text.itcm	00000080 EthernetClass::socketStatus(unsigned char)
6001c4b4 g     F .text.code	0000003c mbedtls_ssl_conf_own_cert
000094b4 g     F .text.itcm	00000034 EthernetClient::flush()
60020834 g     F .text.code	00000010 mbedtls_x509_get_alg_null
000220d4 g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
0002165c g     F .text.itcm	00000276 .hidden __aeabi_dadd
60007d10 g     F .text.code	0000008c mbedtls_cipher_set_padding_mode
000005d8  w    F .text.itcm	000000ec websockets::network::Teensy41TcpClient::readLine[abi:cxx11]()
0002196c g     F .text.itcm	0000005a .hidden __aeabi_l2d
6001c8f8 g     F .text.code	00000006 mbedtls_ssl_conf_renegotiation_enforced
60003dfc g     F .text.code	0000005e mbedtls_mpi_lset
600077dc g     F .text.code	00000018 mbedtls_ccm_auth_decrypt
60016b94 g     F .text.code	00000108 mbedtls_sha256_finish_ret
000160ec  w    F .text.itcm	0000000e std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
00027bc0 g     F .text.itcm	000000dc strlen
000143ec g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
00007328 g     F .text.itcm	000000d8 loop
60022f60 g     F .text.code	00000054 analog_init
6001c4ac g     F .text.code	00000006 mbedtls_ssl_conf_ca_chain
0001b230 g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
60017160 g     F .text.code	00000b00 mbedtls_internal_sha512_process
60031c58 g     O .text.progmem	00000004 mbedtls_test_ca_key_rsa_len
20002e6c g     O .data	00000004 mbedtls_test_ca_crt_len
6001c4a8 g     F .text.code	00000004 mbedtls_ssl_conf_cert_profile
0001456c g     F .text.itcm	00000060 websockets::WebsocketsClient::onMessage(std::function<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage)>)
0002ac88 g     F .text.itcm	00000040 __hi0bits
2000bcf4 g     O .bss	0000010e Settings
00009258  w    F .text.itcm	00000006 EthernetClient::connectPoll(bool)
60004434 g     F .text.code	000000c2 mbedtls_mpi_add_abs
000001ac  w    F .text.itcm	0000000e websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
00010778 g     F .text.itcm	00000056 fnet_strtok_r
60001674 g     F .text.code	0000000a mbedtls_aes_init
0002b60c g     F .text.itcm	00000106 _wcsnrtombs_l
600227fc g     F .text.code	00000002 startup_default_late_hook
000226e0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
6000f298 g     F .text.code	0000000a mbedtls_md_init
0000c5d0 g     F .text.itcm	00000028 _fnet_arp_drain
600126d4 g     F .text.code	00000258 mbedtls_pk_parse_key
60013914 g     F .text.code	00000140 mbedtls_rsa_rsaes_oaep_encrypt
0000f25c g     F .text.itcm	0000006e _fnet_socket_release
0000de38 g     F .text.itcm	00000014 fnet_isr_init
60001eec g     F .text.code	00000086 mbedtls_aes_crypt_cfb8
60020620 g     F .text.code	00000108 mbedtls_x509_self_test
20007a28 g     O .data	00000024 fnet_tcp_prot_if
60003198 g     F .text.code	00000058 mbedtls_asn1_write_bool
600031f0 g     F .text.code	00000066 mbedtls_asn1_write_int
00007bf4  w    F .text.itcm	00000052 ArduinoJson::V721PB22::JsonDocument::JsonDocument(ArduinoJson::V721PB22::JsonDocument const&)
0001a31c  w    F .text.itcm	00000072 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0000b948 g     F .text.itcm	000000a0 _fnet_dns_get_rr_name
20007278  w    O .data	00000004 websockets::crypto::internals::sha1::print_base64(char*, bool) const::table
0000e9e4 g     F .text.itcm	00000020 fnet_netif_get_default
600098d0 g     F .text.code	0000001e mbedtls_des3_set2key_enc
0000f514 g     F .text.itcm	000000fc fnet_socket
00000254  w    F .text.itcm	00000010 websockets::network::Teensy41TcpClient::available()
0000c520 g     F .text.itcm	00000090 _fnet_arp_resolve
6001c430 g     F .text.code	0000000e mbedtls_ssl_conf_dtls_anti_replay
600365e0 g     O .text.progmem	00000030 mbedtls_sha384_info
0000c8fc g     F .text.itcm	00000024 _fnet_eth_init
60036610 g     O .text.progmem	00000030 mbedtls_sha256_info
0000f610 g     F .text.itcm	0000016c fnet_socket_connect
6001c3fc g     F .text.code	00000006 mbedtls_ssl_conf_read_timeout
0000d104 g     F .text.itcm	00000058 _fnet_ip4_init
6001a260 g     F .text.code	00000048 mbedtls_ssl_set_client_transport_id
600076ac g     F .text.code	00000008 mbedtls_ccm_init
60020618 g     F .text.code	00000004 mbedtls_x509_time_is_past
6000feec g     F .text.code	00000004 mbedtls_md5
0000e994 g     F .text.itcm	00000020 fnet_netif_set_ip4_addr
6000a6a0 g     F .text.code	00000064 mbedtls_ecdh_calc_secret
00008cb8 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_unlock(void**)
600185b4 g     F .text.code	0000001c mbedtls_ssl_ciphersuite_uses_ec
00019c6c g     F .text.itcm	00000178 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
2000c468 g     O .bss	00000010 extmem_smalloc_pool
20050000 g       .text.csf	00000000 _estack
00019668 g     F .text.itcm	00000070 usb_serial_flush_input
0002b590 g     F .text.itcm	00000024 _isatty_r
6001d1e4 g     F .text.code	00000004 mbedtls_ssl_session_reset
60008760 g     F .text.code	00000004 mbedtls_ctr_drbg_set_entropy_len
6001c8e8 g     F .text.code	0000000e mbedtls_ssl_conf_legacy_renegotiation
0001b200 g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
00010264 g     F .text.itcm	00000012 _fnet_socket_addr_is_broadcast
000146ec g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePong(websockets::WebsocketsMessage)
600045dc g     F .text.code	0000004e mbedtls_mpi_sub_mpi
0001a8e4 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
6001345c g     F .text.code	000003c4 mbedtls_rsa_private


