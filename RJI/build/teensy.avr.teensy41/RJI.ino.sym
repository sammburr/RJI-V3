
C:\Users\sgbur\AppData\Local\Temp\arduino\sketches\81426149BB9C6EB85DB357043466DA95/RJI.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60023070 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0002bb50 l    d  .fini	00000000 .fini
0002bb54 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20007ec0 l    d  NonCacheable	00000000 NonCacheable
2000a4dc l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6006a2cc l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001fc ResetHandler2
00000000 l    df *ABS*	00000000 aes.c
600273fc l     O .text.progmem	00000028 RCON
60027424 l     O .text.progmem	00000100 FSb
60027524 l     O .text.progmem	00000400 RT0
60027924 l     O .text.progmem	00000400 RT3
60027d24 l     O .text.progmem	00000400 RT1
60028124 l     O .text.progmem	00000400 RT2
60028524 l     O .text.progmem	00000400 FT0
60028924 l     O .text.progmem	00000400 FT3
60028d24 l     O .text.progmem	00000400 FT1
60029124 l     O .text.progmem	00000400 FT2
60029524 l     O .text.progmem	00000100 RSb
60029624 l     O .text.progmem	00000040 aes_test_cfb128_pt
60029664 l     O .text.progmem	00000030 aes_test_ecb_dec
60029694 l     O .text.progmem	00000030 aes_test_ecb_enc
600296c4 l     O .text.progmem	00000030 aes_test_cbc_dec
600296f4 l     O .text.progmem	00000030 aes_test_cbc_enc
60029724 l     O .text.progmem	00000060 aes_test_cfb128_key
60029784 l     O .text.progmem	000000c0 aes_test_cfb128_ct
60029844 l     O .text.progmem	00000030 aes_test_ctr_nonce_counter
60029874 l     O .text.progmem	00000030 aes_test_ctr_key
600298a4 l     O .text.progmem	0000000c aes_test_ctr_len
600298b0 l     O .text.progmem	00000090 aes_test_ctr_ct
60029940 l     O .text.progmem	00000090 aes_test_ctr_pt
00000000 l    df *ABS*	00000000 asn1parse.c
00000000 l    df *ABS*	00000000 asn1write.c
00000000 l    df *ABS*	00000000 base64.c
600299d0 l     O .text.progmem	00000040 base64_enc_map
60029a10 l     O .text.progmem	00000080 base64_dec_map
60029a90 l     O .text.progmem	00000040 base64_test_dec
60029ad0 l     O .text.progmem	00000059 base64_test_enc
00000000 l    df *ABS*	00000000 bignum.c
600037c0 l     F .text.code	00000054 mpi_sub_hlp
60003814 l     F .text.code	000002e2 mpi_mul_hlp
60004238 l     F .text.code	00000106 mpi_montmul
60004f9c l     F .text.code	000000a2 mpi_write_hlp
60005174 l     F .text.code	00000068 mpi_check_small_factors
60005588 l     F .text.code	00000326 mpi_miller_rabin
60029b2c l     O .text.progmem	000002a0 small_prime
60029dcc l     O .text.progmem	00000024 gcd_pairs
00000000 l    df *ABS*	00000000 camellia.c
60006650 l     F .text.code	00000090 camellia_feistel
60029df0 l     O .text.progmem	00000100 FSb3
60029ef0 l     O .text.progmem	00000100 FSb
60029ff0 l     O .text.progmem	00000100 FSb4
6002a0f0 l     O .text.progmem	00000100 FSb2
6002a1f0 l     O .text.progmem	00000030 SIGMA_CHARS
6002a220 l     O .text.progmem	00000020 shifts
6002a240 l     O .text.progmem	000000a0 indexes
6002a2e0 l     O .text.progmem	00000028 transposes
6002a308 l     O .text.progmem	000000c0 camellia_test_ecb_key
6002a3c8 l     O .text.progmem	00000060 camellia_test_ecb_cipher
6002a428 l     O .text.progmem	00000020 camellia_test_ecb_plain
6002a448 l     O .text.progmem	00000060 camellia_test_cbc_key
6002a4a8 l     O .text.progmem	00000090 camellia_test_cbc_cipher
6002a538 l     O .text.progmem	00000030 camellia_test_cbc_plain
6002a568 l     O .text.progmem	00000030 camellia_test_ctr_nonce_counter
6002a598 l     O .text.progmem	00000030 camellia_test_ctr_key
6002a5c8 l     O .text.progmem	0000000c camellia_test_ctr_len
6002a5d4 l     O .text.progmem	00000090 camellia_test_ctr_ct
6002a664 l     O .text.progmem	00000090 camellia_test_ctr_pt
00000000 l    df *ABS*	00000000 ccm.c
60007340 l     F .text.code	0000034a ccm_auth_crypt
6002a6f4 l     O .text.progmem	00000010 key
6002a704 l     O .text.progmem	00000060 res
6002a764 l     O .text.progmem	0000000c msg_len
6002a770 l     O .text.progmem	0000000c iv_len
6002a77c l     O .text.progmem	0000000c add_len
6002a788 l     O .text.progmem	0000000c tag_len
6002a794 l     O .text.progmem	0000000c iv
6002a7a0 l     O .text.progmem	00000018 msg
6002a7b8 l     O .text.progmem	00000014 ad
00000000 l    df *ABS*	00000000 cipher.c
60007958 l     F .text.code	00000024 add_pkcs_padding
6000797c l     F .text.code	00000064 get_pkcs_padding
600079e0 l     F .text.code	0000002a add_one_and_zeros_padding
60007a0c l     F .text.code	00000060 get_one_and_zeros_padding
60007a6c l     F .text.code	0000002c add_zeros_and_len_padding
60007a98 l     F .text.code	0000005c get_zeros_and_len_padding
60007af4 l     F .text.code	00000012 add_zeros_padding
60007b08 l     F .text.code	00000048 get_zeros_padding
60007b50 l     F .text.code	00000018 get_no_padding
2000d648 l     O .bss	00000004 supported_init
00000000 l    df *ABS*	00000000 cipher_wrap.c
60008314 l     F .text.code	00000004 aes_crypt_ecb_wrap
60008318 l     F .text.code	00000004 aes_crypt_cbc_wrap
6000831c l     F .text.code	00000004 aes_crypt_cfb128_wrap
60008320 l     F .text.code	00000004 aes_crypt_ctr_wrap
60008324 l     F .text.code	00000004 aes_setkey_dec_wrap
60008328 l     F .text.code	00000004 aes_setkey_enc_wrap
6000832c l     F .text.code	0000000c gcm_aes_setkey_wrap
60008338 l     F .text.code	0000000c ccm_aes_setkey_wrap
60008344 l     F .text.code	00000004 camellia_crypt_ecb_wrap
60008348 l     F .text.code	00000004 camellia_crypt_cbc_wrap
6000834c l     F .text.code	00000004 camellia_crypt_cfb128_wrap
60008350 l     F .text.code	00000004 camellia_crypt_ctr_wrap
60008354 l     F .text.code	00000004 camellia_setkey_dec_wrap
60008358 l     F .text.code	00000004 camellia_setkey_enc_wrap
6000835c l     F .text.code	0000000c gcm_camellia_setkey_wrap
60008368 l     F .text.code	0000000c ccm_camellia_setkey_wrap
60008374 l     F .text.code	00000008 des_crypt_ecb_wrap
6000837c l     F .text.code	00000008 des3_crypt_ecb_wrap
60008384 l     F .text.code	00000004 des_crypt_cbc_wrap
60008388 l     F .text.code	00000004 des3_crypt_cbc_wrap
6000838c l     F .text.code	00000004 des_setkey_dec_wrap
60008390 l     F .text.code	00000004 des_setkey_enc_wrap
60008394 l     F .text.code	00000004 des3_set2key_dec_wrap
60008398 l     F .text.code	00000004 des3_set2key_enc_wrap
6000839c l     F .text.code	00000004 des3_set3key_dec_wrap
600083a0 l     F .text.code	00000004 des3_set3key_enc_wrap
600083a4 l     F .text.code	00000012 des3_ctx_free
600083b8 l     F .text.code	00000012 des_ctx_free
600083cc l     F .text.code	00000012 ccm_ctx_free
600083e0 l     F .text.code	00000012 gcm_ctx_free
600083f4 l     F .text.code	00000012 camellia_ctx_free
60008408 l     F .text.code	00000012 aes_ctx_free
6000841c l     F .text.code	00000018 des3_ctx_alloc
60008434 l     F .text.code	00000016 des_ctx_alloc
6000844c l     F .text.code	00000016 ccm_ctx_alloc
60008464 l     F .text.code	00000018 gcm_ctx_alloc
6000847c l     F .text.code	00000018 camellia_ctx_alloc
60008494 l     F .text.code	00000018 aes_ctx_alloc
6002f758 l     O .text.progmem	0000001c aes_128_ecb_info
6002f73c l     O .text.progmem	0000001c aes_192_ecb_info
6002f720 l     O .text.progmem	0000001c aes_256_ecb_info
6002f704 l     O .text.progmem	0000001c aes_128_cbc_info
6002f6e8 l     O .text.progmem	0000001c aes_192_cbc_info
6002f6cc l     O .text.progmem	0000001c aes_256_cbc_info
6002f6b0 l     O .text.progmem	0000001c aes_128_cfb128_info
6002f694 l     O .text.progmem	0000001c aes_192_cfb128_info
6002f678 l     O .text.progmem	0000001c aes_256_cfb128_info
6002f65c l     O .text.progmem	0000001c aes_128_ctr_info
6002f640 l     O .text.progmem	0000001c aes_192_ctr_info
6002f624 l     O .text.progmem	0000001c aes_256_ctr_info
6002f5e4 l     O .text.progmem	0000001c aes_128_gcm_info
6002f5c8 l     O .text.progmem	0000001c aes_192_gcm_info
6002f5ac l     O .text.progmem	0000001c aes_256_gcm_info
6002f56c l     O .text.progmem	0000001c aes_128_ccm_info
6002f550 l     O .text.progmem	0000001c aes_192_ccm_info
6002f534 l     O .text.progmem	0000001c aes_256_ccm_info
6002f4f4 l     O .text.progmem	0000001c camellia_128_ecb_info
6002f4d8 l     O .text.progmem	0000001c camellia_192_ecb_info
6002f4bc l     O .text.progmem	0000001c camellia_256_ecb_info
6002f4a0 l     O .text.progmem	0000001c camellia_128_cbc_info
6002f484 l     O .text.progmem	0000001c camellia_192_cbc_info
6002f468 l     O .text.progmem	0000001c camellia_256_cbc_info
6002f44c l     O .text.progmem	0000001c camellia_128_cfb128_info
6002f430 l     O .text.progmem	0000001c camellia_192_cfb128_info
6002f414 l     O .text.progmem	0000001c camellia_256_cfb128_info
6002f3f8 l     O .text.progmem	0000001c camellia_128_ctr_info
6002f3dc l     O .text.progmem	0000001c camellia_192_ctr_info
6002f3c0 l     O .text.progmem	0000001c camellia_256_ctr_info
6002f380 l     O .text.progmem	0000001c camellia_128_gcm_info
6002f364 l     O .text.progmem	0000001c camellia_192_gcm_info
6002f348 l     O .text.progmem	0000001c camellia_256_gcm_info
6002f308 l     O .text.progmem	0000001c camellia_128_ccm_info
6002f2ec l     O .text.progmem	0000001c camellia_192_ccm_info
6002f2d0 l     O .text.progmem	0000001c camellia_256_ccm_info
6002f290 l     O .text.progmem	0000001c des_ecb_info
6002f234 l     O .text.progmem	0000001c des_ede_ecb_info
6002f1d8 l     O .text.progmem	0000001c des_ede3_ecb_info
6002f274 l     O .text.progmem	0000001c des_cbc_info
6002f218 l     O .text.progmem	0000001c des_ede_cbc_info
6002f1bc l     O .text.progmem	0000001c des_ede3_cbc_info
6002f1f4 l     O .text.progmem	00000024 des_ede3_info
6002f250 l     O .text.progmem	00000024 des_ede_info
6002f2ac l     O .text.progmem	00000024 des_info
6002f324 l     O .text.progmem	00000024 ccm_camellia_info
6002f39c l     O .text.progmem	00000024 gcm_camellia_info
6002f510 l     O .text.progmem	00000024 camellia_info
6002f588 l     O .text.progmem	00000024 ccm_aes_info
6002f600 l     O .text.progmem	00000024 gcm_aes_info
6002f774 l     O .text.progmem	00000024 aes_info
00000000 l    df *ABS*	00000000 ctr_drbg.c
600084ac l     F .text.code	000001b0 block_cipher_df
6000865c l     F .text.code	00000098 ctr_drbg_update_internal
600086f4 l     F .text.code	00000020 ctr_drbg_self_test_entropy
2000d65c l     O .bss	00000004 test_offset
6002f798 l     O .text.progmem	00000060 entropy_source_pr
6002f7f8 l     O .text.progmem	00000010 result_pr
6002f808 l     O .text.progmem	00000040 entropy_source_nopr
6002f848 l     O .text.progmem	00000010 result_nopr
6002f858 l     O .text.progmem	00000010 nonce_pers_nopr
6002f868 l     O .text.progmem	00000010 nonce_pers_pr
00000000 l    df *ABS*	00000000 des.c
60009850 l     F .text.code	00000060 des3_set2key
600098f0 l     F .text.code	0000006c des3_set3key
6002f878 l     O .text.progmem	00000080 odd_parity_table
6002f8f8 l     O .text.progmem	00000080 weak_key_table
6002f978 l     O .text.progmem	00000100 SB8
6002fa78 l     O .text.progmem	00000100 SB7
6002fb78 l     O .text.progmem	00000100 SB6
6002fc78 l     O .text.progmem	00000100 SB4
6002fd78 l     O .text.progmem	00000100 SB2
6002fe78 l     O .text.progmem	00000100 SB5
6002ff78 l     O .text.progmem	00000100 SB3
60030078 l     O .text.progmem	00000100 SB1
60030178 l     O .text.progmem	00000040 LHs
600301b8 l     O .text.progmem	00000040 RHs
600301f8 l     O .text.progmem	00000018 des3_test_keys
60030210 l     O .text.progmem	00000018 des3_test_ecb_dec
60030228 l     O .text.progmem	00000018 des3_test_ecb_enc
60030240 l     O .text.progmem	00000018 des3_test_cbc_enc
60030258 l     O .text.progmem	00000018 des3_test_cbc_dec
00000000 l    df *ABS*	00000000 dhm.c
60009d20 l     F .text.code	0000003c dhm_read_bignum
60009d5c l     F .text.code	00000064 dhm_check_range
60030270 l     O .text.progmem	000000fb mbedtls_test_dhm_params
00000000 l    df *ABS*	00000000 ecdh.c
00000000 l    df *ABS*	00000000 ecdsa.c
6000a6e4 l     F .text.code	0000005a derive_mpi
00000000 l    df *ABS*	00000000 ecp.c
6000acc8 l     F .text.code	00000090 ecp_modp
6000ad58 l     F .text.code	00000104 ecp_normalize_jac
6000ae5c l     F .text.code	0000004a ecp_safe_invert_jac
6000aea8 l     F .text.code	00000540 ecp_double_jac
6000b3e8 l     F .text.code	0000019c ecp_check_pubkey_sw
6000b584 l     F .text.code	0000025c ecp_normalize_jac_many
6000b7e0 l     F .text.code	00000078 ecp_select_comb.constprop.0
6000baac l     F .text.code	000004d8 ecp_add_mixed
6000c790 l     F .text.code	000000b4 mbedtls_ecp_mul_shortcuts
2000cb90 l     O .bss	00000004 add_count
2000cb94 l     O .bss	00000004 dbl_count
2000ce08 l     O .bss	00000005 ecp_supported_grp_id
2000d280 l     O .bss	00000004 init_done.0
2000d344 l     O .bss	00000004 mul_count
6003036c l     O .text.progmem	0000003c ecp_supported_curves
00000000 l    df *ABS*	00000000 ecp_curves.c
6000ce9c l     F .text.code	0000050c ecp_mod_p384
6000d3a8 l     F .text.code	00000258 ecp_mod_p224
6000d600 l     F .text.code	000003b6 ecp_mod_p256
6000d9b8 l     F .text.code	00000172 ecp_mod_p192
20007a64 l     O .data	00000004 one.0
600303a8 l     O .text.progmem	00000018 secp192r1_p
600303c0 l     O .text.progmem	00000018 secp192r1_b
600303d8 l     O .text.progmem	00000018 secp192r1_n
600303f0 l     O .text.progmem	00000018 secp192r1_gx
60030408 l     O .text.progmem	00000018 secp192r1_gy
60030420 l     O .text.progmem	00000020 secp224r1_p
60030440 l     O .text.progmem	0000001c secp224r1_b
6003045c l     O .text.progmem	0000001c secp224r1_n
60030478 l     O .text.progmem	0000001c secp224r1_gx
60030494 l     O .text.progmem	0000001c secp224r1_gy
600304b0 l     O .text.progmem	00000020 secp256r1_p
600304d0 l     O .text.progmem	00000020 secp256r1_b
600304f0 l     O .text.progmem	00000020 secp256r1_n
60030510 l     O .text.progmem	00000020 secp256r1_gx
60030530 l     O .text.progmem	00000020 secp256r1_gy
60030550 l     O .text.progmem	00000030 secp384r1_p
60030580 l     O .text.progmem	00000030 secp384r1_b
600305b0 l     O .text.progmem	00000030 secp384r1_n
600305e0 l     O .text.progmem	00000030 secp384r1_gx
60030610 l     O .text.progmem	00000030 secp384r1_gy
00000000 l    df *ABS*	00000000 entropy.c
6000dc68 l     F .text.code	0000007c entropy_update
6000dce4 l     F .text.code	000000a4 entropy_gather_internal
6000dd88 l     F .text.code	00000014 entropy_dummy_source
00000000 l    df *ABS*	00000000 gcm.c
6000e144 l     F .text.code	00000124 gcm_mult
60030d98 l     O .text.progmem	00000018 pt_index
60030d98 l     O .text.progmem	00000018 key_index
60030640 l     O .text.progmem	00000080 last4
600306c0 l     O .text.progmem	00000480 ct
60030b40 l     O .text.progmem	00000120 tag
60030c60 l     O .text.progmem	00000018 pt_len
60030c78 l     O .text.progmem	00000018 iv_index
60030c90 l     O .text.progmem	00000018 iv_len
60030ca8 l     O .text.progmem	00000018 add_index
60030cc0 l     O .text.progmem	00000018 add_len
60030cd8 l     O .text.progmem	000000c0 key
60030db0 l     O .text.progmem	00000180 iv
60030f30 l     O .text.progmem	00000180 additional
600310b0 l     O .text.progmem	00000180 pt
00000000 l    df *ABS*	00000000 hmac_drbg.c
6000ecbc l     F .text.code	00000020 hmac_drbg_self_test_entropy
2000d660 l     O .bss	00000004 test_offset
60031230 l     O .text.progmem	00000038 entropy_pr
60031268 l     O .text.progmem	00000028 entropy_nopr
60031290 l     O .text.progmem	00000050 result_nopr
600312e0 l     O .text.progmem	00000050 result_pr
00000000 l    df *ABS*	00000000 md.c
60031330 l     O .text.progmem	0000001c supported_digests
20000648 l     O .data	00000018 CSWTCH.2
00000000 l    df *ABS*	00000000 md5.c
6003134c l     O .text.progmem	0000001c md5_test_buflen
60031368 l     O .text.progmem	00000237 md5_test_buf
600315a0 l     O .text.progmem	00000070 md5_test_sum
00000000 l    df *ABS*	00000000 md_wrap.c
6000ff6c l     F .text.code	00000004 md5_starts_wrap
6000ff70 l     F .text.code	00000004 md5_update_wrap
6000ff74 l     F .text.code	00000004 md5_finish_wrap
6000ff78 l     F .text.code	00000004 md5_clone_wrap
6000ff7c l     F .text.code	00000004 md5_process_wrap
6000ff80 l     F .text.code	00000004 sha1_starts_wrap
6000ff84 l     F .text.code	00000004 sha1_update_wrap
6000ff88 l     F .text.code	00000004 sha1_finish_wrap
6000ff8c l     F .text.code	00000004 sha1_clone_wrap
6000ff90 l     F .text.code	00000004 sha1_process_wrap
6000ff94 l     F .text.code	00000006 sha224_starts_wrap
6000ff9c l     F .text.code	00000004 sha224_update_wrap
6000ffa0 l     F .text.code	00000004 sha224_finish_wrap
6000ffa4 l     F .text.code	00000006 sha224_wrap
6000ffac l     F .text.code	00000004 sha224_clone_wrap
6000ffb0 l     F .text.code	00000004 sha224_process_wrap
6000ffb4 l     F .text.code	00000006 sha256_starts_wrap
6000ffbc l     F .text.code	00000006 sha256_wrap
6000ffc4 l     F .text.code	00000006 sha384_starts_wrap
6000ffcc l     F .text.code	00000004 sha384_update_wrap
6000ffd0 l     F .text.code	00000004 sha384_finish_wrap
6000ffd4 l     F .text.code	00000006 sha384_wrap
6000ffdc l     F .text.code	00000004 sha384_clone_wrap
6000ffe0 l     F .text.code	00000004 sha384_process_wrap
6000ffe4 l     F .text.code	00000006 sha512_starts_wrap
6000ffec l     F .text.code	00000006 sha512_wrap
6000fff4 l     F .text.code	00000012 md5_ctx_free
60010008 l     F .text.code	00000012 sha1_ctx_free
6001001c l     F .text.code	00000012 sha224_ctx_free
60010030 l     F .text.code	00000012 sha384_ctx_free
60010044 l     F .text.code	00000016 md5_ctx_alloc
6001005c l     F .text.code	00000016 sha1_ctx_alloc
60010074 l     F .text.code	00000016 sha224_ctx_alloc
6001008c l     F .text.code	00000016 sha384_ctx_alloc
00000000 l    df *ABS*	00000000 oid.c
60031730 l     O .text.progmem	00000078 oid_x509_ext
600317a8 l     O .text.progmem	00000190 oid_x520_attr_type
60031938 l     O .text.progmem	00000050 oid_pk_alg
60031988 l     O .text.progmem	00000064 oid_ecp_grp
600319ec l     O .text.progmem	00000118 oid_sig_alg
60031b04 l     O .text.progmem	0000008c oid_md_alg
60031b90 l     O .text.progmem	00000078 oid_md_hmac
60031c08 l     O .text.progmem	00000070 oid_ext_key_usage
60031c78 l     O .text.progmem	0000003c oid_cipher_alg
60031cb4 l     O .text.progmem	0000003c oid_pkcs12_pbe_alg
00000000 l    df *ABS*	00000000 pem.c
60010580 l     F .text.code	000000ea pem_pbkdf1
6001066c l     F .text.code	0000005c pem_des3_decrypt
600106c8 l     F .text.code	00000062 pem_aes_decrypt
00000000 l    df *ABS*	00000000 pk.c
20000698 l     O .data	00000010 CSWTCH.5
00000000 l    df *ABS*	00000000 pk_wrap.c
600110c4 l     F .text.code	0000000e rsa_can_do
600110d4 l     F .text.code	0000000a rsa_get_bitlen
600110e0 l     F .text.code	00000050 rsa_verify_wrap
60011130 l     F .text.code	0000003c rsa_sign_wrap
6001116c l     F .text.code	00000048 rsa_decrypt_wrap
600111b4 l     F .text.code	00000048 rsa_encrypt_wrap
600111fc l     F .text.code	00000004 rsa_check_pair_wrap
60011200 l     F .text.code	00000028 rsa_debug
60011228 l     F .text.code	0000000c eckey_can_do
60011234 l     F .text.code	00000004 eckey_get_bitlen
60011238 l     F .text.code	00000020 ecdsa_verify_wrap
60011258 l     F .text.code	00000004 ecdsa_sign_wrap
6001125c l     F .text.code	00000050 eckey_verify_wrap
600112ac l     F .text.code	00000054 eckey_sign_wrap
60011300 l     F .text.code	00000004 eckey_check_pair
60011304 l     F .text.code	00000014 eckey_debug
60011318 l     F .text.code	0000000c eckeydh_can_do
60011324 l     F .text.code	0000000c ecdsa_can_do
60011330 l     F .text.code	0000000c rsa_alt_can_do
6001133c l     F .text.code	0000000c rsa_alt_get_bitlen
60011348 l     F .text.code	00000042 rsa_alt_sign_wrap
6001138c l     F .text.code	00000040 rsa_alt_decrypt_wrap
600113cc l     F .text.code	00000012 rsa_free_wrap
600113e0 l     F .text.code	00000012 eckey_free_wrap
600113f4 l     F .text.code	00000012 ecdsa_free_wrap
60011408 l     F .text.code	00000014 rsa_alt_free_wrap
6001141c l     F .text.code	0000001a rsa_alloc_wrap
60011438 l     F .text.code	00000016 eckey_alloc_wrap
60011450 l     F .text.code	00000016 ecdsa_alloc_wrap
60011468 l     F .text.code	00000008 rsa_alt_alloc_wrap
60011470 l     F .text.code	00000098 rsa_alt_check_pair
00000000 l    df *ABS*	00000000 pkcs12.c
00000000 l    df *ABS*	00000000 pkcs5.c
60031de0 l     O .text.progmem	000000c0 result_key
60031ea0 l     O .text.progmem	00000018 plen
60031eb8 l     O .text.progmem	00000018 slen
60031ed0 l     O .text.progmem	00000018 it_cnt
60031ee8 l     O .text.progmem	00000018 key_len
60031f00 l     O .text.progmem	000000f0 salt
60031ff0 l     O .text.progmem	000000c0 password
00000000 l    df *ABS*	00000000 pkparse.c
60011cec l     F .text.code	000000b8 pk_get_rsapubkey
60011da4 l     F .text.code	00000210 pk_parse_key_pkcs1_der
60011fb4 l     F .text.code	00000058 pk_get_pk_alg
6001200c l     F .text.code	000002f4 pk_use_ecparams
60012300 l     F .text.code	000001a8 pk_parse_key_sec1_der
600124a8 l     F .text.code	000000e8 pk_parse_key_pkcs8_unencrypted_der
60012590 l     F .text.code	00000124 pk_parse_key_pkcs8_encrypted_der
00000000 l    df *ABS*	00000000 platform_util.c
20007a24 l     O .data	00000004 memset_func
00000000 l    df *ABS*	00000000 rsa.c
60012b44 l     F .text.code	000000a2 mgf_mask
60012be8 l     F .text.code	0000013c rsa_rsassa_pkcs1_v15_encode
60012d24 l     F .text.code	0000001e myrand
60012d44 l     F .text.code	000000c4 rsa_check_context.constprop.0
00000000 l    df *ABS*	00000000 rsa_internal.c
00000000 l    df *ABS*	00000000 sha1.c
600320b0 l     O .text.progmem	0000003c sha1_test_sum
600320ec l     O .text.progmem	0000000c sha1_test_buflen
600320f8 l     O .text.progmem	000000ab sha1_test_buf
00000000 l    df *ABS*	00000000 sha256.c
600321a4 l     O .text.progmem	00000100 K
600322a4 l     O .text.progmem	000000c0 sha256_test_sum
60032364 l     O .text.progmem	0000000c sha256_test_buflen
60032370 l     O .text.progmem	000000ab sha256_test_buf
00000000 l    df *ABS*	00000000 sha512.c
60032420 l     O .text.progmem	00000280 K
600326a0 l     O .text.progmem	00000180 sha512_test_sum
60032820 l     O .text.progmem	0000000c sha512_test_buflen
6003282c l     O .text.progmem	00000153 sha512_test_buf
00000000 l    df *ABS*	00000000 ssl_cache.c
00000000 l    df *ABS*	00000000 ssl_ciphersuites.c
60032cc0 l     O .text.progmem	00001060 ciphersuite_definitions
2000d43c l     O .bss	0000020c supported_ciphersuites
2000d64c l     O .bss	00000004 supported_init
60032980 l     O .text.progmem	00000340 ciphersuite_preference
00000000 l    df *ABS*	00000000 ssl_cli.c
60018610 l     F .text.code	000000e0 ssl_write_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_srv.c
60019f90 l     F .text.code	00000040 ssl_parse_client_dh_public
60019fd0 l     F .text.code	000000d0 ssl_parse_client_psk_identity
6001a0a0 l     F .text.code	00000198 ssl_parse_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_tls.c
6001bc38 l     F .text.code	00000040 ssl_update_checksum_start
6001bc78 l     F .text.code	00000024 ssl_update_checksum_md5sha1
6001bc9c l     F .text.code	0000004e ssl_calc_verify_tls
6001bcec l     F .text.code	00000098 ssl_calc_finished_tls
6001bd84 l     F .text.code	0000000a ssl_update_checksum_sha256
6001bd90 l     F .text.code	0000002c ssl_calc_verify_tls_sha256
6001bdbc l     F .text.code	00000078 ssl_calc_finished_tls_sha256
6001be34 l     F .text.code	0000000a ssl_update_checksum_sha384
6001be40 l     F .text.code	0000002c ssl_calc_verify_tls_sha384
6001be6c l     F .text.code	0000007c ssl_calc_finished_tls_sha384
6001bee8 l     F .text.code	00000008 ssl_cookie_write_dummy
6001bef0 l     F .text.code	00000008 ssl_cookie_check_dummy
6001bef8 l     F .text.code	00000074 ssl_swap_epochs
6001bf6c l     F .text.code	00000124 tls_prf_generic
6001c090 l     F .text.code	00000022 tls_prf_sha256
6001c0b4 l     F .text.code	00000022 tls_prf_sha384
6001c0d8 l     F .text.code	00000210 tls1_prf
6001c2e8 l     F .text.code	00000094 ssl_session_copy
6001ce34 l     F .text.code	000001bc ssl_handshake_init
6001d098 l     F .text.code	0000012c ssl_session_reset_int
6001d1c8 l     F .text.code	00000044 ssl_start_renegotiation
6001df94 l     F .text.code	0000004a ssl_resend_hello_request
6001e068 l     F .text.code	00000066 ssl_check_ctr_renegotiate
6001e0d0 l     F .text.code	0000008c ssl_write_real
20007a68 l     O .data	00000018 ssl_preset_default_hashes
20007a80 l     O .data	0000000c ssl_preset_suiteb_ciphersuites
20007a8c l     O .data	00000003 ssl_preset_suiteb_curves
20007a90 l     O .data	0000000c ssl_preset_suiteb_hashes
20000638 l     O .data	00000010 CSWTCH.158
200006a8 l     O .data	00000010 CSWTCH.72
00000000 l    df *ABS*	00000000 x509.c
00000000 l    df *ABS*	00000000 x509_crt.c
60020ef4 l     F .text.code	0000004e x509_profile_check_key
60020f44 l     F .text.code	00000066 x509_crt_check_signature
60020fac l     F .text.code	000000b8 x509_name_cmp
60021064 l     F .text.code	000000b0 x509_crt_find_parent_in
60021114 l     F .text.code	000000ba x509_crt_check_cn
60033d20 l     O .text.progmem	000000a8 x509_crt_verify_strings
00000000 l    df *ABS*	00000000 tempmon.c
2000d3a8 l     O .bss	00000004 s_hotCount
2000d3ac l     O .bss	00000004 s_hotTemp
2000d3b0 l     O .bss	00000004 s_hot_ROOM
2000d3b4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00018210 l     F .text.itcm	00000088 schedule_transfer
00018298 l     F .text.itcm	00000036 run_callbacks
000182d0 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000ce10 l     O .bss	00000008 endpoint0_buffer
2000ce18 l     O .bss	00000004 endpoint0_notify_mask
2000a6c0 l     O .bss	00000008 endpoint0_setupdata
2000ce1c l     O .bss	00000004 endpointN_notify_mask
2000d360 l     O .bss	00000008 reply_buffer
2000d68d l     O .bss	00000001 sof_usage
2000d694 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2000d688 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2000d348 l     O .bss	00000000 object.0
60023038 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 RJI.ino.cpp
00000220 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000354 l     F .text.itcm	0000001a ArduinoJson::V701PB2::Converter<char const*, void>::fromJson(ArduinoJson::V701PB2::JsonVariantConst) [clone .isra.0]
00000398 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000450 l     F .text.itcm	00000036 Settings::write_16bit(unsigned short, int) [clone .isra.0]
00000564 l     F .text.itcm	00000040 void Debug::printInfo<char const*, char const*>(char const*, char const*) [clone .constprop.0]
000005a4 l     F .text.itcm	00000064 void Debug::printInfo<char const*, char const*, char const*, char const*>(char const*, char const*, char const*, char const*) [clone .isra.0]
00000608 l     F .text.itcm	00000130 Network::pollWebServer() [clone .isra.0]
60023070 l     O .text.progmem	0000438c webpageA
00000738 l     F .text.itcm	0000059c Settings::printSettings() [clone .isra.0]
00001020 l     F .text.itcm	000000d8 bool ArduinoJson::V701PB2::detail::VisitorAdapter<ArduinoJson::V701PB2::detail::JsonVariantCopier>::visit<ArduinoJson::V701PB2::JsonString>(ArduinoJson::V701PB2::JsonString const&) [clone .isra.0]
000032b0 l     F .text.itcm	000002a2 Settings::setEngineer(int, ArduinoJson::V701PB2::JsonDocument) [clone .isra.0]
00005838 l     F .text.itcm	00000310 ArduinoJson::V701PB2::detail::JsonVariantCopier::result_type ArduinoJson::V701PB2::detail::accept<ArduinoJson::V701PB2::detail::JsonVariantCopier>(ArduinoJson::V701PB2::JsonVariantConst, ArduinoJson::V701PB2::detail::JsonVariantCopier&) [clone .isra.0]
00005e10 l     F .text.itcm	000009ac ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::result_type ArduinoJson::V701PB2::detail::VariantData::accept<ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> > >(ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >&) const [clone .isra.0]
00006b28 l     F .text.itcm	00000a08 ArduinoJson::V701PB2::DeserializationError::Code ArduinoJson::V701PB2::detail::JsonDeserializer<ArduinoJson::V701PB2::detail::Reader<String, void> >::parseVariant<ArduinoJson::V701PB2::detail::AllowAllFilter>(ArduinoJson::V701PB2::detail::VariantData&, ArduinoJson::V701PB2::detail::AllowAllFilter, ArduinoJson::V701PB2::DeserializationOption::NestingLimit) [clone .isra.0]
00008374 l     F .text.itcm	000001ac _GLOBAL__sub_I_DebugLight
00000000 l    df *ABS*	00000000 NativeEthernet.cpp
00008b80 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN13EthernetClass17_dnsServerAddressE
2000c468 l     O .bss	00000004 guard variable for EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
2000c85c l     O .bss	00000010 EthernetClass::link_callback(void*, fnet_bool_t, void*)::dhcp_params
2000c86c l     O .bss	00000004 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
200018a0 l     O .data	00000010 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::teensy_mutex_api
200018b0 l     O .data	00000008 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::timer_api
200018b8 l     O .data	00000010 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::teensy_mutex_api
200018c8 l     O .data	00000008 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::timer_api
00000000 l    df *ABS*	00000000 crypto.cpp
00012948 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00013ad8 l     F .text.itcm	00000034 _GLOBAL__sub_I__ZN10websockets6crypto9internals13base64_encodeB5cxx11EPKhj
2000c7d0 l     O .bss	00000018 websockets::crypto::internals::base64_chars
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
00016c6c l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial1
2000c478 l     O .bss	00000040 rx_buffer1
2000c678 l     O .bss	00000040 tx_buffer1
20000aec l     O .data	00000064 UART6_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00016cec l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial2
2000c4b8 l     O .bss	00000040 rx_buffer2
2000c6b8 l     O .bss	00000028 tx_buffer2
20007074 l     O .data	00000064 UART4_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00016d70 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial3
2000c4f8 l     O .bss	00000040 rx_buffer3
2000c6e0 l     O .bss	00000028 tx_buffer3
20006fac l     O .data	00000064 UART2_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial4.cpp
00016df4 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial4
2000c538 l     O .bss	00000040 rx_buffer4
2000c708 l     O .bss	00000028 tx_buffer4
20007010 l     O .data	00000064 UART3_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
00016e78 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial5
2000c578 l     O .bss	00000040 rx_buffer5
2000c730 l     O .bss	00000028 tx_buffer5
200071a0 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial6.cpp
00016efc l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial6
2000c5b8 l     O .bss	00000040 rx_buffer6
2000c758 l     O .bss	00000028 tx_buffer6
20006f48 l     O .data	00000064 UART1_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial7.cpp
00016f80 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial7
2000c5f8 l     O .bss	00000040 rx_buffer7
2000c780 l     O .bss	00000028 tx_buffer7
2000713c l     O .data	00000064 UART7_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial8.cpp
00017004 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial8
2000c638 l     O .bss	00000040 rx_buffer8
2000c7a8 l     O .bss	00000028 tx_buffer8
200070d8 l     O .data	00000064 UART5_Hardware
00000000 l    df *ABS*	00000000 eh_alloc.o
0001a3ec l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0001a474 l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0001a51c l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 certs.c
6002d3b8 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha1
6002d8d4 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha256
00000000 l    df *ABS*	00000000 serialEvent1.cpp
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 serialEvent4.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 serialEvent6.cpp
00000000 l    df *ABS*	00000000 serialEvent7.cpp
00000000 l    df *ABS*	00000000 serialEvent8.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
200077b8 l     O .data	00000012 device_descriptor
20007a28 l     O .data	00000028 microsoft_os_compatible_id_desc
20007a50 l     O .data	00000012 microsoft_os_string_desc
60033efc l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 NativeDns.cpp
00000000 l    df *ABS*	00000000 NativeEthernetClient.cpp
20007ab4 l     O .data	00000001 EthernetClient::connect(IPAddress, unsigned short)::first_call
20007ab5 l     O .data	00000001 EthernetClient::connect(char const*, unsigned short)::first_call
00000000 l    df *ABS*	00000000 NativeEthernetServer.cpp
00000000 l    df *ABS*	00000000 Nativesocket.cpp
200005d8 l     O .data	00000005 CSWTCH.117
00000000 l    df *ABS*	00000000 fnet_cpu.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_eth.c
00009e48 l     F .text.itcm	00000004 fnet_mimxrt_eth_phy_init
00009e4c l     F .text.itcm	0000016c fnet_mimxrt_eth_init
2000788c l     O .data	0000011c fnet_mimxrt_eth0_if
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr_inst.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_serial.cpp
00000000 l    df *ABS*	00000000 fnet_fec.c
0000a04c l     F .text.itcm	00000042 _fnet_fec_get_hw_addr
0000a090 l     F .text.itcm	00000026 _fnet_fec_get_statistics
0000a0b8 l     F .text.itcm	0000001e fnet_fec_isr_handler_top
0000a0d8 l     F .text.itcm	00000064 _fnet_fec_phy_read
0000a13c l     F .text.itcm	00000060 _fnet_fec_phy_write
0000a19c l     F .text.itcm	00000070 _fnet_fec_set_hw_addr
0000a20c l     F .text.itcm	00000028 _fnet_fec_release
0000a234 l     F .text.itcm	0000019c _fnet_fec_init
0000a470 l     F .text.itcm	0000002e fnet_fec_isr_handler_bottom
0000a3d0 l     F .text.itcm	0000009e _fnet_fec_input
00000000 l    df *ABS*	00000000 fnet_dhcp.c
00000000 l    df *ABS*	00000000 fnet_dhcp_cln.c
0000a6c0 l     F .text.itcm	0000013e _fnet_dhcp_cln_parse_options
0000a800 l     F .text.itcm	000000dc _fnet_dhcp_cln_receive_message
0000a8dc l     F .text.itcm	00000204 _fnet_dhcp_cln_send_message
0000aae0 l     F .text.itcm	0000011c _fnet_dhcp_cln_set_state
0000abfc l     F .text.itcm	0000006c _fnet_dhcp_cln_apply_params
0000ac68 l     F .text.itcm	00000294 _fnet_dhcp_cln_poll
2000ce34 l     O .bss	000002cc fnet_dhcp_cln_if_list
20007828 l     O .data	00000006 fnet_dhcp_cln_parameter_request_list
00000000 l    df *ABS*	00000000 fnet_dns.c
0000b070 l     F .text.itcm	00000068 _fnet_dns_cmp_name
0000b340 l     F .text.itcm	000001e0 _fnet_dns_poll
2000cb98 l     O .bss	00000270 dns_if_list
00000000 l    df *ABS*	00000000 fnet_service.c
2000d1ac l     O .bss	00000090 fnet_poll_if
2000d240 l     O .bss	00000004 fnet_service_mutex
00000000 l    df *ABS*	00000000 fnet_link.c
0000b5e8 l     F .text.itcm	00000022 _fnet_link_poll
2000d180 l     O .bss	00000018 fnet_link_if_list
00000000 l    df *ABS*	00000000 fnet_tls.c
0000b660 l     F .text.itcm	0000002a _fnet_tls_mbedtls_entropy_poll
0000b68c l     F .text.itcm	00000038 _fnet_tls_mbedtls_recv
0000b6c4 l     F .text.itcm	00000038 _fnet_tls_mbedtls_send
2000a6c8 l     O .bss	00000e20 fnet_tls_if_list
2000b4e8 l     O .bss	00000318 fnet_tls_socket_if_list
00000000 l    df *ABS*	00000000 fnet_arp.c
0000baa8 l     F .text.itcm	00000004 _fnet_arp_ip4_addr_conflict
0000baac l     F .text.itcm	00000040 _fnet_arp_timer
0000baec l     F .text.itcm	000000c8 _fnet_arp_add_entry
00000000 l    df *ABS*	00000000 fnet_checksum.c
0000bf50 l     F .text.itcm	00000104 _fnet_checksum32_low
0000c054 l     F .text.itcm	00000068 _fnet_checksum32_nb
00000000 l    df *ABS*	00000000 fnet_error.c
2000d680 l     O .bss	00000001 FNET_ERR_NUMBER
00000000 l    df *ABS*	00000000 fnet_eth.c
2000d100 l     O .bss	00000004 fnet_eth_number
00000000 l    df *ABS*	00000000 fnet_icmp4.c
0000c54c l     F .text.itcm	0000005e _fnet_icmp4_output
0000c5ac l     F .text.itcm	00000086 _fnet_icmp4_notify_protocol
0000c634 l     F .text.itcm	000000e8 _fnet_icmp4_input
20000688 l     O .data	0000000d CSWTCH.42
00000000 l    df *ABS*	00000000 fnet_inet.c
0000c828 l     F .text.itcm	00000096 _fnet_inet_pton_ip4
00000000 l    df *ABS*	00000000 fnet_ip.c
00000000 l    df *ABS*	00000000 fnet_ip4.c
0000c9c4 l     F .text.itcm	00000064 _fnet_ip4_frag_list_free.part.0
0000ca28 l     F .text.itcm	00000034 _fnet_ip4_timer
0000cce0 l     F .text.itcm	000004b0 _fnet_ip4_input_low
0000d190 l     F .text.itcm	0000007c _fnet_ip4_netif_output
2000d284 l     O .bss	00000004 ip_event
2000d288 l     O .bss	00000004 ip_frag_list_head
2000d678 l     O .bss	00000002 ip_id.0
2000d28c l     O .bss	00000008 ip_queue
2000d294 l     O .bss	00000004 ip_timer_ptr
00000000 l    df *ABS*	00000000 fnet_isr.c
2000d17c l     O .bss	00000004 fnet_isr_table
2000d198 l     O .bss	00000004 fnet_locked
20007830 l     O .data	00000004 fnet_event_desc_last
00000000 l    df *ABS*	00000000 fnet_mempool.c
00000000 l    df *ABS*	00000000 fnet_netbuf.c
0000d944 l     F .text.itcm	00000134 _fnet_netbuf_trim.part.0
2000d19c l     O .bss	00000004 fnet_mempool_main
00000000 l    df *ABS*	00000000 fnet_netif.c
0000e0f0 l     F .text.itcm	000000cc _fnet_netif_set_ip4_addr.part.0
2000d1a0 l     O .bss	00000004 fnet_netif_callback_ip4_addr_conflict
00000000 l    df *ABS*	00000000 fnet_prot.c
20002a8c l     O .data	00000010 fnet_prot_if_list
00000000 l    df *ABS*	00000000 fnet_raw.c
0000e77c l     F .text.itcm	00000014 _fnet_raw_attach
0000e790 l     F .text.itcm	00000030 _fnet_raw_shutdown
0000e7c0 l     F .text.itcm	000000e8 _fnet_raw_snd
0000e8a8 l     F .text.itcm	0000005e _fnet_raw_rcv
0000e908 l     F .text.itcm	00000038 _fnet_raw_connect
0000e940 l     F .text.itcm	00000024 _fnet_raw_detach
0000e964 l     F .text.itcm	0000001c _fnet_raw_release
20002a9c l     O .data	0000002c fnet_raw_socket_api
00000000 l    df *ABS*	00000000 fnet_socket.c
2000d244 l     O .bss	00000030 fnet_socket_desc
20007ab2 l     O .data	00000002 fnet_port_last
00000000 l    df *ABS*	00000000 fnet_stack.c
2000cb80 l     O .bss	00000004 _fnet_mutex_api
2000d274 l     O .bss	00000004 fnet_stack_mutex
00000000 l    df *ABS*	00000000 fnet_stdlib.c
2000d23c l     O .bss	00000004 fnet_rand_seed
00000000 l    df *ABS*	00000000 fnet_tcp.c
00010124 l     F .text.itcm	0000005e _fnet_tcp_process_fin
00010184 l     F .text.itcm	0000005c _fnet_tcp_set_synopt
000101e0 l     F .text.itcm	00000088 _fnet_tcp_init_connection
00010268 l     F .text.itcm	00000064 _fnet_tcp_getsockopt
000102cc l     F .text.itcm	00000030 _fnet_tcp_accept
000102fc l     F .text.itcm	00000056 _fnet_tcp_attach
00010354 l     F .text.itcm	000000e4 _fnet_tcp_find_socket
00010438 l     F .text.itcm	0000009a _fnet_tcp_setsockopt
000104d4 l     F .text.itcm	00000180 _fnet_tcp_send_seg.constprop.0
00010654 l     F .text.itcm	00000070 _fnet_tcp_send_rstsk
000106c4 l     F .text.itcm	0000008e _fnet_tcp_send_rst
00010754 l     F .text.itcm	00000082 _fnet_tcp_get_opt.isra.0
000107d8 l     F .text.itcm	00000068 _fnet_tcp_init
00010d68 l     F .text.itcm	00000060 _fnet_tcp_fasttimo
00011a44 l     F .text.itcm	0000005c _fnet_tcp_slowtimo
00010840 l     F .text.itcm	000000cc _fnet_tcp_close_socket
0001090c l     F .text.itcm	00000048 _fnet_tcp_abort_socket
00010954 l     F .text.itcm	00000064 _fnet_tcp_listen
000109b8 l     F .text.itcm	00000050 _fnet_tcp_release
00010a08 l     F .text.itcm	00000068 _fnet_tcp_drain
00010a70 l     F .text.itcm	000000a0 _fnet_tcp_control_input
00010b10 l     F .text.itcm	0000011a _fnet_tcp_send_headseg
00010c2c l     F .text.itcm	00000070 _fnet_tcp_send_ack
00010c9c l     F .text.itcm	000000cc _fnet_tcp_rcv
00010dc8 l     F .text.itcm	000000b8 _fnet_tcp_connect
00010e80 l     F .text.itcm	00000158 _fnet_tcp_send_dataseg.constprop.0.isra.0
00010fd8 l     F .text.itcm	00000156 _fnet_tcp_send_anydata
00011130 l     F .text.itcm	00000062 _fnet_tcp_shutdown
00011194 l     F .text.itcm	000000d4 _fnet_tcp_close
00011268 l     F .text.itcm	00000534 _fnet_tcp_dataprocess
0001179c l     F .text.itcm	000002a6 _fnet_tcp_slowtimosk
00011aa0 l     F .text.itcm	0000012c _fnet_tcp_snd
00011bcc l     F .text.itcm	00000748 _fnet_tcp_input
2000cb84 l     O .bss	00000004 _fnet_tcp_initial_seq_number
2000d278 l     O .bss	00000004 fnet_tcp_fasttimer
2000d27c l     O .bss	00000004 fnet_tcp_slowtimer
20002ac8 l     O .data	0000002c fnet_tcp_socket_api
00000000 l    df *ABS*	00000000 fnet_timer.c
2000cb8c l     O .bss	00000004 _fnet_timer_head
00000000 l    df *ABS*	00000000 fnet_udp.c
00012410 l     F .text.itcm	0000001c _fnet_udp_attach
0001242c l     F .text.itcm	00000030 _fnet_udp_shutdown
0001245c l     F .text.itcm	000001a2 _fnet_udp_snd
00012600 l     F .text.itcm	00000060 _fnet_udp_rcv
00012660 l     F .text.itcm	0000002e _fnet_udp_connect
00012690 l     F .text.itcm	00000024 _fnet_udp_detach
000126b4 l     F .text.itcm	0000001c _fnet_udp_release
000126d0 l     F .text.itcm	000001e8 _fnet_udp_input
000128b8 l     F .text.itcm	00000090 _fnet_udp_control_input
20002afc l     O .data	0000002c fnet_udp_socket_api
00000000 l    df *ABS*	00000000 message.cpp
20000660 l     O .data	00000028 CSWTCH.4
00000000 l    df *ABS*	00000000 websockets_client.cpp
00013b60 l     F .text.itcm	00000018 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsEvent&&, String&&)
00013b78 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00013b90 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00013bcc l     F .text.itcm	0000007c std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
00000000 l    df *ABS*	00000000 websockets_endpoint.cpp
000144d0 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
200005e0 l     O .data	00000018 CSWTCH.134
00000000 l    df *ABS*	00000000 websockets_server.cpp
00015aa8 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00015b48 l     F .text.itcm	00000044 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .isra.0]
00015e98 l     F .text.itcm	000000dc std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) [clone .isra.0]
00000000 l    df *ABS*	00000000 ws_common.cpp
00000000 l    df *ABS*	00000000 IPAddress.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
0001712c l     F .text.itcm	00000058 pit_isr()
2000a4e0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
000172ac l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
00017a00 l     F .text.itcm	0000005c flash_wait
2000d68a l     O .bss	00000001 initialized
2000d3bc l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00018b74 l     F .text.itcm	00000060 rx_queue_transfer
202000a0 l     O .bss.dma	00001000 rx_buffer
00018bd4 l     F .text.itcm	000000b4 rx_event
00018c88 l     F .text.itcm	00000090 usb_serial_flush_callback
202010a0 l     O .bss.dma	00002000 txbuffer
00018d18 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000d378 l     O .bss	00000004 rx_available
2000d37c l     O .bss	00000010 rx_count
2000d68b l     O .bss	00000001 rx_head
2000d38c l     O .bss	00000010 rx_index
2000d39c l     O .bss	00000009 rx_list
2000d67a l     O .bss	00000002 rx_packet_size
2000d68c l     O .bss	00000001 rx_tail
2000a540 l     O .bss	00000100 rx_transfer
2000d68e l     O .bss	00000001 transmit_previous_timeout
2000d67c l     O .bss	00000002 tx_available
2000d68f l     O .bss	00000001 tx_head
2000d690 l     O .bss	00000001 tx_noautoflush
2000d67e l     O .bss	00000002 tx_packet_size
2000a640 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000d685 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 list.o
00000000 l    df *ABS*	00000000 tree.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 functional.o
00000000 l    df *ABS*	00000000 shared_ptr.o
00000000 l    df *ABS*	00000000 string-inst.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
0001a80c l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0001a8cc l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
0001a914 l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
0001ae98 l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 cp-demangle.o
0001b594 l     F .text.itcm	000000f0 d_make_comp
0001b684 l     F .text.itcm	00000074 d_number
0001b6f8 l     F .text.itcm	00000046 d_call_offset
0001b740 l     F .text.itcm	00000036 d_ref_qualifier
0001b778 l     F .text.itcm	000000d4 d_count_templates_scopes
0001b84c l     F .text.itcm	0000001c d_pack_length
0001b868 l     F .text.itcm	00000048 d_discriminator
0001b8b0 l     F .text.itcm	0000001c d_index_template_argument.part.0
0001b8cc l     F .text.itcm	00000078 d_growable_string_callback_adapter
0001b944 l     F .text.itcm	00000030 next_is_type_qual.isra.0
0001b974 l     F .text.itcm	00000044 d_append_char
0001b9b8 l     F .text.itcm	00000036 d_lookup_template_argument
0001b9f0 l     F .text.itcm	00000094 d_find_pack
0001ba84 l     F .text.itcm	00000066 d_append_string
0001baec l     F .text.itcm	0000005e d_template_param
0001bb4c l     F .text.itcm	00000078 d_append_num
0001bbc4 l     F .text.itcm	000000e0 d_source_name
0001bca4 l     F .text.itcm	00000194 d_substitution
0001be38 l     F .text.itcm	0000086e d_type
0001d48c l     F .text.itcm	00000152 d_cv_qualifiers
0001c770 l     F .text.itcm	0000006a d_function_type
0001da54 l     F .text.itcm	0000029c d_name
0001cd9c l     F .text.itcm	00000064 d_template_args_1
0001cf2c l     F .text.itcm	000004ec d_expression_1
0001c6a8 l     F .text.itcm	00000080 d_parmlist
0001c728 l     F .text.itcm	00000048 d_bare_function_type
0001c7dc l     F .text.itcm	00000108 d_operator_name
0001c8e4 l     F .text.itcm	00000340 d_unqualified_name
0001cc24 l     F .text.itcm	00000120 d_expr_primary
0001dcf0 l     F .text.itcm	000000f6 d_encoding.part.0
0001d5e0 l     F .text.itcm	00000474 d_special_name
0001cd44 l     F .text.itcm	00000058 d_template_arg
0001ce00 l     F .text.itcm	0000012a d_prefix
0001d418 l     F .text.itcm	00000072 d_exprlist
0001dde8 l     F .text.itcm	000020f4 d_print_comp_inner
0001fedc l     F .text.itcm	0000005a d_print_comp
00020570 l     F .text.itcm	000001d8 d_print_function_type
0002102c l     F .text.itcm	00000254 d_maybe_print_fold_expression
00021280 l     F .text.itcm	000001e4 d_maybe_print_designated_init
00020f50 l     F .text.itcm	000000da d_print_subexpr
00020b58 l     F .text.itcm	00000076 d_print_expr_op
0001ff38 l     F .text.itcm	00000638 d_print_mod
00020990 l     F .text.itcm	000001c8 d_print_array_type
00020748 l     F .text.itcm	00000248 d_print_mod_list
00020bd0 l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
00021528 l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 unwind-arm.o
00021cf4 l     F .text.itcm	00000012 selfrel_offset31
00021d08 l     F .text.itcm	0000005c search_EIT_table
00021d64 l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
00021d8c l     F .text.itcm	00000098 get_eit_entry
00021e24 l     F .text.itcm	00000058 restore_non_core_regs
00021e7c l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
00021e88 l     F .text.itcm	00000002 _Unwind_DebugHook
00021e8c l     F .text.itcm	0000003a unwind_phase2
00021ec8 l     F .text.itcm	000000ca unwind_phase2_forced
000220a4 l     F .text.itcm	0000001a _Unwind_GetGR
000220f0 l     F .text.itcm	00000018 _Unwind_SetGR
0002218c l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
000228a8 l     F .text.itcm	00000038 next_unwind_byte
000228e0 l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
000228fc l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-calloc.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-rand.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00023640 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-isupper.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
000237c8 l     F .text.itcm	00000018 stdio_exit_handler
000237e0 l     F .text.itcm	00000040 cleanup_stdio
00023820 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-printf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-putchar.o
00000000 l    df *ABS*	00000000 libc_a-puts.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-strstr.o
0002463c l     F .text.itcm	000000c6 critical_factorization
00024704 l     F .text.itcm	000001f8 two_way_long_needle
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfprintf.o
000292ec l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
0002936c l     F .text.itcm	00000076 __sprint_r.part.0
0002a388 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-strnlen.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0002a978 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0002ba48 l     F .text.itcm	00000008 __mbedtls_ssl_cache_free_veneer
0002ba50 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_init_veneer
0002ba58 l     F .text.itcm	00000008 __mbedtls_entropy_add_source_veneer
0002ba60 l     F .text.itcm	00000008 __mbedtls_entropy_free_veneer
0002ba68 l     F .text.itcm	00000008 __mbedtls_pk_init_veneer
0002ba70 l     F .text.itcm	00000008 ___init_veneer
0002ba78 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0002ba80 l     F .text.itcm	00000008 __mbedtls_ssl_read_veneer
0002ba88 l     F .text.itcm	00000008 __mbedtls_ssl_conf_ca_chain_veneer
0002ba90 l     F .text.itcm	00000008 __mbedtls_ssl_write_veneer
0002ba98 l     F .text.itcm	00000008 __mbedtls_ssl_free_veneer
0002baa0 l     F .text.itcm	00000008 __mbedtls_ssl_conf_own_cert_veneer
0002baa8 l     F .text.itcm	00000008 __mbedtls_ssl_conf_rng_veneer
0002bab0 l     F .text.itcm	00000008 __mbedtls_pk_free_veneer
0002bab8 l     F .text.itcm	00000008 __mbedtls_ssl_conf_authmode_veneer
0002bac0 l     F .text.itcm	00000008 __mbedtls_x509_crt_parse_veneer
0002bac8 l     F .text.itcm	00000008 __mbedtls_ssl_config_defaults_veneer
0002bad0 l     F .text.itcm	00000008 __mbedtls_ssl_config_init_veneer
0002bad8 l     F .text.itcm	00000008 __mbedtls_x509_crt_init_veneer
0002bae0 l     F .text.itcm	00000008 __mbedtls_x509_crt_free_veneer
0002bae8 l     F .text.itcm	00000008 __mbedtls_entropy_init_veneer
0002baf0 l     F .text.itcm	00000008 __mbedtls_ssl_set_bio_veneer
0002baf8 l     F .text.itcm	00000008 __mbedtls_ssl_cache_init_veneer
0002bb00 l     F .text.itcm	00000008 __mbedtls_ssl_setup_veneer
0002bb08 l     F .text.itcm	00000008 __mbedtls_ssl_conf_session_cache_veneer
0002bb10 l     F .text.itcm	00000008 __mbedtls_ssl_config_free_veneer
0002bb18 l     F .text.itcm	00000008 __mbedtls_ssl_set_hostname_veneer
0002bb20 l     F .text.itcm	00000008 __mbedtls_ssl_handshake_veneer
0002bb28 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_seed_veneer
0002bb30 l     F .text.itcm	00000008 __mbedtls_ssl_close_notify_veneer
0002bb38 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_free_veneer
0002bb40 l     F .text.itcm	00000008 __mbedtls_pk_parse_key_veneer
60022f88 l     F .text.code	00000008 __memmove_veneer
60022f90 l     F .text.code	00000008 ____aeabi_uldivmod_veneer
60022f98 l     F .text.code	00000008 __memcmp_veneer
60022fa0 l     F .text.code	00000008 __strlen_veneer
60022fa8 l     F .text.code	00000008 __snprintf_veneer
60022fb0 l     F .text.code	00000008 __free_veneer
60022fb8 l     F .text.code	00000008 __main_veneer
60022fc0 l     F .text.code	00000008 __strstr_veneer
60022fc8 l     F .text.code	00000008 __memset_veneer
60022fd0 l     F .text.code	00000008 __pwm_init_veneer
60022fd8 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60022fe0 l     F .text.code	00000008 __puts_veneer
60022fe8 l     F .text.code	00000008 ____libc_init_array_veneer
60022ff0 l     F .text.code	00000008 __strcmp_veneer
60022ff8 l     F .text.code	00000008 __memcpy_veneer
60023000 l     F .text.code	00000008 __set_arm_clock_veneer
60023008 l     F .text.code	00000008 __rand_veneer
60023010 l     F .text.code	00000008 __printf_veneer
60023018 l     F .text.code	00000008 __sm_set_pool_veneer
60023020 l     F .text.code	00000008 __putchar_veneer
60023028 l     F .text.code	00000008 __delay_veneer
60023030 l     F .text.code	00000008 __calloc_veneer
00019d00 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
200014a4 g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
6001cd00 g     F .text.code	00000028 mbedtls_ssl_session_free
00000128  w    F .text.itcm	0000001e websockets::network::Teensy41TcpClient::read(unsigned char*, unsigned long)
0001b23c g     F .text.itcm	00000040 std::logic_error::~logic_error()
00017df8 g     F .text.itcm	00000010 main
00021990 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
2000170c g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
20007a20 g     O .data	00000004 mbedtls_test_srv_key
00019ca0 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
60008920 g     F .text.code	00000012 mbedtls_ctr_drbg_random
00000068  w    F .text.itcm	00000006 websockets::network::Teensy41TcpClient::getSocket() const
00018ed0 g     F .text.itcm	00000002 usb_serial_reset
0001b4f0 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
6001c37c g     F .text.code	0000000a mbedtls_ssl_init
60016364 g     F .text.code	00000786 mbedtls_internal_sha256_process
60003288 g     F .text.code	00000050 mbedtls_asn1_write_ia5_string
00024aec g     F .text.itcm	00000024 _sbrk_r
6000f618 g     F .text.code	0000000a mbedtls_md5_free
60010180 g     F .text.code	00000044 mbedtls_oid_get_x509_ext_type
0002ba20 g     F .text.itcm	00000024 _wcsnrtombs_r
60016d20 g     F .text.code	00000004 mbedtls_sha256_update
00024b10 g     F .text.itcm	0000002c _write_r
6000ece4 g     F .text.code	00000004 mbedtls_hmac_drbg_set_prediction_resistance
000149d0 g     F .text.itcm	00000060 websockets::internals::readExtendedPayloadLength(websockets::network::TcpClient&, websockets::internals::Header const&)
20001410 g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
000031f0  w    F .text.itcm	000000c0 unsigned char ArduinoJson::V701PB2::detail::VariantData::asIntegral<unsigned char>() const
00000400  w    F .text.itcm	00000050 websockets::network::Teensy41TcpServer::poll()
6000c90c g     F .text.code	0000003c mbedtls_ecp_check_privkey
00015a28  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
20200000 g     O .bss.dma	00000004 EthernetClass::socket_buf_transmit
20002b30 g     O .data	00000004 mbedtls_test_srv_crt_len
60020334 g     F .text.code	000000aa mbedtls_ssl_get_key_exchange_md_tls1_2
6001c854 g     F .text.code	00000034 mbedtls_ssl_conf_max_frag_len
00015f74 g     F .text.itcm	00000444 websockets::recvHandshakeRequest(websockets::network::TcpClient&)
00017440 g     F .text.itcm	0000003a String::String(String const&)
0000c40c g     F .text.itcm	00000034 _fnet_eth_is_connected
0000d20c g     F .text.itcm	0000026c _fnet_ip4_output
00002e44  w    F .text.itcm	0000006c int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
000219a0 g     F .text.itcm	0000005a .hidden __floatdidf
0000911c  w    F .text.itcm	00000050 EthernetClient::operator==(bool)
00024284 g     F .text.itcm	00000060 memcmp
00014660 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
0000f554 g     F .text.itcm	000000e0 fnet_socket_recvfrom
2000c81c g     O .bss	00000004 EventResponder::firstYield
6001d8a0 g     F .text.code	00000034 mbedtls_ssl_update_handshake_status
600110a4 g     F .text.code	00000014 mbedtls_pk_get_name
6000f558 g     F .text.code	00000034 mbedtls_md_hmac_reset
0000e3a0 g     F .text.itcm	0000001c fnet_netif_get_ip4_addr_type
600019ac g     F .text.code	000004a4 mbedtls_internal_aes_encrypt
60020d64 g     F .text.code	0000004c mbedtls_x509_get_serial
6000f630 g     F .text.code	00000034 mbedtls_md5_starts_ret
00024ac0 g     F .text.itcm	0000002c _read_r
0000ed50 g     F .text.itcm	000000ac _fnet_socket_get_uniqueport
00009c38 g     F .text.itcm	00000064 EthernetClass::socketConnect(unsigned char, unsigned char*, unsigned short)
00024b3c g     F .text.itcm	0000000c __errno
00014748 g     F .text.itcm	000001d0 websockets::internals::WebsocketsEndpoint::getHeader[abi:cxx11](unsigned long long, unsigned char, bool, bool)
6001c420 g     F .text.code	00000006 mbedtls_ssl_conf_dtls_badmac_limit
60008c8c g     F .text.code	00000008 mbedtls_des_init
0000b59c g     F .text.itcm	00000018 fnet_service_unregister
6000b934 g     F .text.code	00000034 mbedtls_ecp_keypair_init
0002598c g     F .text.itcm	00000154 __mdiff
00013b58  w    F .text.itcm	00000006 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
60010fe0 g     F .text.code	00000028 mbedtls_pk_decrypt
0000015c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
0000c3ec g     F .text.itcm	0000001e _fnet_eth_phy_write
2000145c g     O .data	0000000c typeinfo for std::bad_exception
0002aaa0 g     F .text.itcm	00000cec _dtoa_r
60009dc0 g     F .text.code	00000008 mbedtls_dhm_init
200017f0 g     O .data	00000014 vtable for std::length_error
00022bd8 g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
6000fe30 g     F .text.code	00000030 mbedtls_md5_starts
60018500 g     F .text.code	00000030 mbedtls_ssl_ciphersuite_from_string
0001459c g     F .text.itcm	0000006c websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
600102cc g     F .text.code	0000003c mbedtls_oid_get_oid_by_ec_grp
60011008 g     F .text.code	00000028 mbedtls_pk_encrypt
0000f204 g     F .text.itcm	00000054 fnet_socket_close
60010ebc g     F .text.code	000000c4 mbedtls_pk_verify_ext
60008720 g     F .text.code	0000001c mbedtls_ctr_drbg_free
000194c8 g     F .text.itcm	00000092 HardwareSerial::read()
2000d374 g     O .bss	00000004 resetTeensy
0000d8e8 g     F .text.itcm	0000005c _fnet_mempool_malloc_max
000181a8  w    F .text.itcm	00000004 abort
000098a0 g     F .text.itcm	00000068 EthernetServer::write(unsigned char const*, unsigned int)
2000ce20 g     O .bss	00000004 errno
0000c3cc g     F .text.itcm	0000001e _fnet_eth_phy_read
6000fe64 g     F .text.code	00000004 mbedtls_md5_finish
00002eb0  w    F .text.itcm	00000288 VideoHub::parse(char)
0000c0dc g     F .text.itcm	00000030 _fnet_checksum_pseudo_netbuf_start
00025948 g     F .text.itcm	00000042 __mcmp
0000f9e4 g     F .text.itcm	00000026 _fnet_socket_buffer_release
00025bd0 g     F .text.itcm	00001b44 _svfprintf_r
6000999c g     F .text.code	00000384 mbedtls_des_self_test
6000358c g     F .text.code	00000170 mbedtls_base64_decode
00023250 g     F .text.itcm	00000018 realloc
600077d4 g     F .text.code	00000184 mbedtls_ccm_self_test
6000e750 g     F .text.code	00000076 mbedtls_gcm_auth_decrypt
200016e0 g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
0001a7fc g     F .text.itcm	00000008 __cxa_get_globals_fast
6002306c g       .text.code	00000000 __init_array_end
20002a44 g     O .data	00000006 fnet_eth_null_addr
00019a6c g     F .text.itcm	00000022 std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
000144c8  w    F .text.itcm	00000006 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0002a86c g     F .text.itcm	0000002c _fstat_r
60015f7c g     F .text.code	00000088 mbedtls_sha1_update_ret
60008fe0 g     F .text.code	0000045e mbedtls_des3_crypt_ecb
00000370  w    F .text.itcm	00000026 Logic::~Logic()
60006254 g     F .text.code	000003fc mbedtls_mpi_self_test
20001468 g     O .data	0000000c typeinfo for std::invalid_argument
0000d67c g     F .text.itcm	0000005c fnet_isr_unregister
00009fb8 g     F .text.itcm	0000000c fnet_cpu_isr
6001e598 g     F .text.code	0000008c mbedtls_ssl_check_cert_usage
00005590  w    F .text.itcm	00000190 ArduinoJson::V701PB2::detail::VariantData* ArduinoJson::V701PB2::detail::ObjectData::getOrAddMember<ArduinoJson::V701PB2::detail::JsonStringAdapter>(ArduinoJson::V701PB2::detail::JsonStringAdapter, ArduinoJson::V701PB2::detail::ResourceManager*)
0000fb98 g     F .text.itcm	00000016 fnet_socket_addr_is_unspecified
6000cb18 g     F .text.code	00000384 mbedtls_ecp_self_test
60003f60 g     F .text.code	000000ce mbedtls_mpi_read_binary
600132bc g     F .text.code	00000004 mbedtls_rsa_get_len
0000c8c4 g     F .text.itcm	0000004c _fnet_ip_queue_append
00021908 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001a664 g     F .text.itcm	00000070 __gnu_end_cleanup
0000e000 g     F .text.itcm	00000030 _fnet_netbuf_concat
60004f1c g     F .text.code	0000007e mbedtls_mpi_mod_int
00008b18 g     F .text.itcm	0000004c EthernetClass::begin(unsigned char*, IPAddress)
20007214 g     O .data	00000004 IntervalTimer::nvic_priorites
0002168c g     F .text.itcm	0000027a .hidden __aeabi_dsub
0001af3c g     F .text.itcm	00000038 __cxa_throw
0002b78c g     F .text.itcm	0000004c _wcrtomb_r
6000ef98 g     F .text.code	00000220 mbedtls_hmac_drbg_self_test
60007e10 g     F .text.code	00000224 mbedtls_cipher_update
2000c804 g     O .bss	00000004 EthernetClass::stack_heap_size
0000c354 g     F .text.itcm	0000003c _fnet_eth_multicast_leave_ip4
6001c9a4 g     F .text.code	0000004c mbedtls_ssl_get_record_expansion
60004128 g     F .text.code	00000092 mbedtls_mpi_shift_r
6002c148 g     O .text.progmem	000006ab mbedtls_test_srv_key_rsa
00017990 g     F .text.itcm	00000070 pinMode
0000aefc g     F .text.itcm	000000d4 fnet_dhcp_cln_init
6000995c g     F .text.code	0000001e mbedtls_des3_set3key_enc
2000d6c0 g       .bss	00000000 _ebss
60002470 g     F .text.code	00000014 mbedtls_aes_crypt_ecb
0000dd60 g     F .text.itcm	00000148 _fnet_netbuf_pullup
6002bc28 g     O .text.progmem	00000004 mbedtls_test_cli_crt_rsa_len
6000a274 g     F .text.code	0000005c mbedtls_dhm_free
00024b9c g     F .text.itcm	00000002 __retarget_lock_release_recursive
00022788 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
60018024 g     F .text.code	0000012c mbedtls_sha512_ret
6000ef80 g     F .text.code	00000018 mbedtls_hmac_drbg_free
6000f664 g     F .text.code	00000694 mbedtls_internal_md5_process
60004080 g     F .text.code	000000a6 mbedtls_mpi_shift_l
60020a1c g     F .text.code	00000040 mbedtls_x509_get_sig
20002a84 g     O .data	00000008 fnet_fec_eth_api
600227d4 g     F .text.code	00000002 startup_default_early_hook
00008bd4  w    F .text.itcm	00000004 EthernetClient::setConnectionTimeout(unsigned short)
6000acc0 g     F .text.code	00000004 mbedtls_ecdsa_init
6000a740 g     F .text.code	000001b8 mbedtls_ecdsa_sign
000220c0 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
6001e50c g     F .text.code	0000004c mbedtls_ssl_set_calc_verify_md
60002bb0 g     F .text.code	00000064 mbedtls_asn1_get_bitstring
20001480  w    O .data	00000008 typeinfo for std::_Sp_make_shared_tag
0000c154 g     F .text.itcm	0000008e _fnet_eth_input
60003ca0 g     F .text.code	0000003a mbedtls_mpi_swap
00008614  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
000088cc g     F .text.itcm	00000214 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)
00014e68 g     F .text.itcm	00000020 websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool)
6000997c g     F .text.code	00000020 mbedtls_des3_set3key_dec
00015b10  w    F .text.itcm	00000038 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00005720  w    F .text.itcm	00000118 ArduinoJson::V701PB2::Converter<ArduinoJson::V701PB2::JsonObjectConst, void>::toJson(ArduinoJson::V701PB2::JsonVariantConst, ArduinoJson::V701PB2::JsonVariant)
6001447c g     F .text.code	000001f4 mbedtls_rsa_gen_key
60007c28 g     F .text.code	00000020 mbedtls_cipher_free
0000f09c g     F .text.itcm	00000168 fnet_socket_bind
00008bfc g     F .text.itcm	00000048 EthernetClient::connected()
0002a864 g     F .text.itcm	00000008 _localeconv_r
6002c7f8 g     O .text.progmem	000004ad mbedtls_test_srv_crt_rsa
00021990 g     F .text.itcm	0000006a .hidden __floatundidf
0002a8c0 g     F .text.itcm	00000078 frexp
60003c0c g     F .text.code	00000094 mbedtls_mpi_copy
00010040 g     F .text.itcm	0000002a fnet_strnlen
0001b014 g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00014944 g     F .text.itcm	00000088 websockets::internals::readUntilSuccessfullOrError(websockets::network::TcpClient&, unsigned char*, unsigned long)
60021e60 g     F .text.code	0000000a mbedtls_x509_crt_init
6000dde0 g     F .text.code	00000032 mbedtls_entropy_add_source
600058b0 g     F .text.code	0000026a mbedtls_mpi_gcd
20001424 g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
60006c50 g     F .text.code	00000128 mbedtls_camellia_crypt_ecb
60008128 g     F .text.code	00000038 mbedtls_cipher_write_tag
60001f54 g     F .text.code	0000006a mbedtls_aes_crypt_ctr
6001cd3c g     F .text.code	0000001c mbedtls_ssl_sig_hash_set_add
6001e67c g     F .text.code	0000003c mbedtls_ssl_send_flight_completed
60002e90 g     F .text.code	0000002e mbedtls_asn1_free_named_data_list
000193a4 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
60020824 g     F .text.code	00000010 mbedtls_x509_get_alg
00022050 g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
00014b28 g     F .text.itcm	00000234 websockets::internals::WebsocketsEndpoint::_recv()
00013b24  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
20001444 g     O .data	0000000c typeinfo for std::length_error
00003138  w    F .text.itcm	000000b8 unsigned short ArduinoJson::V701PB2::detail::VariantData::asIntegral<unsigned short>() const
0000bc14 g     F .text.itcm	00000016 _fnet_arp_release
00010114 g     F .text.itcm	00000010 fnet_srand
60005b1c g     F .text.code	000004d4 mbedtls_mpi_inv_mod
0000b558 g     F .text.itcm	00000044 fnet_service_register
20006e0c g     O .data	00000001 String::zerotermination
0000eb04 g     F .text.itcm	00000014 _fnet_socket_init
0001a330 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
20001494 g     O .data	00000008 typeinfo for std::exception
0006b000 g       *ABS*	00000000 _flashimagelen
60008034 g     F .text.code	000000f4 mbedtls_cipher_finish
60031d20 g     O .text.progmem	00000030 mbedtls_ecdsa_info
20001438 g     O .data	0000000c typeinfo for std::logic_error
600104ac g     F .text.code	0000003c mbedtls_oid_get_oid_by_md
6001052c g     F .text.code	00000054 mbedtls_oid_get_pkcs12_pbe_alg
0000cb40 g     F .text.itcm	0000000e _fnet_ip4_will_fragment
60033dd8 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_suiteb
0000e1e4 g     F .text.itcm	00000024 fnet_netif_get_by_number
0001a750 g     F .text.itcm	0000008a __cxa_end_catch
0001a1c4  w    F .text.itcm	00000054 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0000f6d4 g     F .text.itcm	00000108 fnet_socket_setopt
00023fb4 g     F .text.itcm	00000088 snprintf
6000e704 g     F .text.code	0000004a mbedtls_gcm_crypt_and_tag
0002bb50 g     F .fini	00000000 _fini
6002ecec g     O .text.progmem	00000004 mbedtls_test_ca_crt_ec_len
00019c80 g     F .text.itcm	00000020 std::__throw_bad_alloc()
0000f7dc g     F .text.itcm	00000208 fnet_socket_getopt
6000b928 g     F .text.code	0000000c mbedtls_ecp_group_init
0000faec g     F .text.itcm	00000078 _fnet_socket_buffer_read_address
00019578 g     F .text.itcm	00000040 nvic_execution_priority()
6001fc08 g     F .text.code	0000041c mbedtls_ssl_parse_certificate
0001737c g     F .text.itcm	0000004c Print::print(String const&)
00008608 g     F .text.itcm	0000000c EthernetClass::timer_get_ms()
6000aafc g     F .text.code	0000009c mbedtls_ecdsa_write_signature
0001a7dc g     F .text.itcm	00000002 std::exception::~exception()
6000b858 g     F .text.code	00000008 mbedtls_ecp_curve_list
0001a360 g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000f648 g     F .text.itcm	0000008c fnet_socket_getpeername
6002e314 g     O .text.progmem	000000e9 mbedtls_test_cli_key_ec
2000d1a8 g     O .bss	00000004 fnet_netif_list
60002fcc g     F .text.code	0000002a mbedtls_asn1_write_raw_buffer
00018ae4 g     F .text.itcm	0000001c usb_receive
0002283c g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
20007218  w    O .data	00000004 ArduinoJson::V701PB2::detail::DefaultAllocator::instance()::allocator
2000185c g     O .data	00000014 vtable for std::bad_function_call
60002c64 g     F .text.code	000000b0 mbedtls_asn1_get_sequence_of
6001e4d8 g     F .text.code	00000012 mbedtls_ssl_pk_alg_from_sig
000143b0 g     F .text.itcm	0000004e websockets::WebsocketsClient::close(websockets::CloseReason)
6001d40c g     F .text.code	00000034 mbedtls_ssl_reset_checksum
0000b6fc g     F .text.itcm	00000140 fnet_tls_init
200014c4 g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
0000e230 g     F .text.itcm	00000050 _fnet_netif_release
00015a80 g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
0000b5dc g     F .text.itcm	0000000c fnet_service_mutex_unlock
0000e544 g     F .text.itcm	0000000c _fnet_netif_join_ip4_multicast
00008b64 g     F .text.itcm	0000001c EthernetClass::localIP()
6001c808 g     F .text.code	0000000a mbedtls_ssl_conf_min_version
6000f38c g     F .text.code	00000006 mbedtls_md_get_type
0002271c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
0000bc2c g     F .text.itcm	0000006c fnet_arp_get_mac
0000e5dc g     F .text.itcm	0000001a fnet_netif_get_scope_id
0001b4dc g     F .text.itcm	00000014 std::invalid_argument::invalid_argument(char const*)
00019e0c  w    F .text.itcm	0000004e std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
60006060 g     F .text.code	000001f4 mbedtls_mpi_gen_prime
6001caf0 g     F .text.code	000001a0 mbedtls_ssl_config_defaults
60004e5c g     F .text.code	0000002c mbedtls_mpi_div_int
0000da78 g     F .text.itcm	00000080 _fnet_netbuf_new
600227d4  w    F .text.code	00000002 startup_early_hook
6000c114 g     F .text.code	00000034 mbedtls_ecp_tls_read_point
60009e24 g     F .text.code	0000012c mbedtls_dhm_make_params
6001702c g     F .text.code	0000000a mbedtls_sha512_clone
00024ba8 g     F .text.itcm	000002dc strcmp
00008600 g     F .text.itcm	00000004 EthernetClass::teensy_mutex_init(void**)
60018018 g     F .text.code	00000004 mbedtls_sha512_update
6001c6c4 g     F .text.code	00000006 mbedtls_ssl_conf_dhm_min_bitlen
60010d94 g     F .text.code	0000000a mbedtls_pk_init
0000cc00 g     F .text.itcm	0000005c _fnet_ip4_multicast_join
0001b504 g     F .text.itcm	00000014 std::out_of_range::out_of_range(char const*)
200077a4 g     O .data	00000004 __malloc_trim_threshold
60020ecc g     F .text.code	00000028 mbedtls_x509_key_size_helper
0000e0a0 g     F .text.itcm	00000010 _fnet_free
60008290 g     F .text.code	00000084 mbedtls_cipher_auth_decrypt
00000088  w    F .text.itcm	00000006 ArduinoJson::V701PB2::detail::DefaultAllocator::deallocate(void*)
60010f80 g     F .text.code	00000060 mbedtls_pk_sign
60033f08  w    O .text.progmem	00000001 _serialEvent_default
00008ea0 g     F .text.itcm	0000002c EthernetClient::read()
000181b0 g     F .text.itcm	00000060 tempmonGetTemp
000095a0 g     F .text.itcm	000000f0 EthernetServer::begin()
60012e8c g     F .text.code	00000074 mbedtls_rsa_import_raw
6001cae8 g     F .text.code	00000008 mbedtls_ssl_config_init
00024108 g     F .text.itcm	000000b0 __swbuf_r
200077b4 g     O .data	00000004 _impure_ptr
6000f624 g     F .text.code	0000000a mbedtls_md5_clone
0000fb64 g     F .text.itcm	00000020 fnet_socket_addr_is_multicast
6000b968 g     F .text.code	00000020 mbedtls_ecp_point_free
60008934 g     F .text.code	00000308 mbedtls_ctr_drbg_self_test
200015f8 g     O .data	00000070 vtable for EthernetClient
600205fc g     F .text.code	00000004 mbedtls_x509_time_is_future
0002bb54 g       .ARM.exidx	00000000 __exidx_start
60033dff g     O .text.progmem	00000001 _serialEvent8_default
0002a7d8 g     F .text.itcm	00000066 _fputwc_r
60007ca0 g     F .text.code	00000050 mbedtls_cipher_setkey
00008ecc g     F .text.itcm	00000030 EthernetClient::peek()
6001c7f4 g     F .text.code	00000006 mbedtls_ssl_get_alpn_protocol
00005b48  w    F .text.itcm	0000005c ArduinoJson::V701PB2::JsonDocument::JsonDocument(ArduinoJson::V701PB2::JsonDocument const&)
00000000 g       .text.itcm	00000000 _stext
600049c4 g     F .text.code	0000001c mbedtls_mpi_mul_int
2000150c g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00018b64  w    F .text.itcm	00000004 usb_serial_class::flush()
000093c8 g     F .text.itcm	0000004c EthernetClient::operator==(EthernetClient const&)
000243dc g     F .text.itcm	000000a4 memset
600182d0 g     F .text.code	000000be mbedtls_ssl_cache_get
00009c1c g     F .text.itcm	0000001c EthernetClass::socketListen(unsigned char)
6000ba78 g     F .text.code	00000006 mbedtls_ecp_group_copy
2000d104 g     O .bss	00000078 fnet_ip4_multicast_list
60001000 g     O .text.headers	00000020 ImageVectorTable
20280000 g       .text.csf	00000000 _heap_end
60009440 g     F .text.code	000000c4 mbedtls_des3_crypt_cbc
0000e280 g     F .text.itcm	00000040 _fnet_netif_release_all
600066f8 g     F .text.code	000004a4 mbedtls_camellia_setkey_enc
00014400 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
6001330c g     F .text.code	00000064 mbedtls_rsa_check_privkey
00001310  w    F .text.itcm	00000098 ArduinoJson::V701PB2::detail::VariantData::getOrAddElement(unsigned int, ArduinoJson::V701PB2::detail::ResourceManager*)
0001a7e4 g     F .text.itcm	00000008 std::bad_exception::what() const
6002023c g     F .text.code	000000f6 mbedtls_ssl_get_key_exchange_md_ssl_tls
6000166c g     F .text.code	00000228 mbedtls_aes_setkey_enc
70000000 g       .bss.extram	00000000 _extram_end
200018d8  w    O .data	000000c9 std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
2000156c g     O .data	00000012 typeinfo name for std::bad_exception
0001006c g     F .text.itcm	0000001a fnet_strcpy
00018a28 g     F .text.itcm	00000064 usb_config_tx
6000f3c4 g     F .text.code	00000014 mbedtls_md_finish
0001afe4 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
60008160 g     F .text.code	00000068 mbedtls_cipher_check_tag
00019a90 g     F .text.itcm	0000000e std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
60002a34 g     F .text.code	00000096 mbedtls_asn1_get_len
00017580 g     F .text.itcm	000002f0 set_arm_clock
6000f58c g     F .text.code	00000070 mbedtls_md_hmac
0000d7ec g     F .text.itcm	00000088 _fnet_mempool_free
00015a40  w    F .text.itcm	00000006 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
20007224 g     O .data	00000004 __brkval
60004030 g     F .text.code	0000004e mbedtls_mpi_write_binary
6000acc4 g     F .text.code	00000004 mbedtls_ecdsa_free
2000d693 g     O .bss	00000001 usb_high_speed
0001724c g     F .text.itcm	00000060 IntervalTimer::end()
0001a7e4 g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
600227e0 g     F .text.code	00000004 startup_debug_reset
6000defc g     F .text.code	0000000a mbedtls_entropy_update_manual
0002194c g     F .text.itcm	00000042 .hidden __extendsfdf2
0001819c  w    F .text.itcm	00000004 _isatty
00015708 g     F .text.itcm	00000254 websockets::internals::WebsocketsEndpoint::handleFrameInStandardMode(websockets::internals::WebsocketsFrame&)
00013db4 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6001ca40 g     F .text.code	00000020 mbedtls_ssl_get_session
00013db4 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
00018b00 g     F .text.itcm	00000004 usb_transfer_status
60016d28 g     F .text.code	00000004 mbedtls_sha256_process
00025164 g     F .text.itcm	000000a0 _malloc_trim_r
00018b5c  w    F .text.itcm	00000004 usb_serial_class::clear()
60014a6c g     F .text.code	000001fc mbedtls_rsa_deduce_primes
00022c78 g     F .text.itcm	00000010 malloc
00025858 g     F .text.itcm	000000f0 __lshift
00022724 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
0000e208 g     F .text.itcm	00000028 _fnet_netif_get_by_sockaddr
6001d20c g     F .text.code	00000126 mbedtls_ssl_free
20006e10 g     O .data	00000120 _impure_data
00022bc4 g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
2000bb40 g     O .bss	00000060 Serial8
6001c4d0 g     F .text.code	000000c0 mbedtls_ssl_conf_psk
60003f54 g     F .text.code	0000000c mbedtls_mpi_size
2000ba20 g     O .bss	00000060 Serial5
20007a9c  w    O .data	00000016 usb_string_serial_number
6001c428 g     F .text.code	00000006 mbedtls_ssl_conf_handshake_timeout
600227e4 g     F .text.code	000000f8 configure_cache
2000ba80 g     O .bss	00000060 Serial6
00019454 g     F .text.itcm	00000072 HardwareSerial::peek()
0000fe7c g     F .text.itcm	00000018 _fnet_mutex_unlock
6000abb8 g     F .text.code	00000098 mbedtls_ecdsa_read_signature
00016d64 g     F .text.itcm	0000000c IRQHandler_Serial3
00015b98 g     F .text.itcm	00000028 websockets::WebsocketsServer::available()
6001801c g     F .text.code	00000004 mbedtls_sha512_finish
00021668 g     F .text.itcm	0000001a __cxa_current_exception_type
00016de8 g     F .text.itcm	0000000c IRQHandler_Serial4
60015114 g     F .text.code	00000e68 mbedtls_internal_sha1_process
0000f328 g     F .text.itcm	0000012c fnet_socket_accept
0000feb0 g     F .text.itcm	0000001c _fnet_stack_mutex_unlock
00008624 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_lock(void**)
00008bcc  w    F .text.itcm	00000004 EthernetClient::remotePort()
6001e398 g     F .text.code	00000104 mbedtls_ssl_psk_derive_premaster
6001c7fc g     F .text.code	0000000a mbedtls_ssl_conf_max_version
6002e404 g     O .text.progmem	0000033d mbedtls_test_cli_crt_ec
0001a550 g     F .text.itcm	000000b0 __cxa_type_match
0002b7d8 g     F .text.itcm	00000016 _wcsrtombs_r
00016ef0 g     F .text.itcm	0000000c IRQHandler_Serial6
0001b3cc g     F .text.itcm	00000048 std::invalid_argument::~invalid_argument()
6001e010 g     F .text.code	00000058 mbedtls_ssl_renegotiate
000242e4 g     F .text.itcm	000000f8 memmove
0001b0fc g     F .text.itcm	00000004 std::type_info::__is_function_p() const
00016e6c g     F .text.itcm	0000000c IRQHandler_Serial5
60008f1c g     F .text.code	000000c4 mbedtls_des_crypt_cbc
00009fc4 g     F .text.itcm	00000078 fnet_cpu_isr_install
00012358 g     F .text.itcm	00000044 _fnet_timer_poll
00016f74 g     F .text.itcm	0000000c IRQHandler_Serial7
2000d1a4 g     O .bss	00000004 fnet_netif_default
20001790  w    O .data	00000028 vtable for websockets::network::Teensy41TcpServer
6001c590 g     F .text.code	00000074 mbedtls_ssl_set_hs_psk
60010288 g     F .text.code	00000044 mbedtls_oid_get_ec_grp
00016ff8 g     F .text.itcm	0000000c IRQHandler_Serial8
00019d68 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
00017f3c g     F .text.itcm	00000004 operator new(unsigned int)
20001580 g     O .data	00000015 typeinfo name for std::invalid_argument
6001e348 g     F .text.code	0000001e mbedtls_ssl_write_change_cipher_spec
60005ff0 g     F .text.code	0000006e mbedtls_mpi_is_prime
00023210 g     F .text.itcm	00000040 rand
70000000 g       .bss.extram	00000000 _extram_start
6006b000 g       .text.csf	00000000 __text_csf_end
60033dfd g     O .text.progmem	00000001 _serialEvent6_default
6001c834 g     F .text.code	0000000e mbedtls_ssl_conf_extended_master_secret
60002e14 g     F .text.code	00000032 mbedtls_asn1_get_alg_null
0002454c g     F .text.itcm	0000008a strncmp
2000ca08 g     O .bss	00000001 __lock___malloc_recursive_mutex
00019f8c  w    F .text.itcm	00000058 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
20000280  w    O .data	00000048 ArduinoJson::V701PB2::detail::FloatTraits<double, 8u>::negativeBinaryPowersOfTen()::factors
00021f94 g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
6000e534 g     F .text.code	000000fa mbedtls_gcm_update
00009414  w    F .text.itcm	00000004 Print::availableForWrite()
2000c7fc g     O .bss	00000004 EthernetClass::socket_size
6002050c g     F .text.code	000000ec mbedtls_x509_serial_gets
6000f3f4 g     F .text.code	000000dc mbedtls_md_hmac_starts
6000fe60 g     F .text.code	00000004 mbedtls_md5_update
0001918c g     F .text.itcm	0000002c usb_serial_putchar
6000a650 g     F .text.code	00000030 mbedtls_ecdh_read_public
000090d0  w    F .text.itcm	0000004c EthernetClient::operator!=(bool)
0002272c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
0000b8a4 g     F .text.itcm	0000005a fnet_tls_set_ca_certificate
60016e10 g     F .text.code	00000204 mbedtls_sha256_self_test
00022064 g     F .text.itcm	00000002 .hidden _Unwind_Complete
6000a458 g     F .text.code	00000064 mbedtls_ecdh_compute_shared
6002ddf0 g     O .text.progmem	00000004 mbedtls_test_ca_crt_rsa_len
60023038 g       .text.code	00000000 __preinit_array_end
6000b860 g     F .text.code	00000040 mbedtls_ecp_grp_id_list
60014398 g     F .text.code	00000074 mbedtls_rsa_pkcs1_verify
00024e7c g     F .text.itcm	000000ba strcpy
2000c810 g     O .bss	00000004 EthernetServer::server_port
6001c478 g     F .text.code	0000000e mbedtls_ssl_conf_ciphersuites_for_version
00017918 g     F .text.itcm	00000054 digitalWrite
0000bc98 g     F .text.itcm	00000144 _fnet_arp_input
60002c14 g     F .text.code	00000050 mbedtls_asn1_get_bitstring_null
0001b2bc g     F .text.itcm	00000040 std::out_of_range::~out_of_range()
6001cc90 g     F .text.code	00000066 mbedtls_ssl_config_free
00022068 g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
0000015c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
0000fbec g     F .text.itcm	00000024 _fnet_socket_addr_route
0000e430 g     F .text.itcm	00000038 _fnet_netif_set_hw_addr
600150c0 g     F .text.code	0000000a mbedtls_sha1_clone
200016ac  w    O .data	00000028 vtable for usb_serial_class
0000dc64 g     F .text.itcm	00000020 _fnet_netbuf_from_buf
0000a03c  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
20001418 g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
6000a8f8 g     F .text.code	000000ac mbedtls_ecdsa_sign_det
0001a324 g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00003558  w    F .text.itcm	000001cc ArduinoJson::V701PB2::detail::FloatParts<double>::FloatParts(double)
2000d658 g     O .bss	00000004 systick_safe_read
20001804 g     O .data	00000014 vtable for std::out_of_range
6002e310 g     O .text.progmem	00000004 mbedtls_test_cli_key_ec_len
00008f4c g     F .text.itcm	000000a0 EthernetClient::connect(char const*, unsigned short, bool)
20007208 g     O .data	00000004 __cxxabiv1::__unexpected_handler
60003b90 g     F .text.code	0000007a mbedtls_mpi_shrink
00015a48 g     F .text.itcm	00000038 websockets::WebsocketsServer::~WebsocketsServer()
20001758  w    O .data	00000038 vtable for websockets::network::Teensy41TcpClient
60007dc0 g     F .text.code	00000018 mbedtls_cipher_reset
60018578 g     F .text.code	0000001c mbedtls_ssl_get_ciphersuite_sig_alg
0000afd0 g     F .text.itcm	00000024 fnet_dhcp_cln_release
60014dac g     F .text.code	00000200 mbedtls_rsa_validate_params
60016110 g     F .text.code	00000004 mbedtls_sha1_process
0000bddc g     F .text.itcm	0000009c _fnet_arp_send_request
6002a7cc g     O .text.progmem	00000004 mbedtls_test_cas_pem_len
000237a0 g     F .text.itcm	0000000c __cxa_atexit
6002eb7c g     O .text.progmem	00000004 mbedtls_test_ca_key_ec_len
6000b8c0 g     F .text.code	0000001c mbedtls_ecp_curve_info_from_tls_id
00013c48 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
6001e7cc g     F .text.code	0000005c mbedtls_ssl_recv_flight_completed
00015034 g     F .text.itcm	000006d4 websockets::internals::WebsocketsEndpoint::handleFrameInStreamingMode(websockets::internals::WebsocketsFrame&)
00018184  w    F .text.itcm	00000004 _read
6001df5c g     F .text.code	00000038 mbedtls_ssl_send_alert_message
60002afc g     F .text.code	00000052 mbedtls_asn1_get_bool
00018b04 g     F .text.itcm	00000058 usb_init_serialnumber
00000025 g       *ABS*	00000000 _teensy_model_identifier
6000f4d0 g     F .text.code	00000028 mbedtls_md_hmac_update
0001b2fc g     F .text.itcm	00000040 std::invalid_argument::~invalid_argument()
00021584 g     F .text.itcm	000000e4 __cxa_call_unexpected
0002a654 g     F .text.itcm	000000d8 __smakebuf_r
00014400 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
0000e324 g     F .text.itcm	00000018 fnet_netif_set_ip4_dns
2000142c g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00025488 g     F .text.itcm	00000012 _Bfree
00024b94 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00022c98 g     F .text.itcm	00000560 _malloc_r
60010e50 g     F .text.code	00000012 mbedtls_pk_can_do
00018368 g     F .text.itcm	0000002c usb_stop_sof_interrupts
20007a1c g     O .data	00000004 mbedtls_test_srv_crt
0001747c g     F .text.itcm	0000002a String::String(String&&)
0000e51c g     F .text.itcm	00000026 fnet_netif_init
00015b8c g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
00008bd8 g     F .text.itcm	00000024 EthernetClient::connect(IPAddress, unsigned short, bool)
0002a840 g     F .text.itcm	00000024 strnlen
00019dc4  w    F .text.itcm	00000048 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00018190  w    F .text.itcm	0000000a _fstat
60010e40 g     F .text.code	00000010 mbedtls_pk_get_bitlen
0000cc70 g     F .text.itcm	00000070 _fnet_ip4_addr_is_broadcast
200015e8 g     O .data	0000000d typeinfo name for std::type_info
0000f540 g     F .text.itcm	00000012 fnet_socket_send
00015b8c g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
6000873c g     F .text.code	00000004 mbedtls_ctr_drbg_set_prediction_resistance
200017dc g     O .data	00000014 vtable for std::logic_error
00013eec g     F .text.itcm	000000a8 websockets::WebsocketsClient::available(bool)
60002578 g     F .text.code	000004bc mbedtls_aes_self_test
20000310 g     O .data	00000028 __mprec_bigtens
60004340 g     F .text.code	000000a2 mbedtls_mpi_cmp_mpi
0000fa48 g     F .text.itcm	0000005a _fnet_socket_buffer_append_address
00023268 g     F .text.itcm	000003d8 _realloc_r
00010088 g     F .text.itcm	0000000e fnet_tolower
2000d689 g     O .bss	00000001 external_psram_size
00009cb0 g     F .text.itcm	00000098 EthernetClass::socketRecv(unsigned char, unsigned char*, short)
6000fe6c g     F .text.code	00000060 mbedtls_md5_ret
6000a4bc g     F .text.code	0000000a mbedtls_ecdh_init
00014074 g     F .text.itcm	0000033c websockets::WebsocketsClient::poll()
6002c7f4 g     O .text.progmem	00000004 mbedtls_test_srv_crt_rsa_len
2000ca04 g     O .bss	00000001 __lock___atexit_recursive_mutex
00025410 g     F .text.itcm	0000002a __ascii_mbtowc
0002243c  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
00022444  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
20001558 g     O .data	00000011 typeinfo name for std::out_of_range
0001a2c0 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
0000a698 g     F .text.itcm	00000026 _fnet_dhcp_add_option
60022f7c g     F .text.code	00000000 _init
00001cc8  w    F .text.itcm	0000071c Logic::parseButton(int, bool)
0000e044 g     F .text.itcm	00000032 _fnet_netbuf_queue_del
600044d8 g     F .text.code	00000092 mbedtls_mpi_sub_abs
00017184 g     F .text.itcm	000000c8 IntervalTimer::beginCycles(void (*)(), unsigned long)
00017fb8  w    F .text.itcm	00000002 serialEvent3()
6002cca8 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_rsa_len
00022434 g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
6000c0a0 g     F .text.code	00000074 mbedtls_ecp_point_read_binary
0000a048  w    F .text.itcm	00000004 usb_serial_class::read()
20007a9c g     O .data	00000016 usb_string_serial_number_default
00021908 g     F .text.itcm	0000001e .hidden __floatunsidf
00024a64 g     F .text.itcm	0000000c __locale_mb_cur_max
6000f39c g     F .text.code	00000014 mbedtls_md_starts
00008e40 g     F .text.itcm	00000028 EthernetClient::write(unsigned char const*, unsigned int)
0000c278 g     F .text.itcm	00000014 _fnet_eth_release
60013114 g     F .text.code	00000120 mbedtls_rsa_export_raw
00013b48  w    F .text.itcm	0000000e std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
60021e40 g     F .text.code	00000020 mbedtls_x509_crt_verify
60001e50 g     F .text.code	0000007a mbedtls_aes_crypt_cfb128
600103a0 g     F .text.code	00000040 mbedtls_oid_get_oid_by_sig_alg
0002194c g     F .text.itcm	00000042 .hidden __aeabi_f2d
00000200  w    F .text.itcm	00000020 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
60014778 g     F .text.code	000002f4 mbedtls_rsa_self_test
6001e558 g     F .text.code	00000020 mbedtls_ssl_check_curve
60010df0 g     F .text.code	00000050 mbedtls_pk_setup_rsa_alt
0001aff8 g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6000f3b0 g     F .text.code	00000014 mbedtls_md_update
6001c7ac g     F .text.code	00000006 mbedtls_ssl_conf_sni
6001290c g     F .text.code	000000f0 mbedtls_pk_parse_subpubkey
60018154 g     F .text.code	00000168 mbedtls_sha512_self_test
00015bc0 g     F .text.itcm	00000088 websockets::WebsocketsServer::listen(unsigned short)
6001a288 g     F .text.code	000019ac mbedtls_ssl_handshake_server_step
0000d4e8 g     F .text.itcm	000000d2 _fnet_ip4_setsockopt
20200020 g     O .bss.dma	00000062 usb_descriptor_buffer
20007ec0 g     O NonCacheable	0000261c fnet_fec0_buf
0001239c g     F .text.itcm	00000012 fnet_timer_poll
0000f258 g     F .text.itcm	00000048 fnet_socket_shutdown
0000fc10 g     F .text.itcm	00000144 fnet_socket_poll
000241b8 g     F .text.itcm	000000cc __swsetup_r
2000d683 g     O .bss	00000001 EventResponder::runningFromYield
6000a5b0 g     F .text.code	0000004c mbedtls_ecdh_get_params
6001c8a8 g     F .text.code	0000000e mbedtls_ssl_conf_session_tickets
60008d28 g     F .text.code	000001f4 mbedtls_des_crypt_ecb
0000b9cc g     F .text.itcm	00000020 fnet_tls_socket_close
00008e68 g     F .text.itcm	00000038 EthernetClient::read(unsigned char*, unsigned int)
0000b964 g     F .text.itcm	00000068 fnet_tls_socket
000248fc g     F .text.itcm	00000168 strstr
60013024 g     F .text.code	000000f0 mbedtls_rsa_export
6001c79c g     F .text.code	00000008 mbedtls_ssl_set_hs_ca_chain
000144c4  w    F .text.itcm	00000002 std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0000c13c g     F .text.itcm	0000000c fnet_error_get
00000efc  w    F .text.itcm	00000124 ArduinoJson::V701PB2::detail::VariantData::release(ArduinoJson::V701PB2::detail::ResourceManager*)
000181a0  w    F .text.itcm	00000006 _lseek
60010da0 g     F .text.code	00000020 mbedtls_pk_free
0000e030 g     F .text.itcm	00000014 _fnet_netbuf_queue_add
6001c844 g     F .text.code	0000000e mbedtls_ssl_conf_cert_req_ca_list
00023d88 g     F .text.itcm	000000aa _fwrite_r
60020834 g     F .text.code	000001e8 mbedtls_x509_get_rsassa_pss_params
00014660 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
60014fac g     F .text.code	00000100 mbedtls_rsa_validate_crt
00009908 g     F .text.itcm	000000f0 EthernetServer::accept()
000023e4 g     F .text.itcm	000005ac setup
200015c8 g     O .data	0000000d typeinfo name for std::bad_alloc
600132b4 g     F .text.code	00000006 mbedtls_rsa_set_padding
0000c390 g     F .text.itcm	0000003c _fnet_eth_multicast_join_ip4
60001020 g     O .text.headers	0000000c BootData
200077cc g     O .data	0000005c fnet_cpu_eth0_if
60016108 g     F .text.code	00000004 mbedtls_sha1_update
60014670 g     F .text.code	00000106 mbedtls_rsa_copy
0000d7e4 g     F .text.itcm	00000006 _fnet_mempool_release
0000e5ac g     F .text.itcm	0000001e fnet_netif_is_connected
60013bc8 g     F .text.code	000001a0 mbedtls_rsa_rsaes_oaep_decrypt
0001ae5c g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
60007be8 g     F .text.code	00000038 mbedtls_cipher_info_from_values
2000d650 g     O .bss	00000004 systick_cycle_count
0002549c g     F .text.itcm	000000a4 __multadd
00018a8c g     F .text.itcm	00000030 usb_prepare_transfer
00022b8c g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
60003b30 g     F .text.code	00000060 mbedtls_mpi_grow
00008df0 g     F .text.itcm	0000001c EthernetClient::availableForWrite()
20001688 g     O .data	00000024 vtable for HardwareSerial
20002a38 g     O .data	00000004 fnet_dhcp_magic_cookie
60020a5c g     F .text.code	00000090 mbedtls_x509_get_sig_alg
6001c92c g     F .text.code	0000000c mbedtls_ssl_get_bytes_avail
6001c408 g     F .text.code	00000006 mbedtls_ssl_conf_export_keys_cb
0000c988 g     F .text.itcm	0000003a _fnet_ip_getsockopt
2000c814 g     O .bss	00000004 EthernetServer::tls_socket_ptr
0002bee0 g       .text.itcm	00000000 _etext
00024a70 g     F .text.itcm	00000024 _close_r
60002e48 g     F .text.code	00000028 mbedtls_asn1_find_named_data
60008714 g     F .text.code	0000000a mbedtls_ctr_drbg_init
60031610 g     O .text.progmem	00000030 mbedtls_sha512_info
00000070  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::close()
60011a00 g     F .text.code	000001fc mbedtls_pkcs5_pbes2
60001fc0 g     F .text.code	000004b0 mbedtls_internal_aes_decrypt
6001c898 g     F .text.code	0000000e mbedtls_ssl_conf_cbc_record_splitting
00019694 g     F .text.itcm	00000164 HardwareSerial::IRQHandler()
600049e0 g     F .text.code	0000047c mbedtls_mpi_div_mpi
60017020 g     F .text.code	0000000a mbedtls_sha512_free
60001894 g     F .text.code	00000118 mbedtls_aes_setkey_dec
00008604 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_release(void**)
60003238 g     F .text.code	00000050 mbedtls_asn1_write_printable_string
60017c40 g     F .text.code	000000a0 mbedtls_sha512_update_ret
6000e3c8 g     F .text.code	0000016a mbedtls_gcm_starts
0000fff4 g     F .text.itcm	0000000c fnet_memset_zero
000067bc  w    F .text.itcm	0000036c ArduinoJson::V701PB2::detail::JsonDeserializer<ArduinoJson::V701PB2::detail::Reader<String, void> >::parseQuotedString()
60013a34 g     F .text.code	00000044 mbedtls_rsa_pkcs1_encrypt
0002a938 g     F .text.itcm	00000040 __assert_func
6001cd60 g     F .text.code	00000032 mbedtls_ssl_transform_free
6001cab0 g     F .text.code	00000038 mbedtls_ssl_handshake_step
6002e748 g     O .text.progmem	000000e9 mbedtls_test_srv_key_ec
60007dd8 g     F .text.code	00000038 mbedtls_cipher_update_ad
60006b9c g     F .text.code	000000b4 mbedtls_camellia_setkey_dec
6001e6b8 g     F .text.code	00000114 mbedtls_ssl_write_finished
00017f4c g     F .text.itcm	00000062 ultoa
00019cd0 g     F .text.itcm	00000030 std::__throw_invalid_argument(char const*)
60008850 g     F .text.code	000000d0 mbedtls_ctr_drbg_random_with_add
60009f98 g     F .text.code	00000028 mbedtls_dhm_read_public
2000d681 g     O .bss	00000001 EthernetClass::socket_num
2000c818 g     O .bss	00000004 EthernetServer::_tls
00002990 g     F .text.itcm	00000084 resetInterface()
6001c64c g     F .text.code	0000003a mbedtls_ssl_conf_dh_param_bin
60012b34 g     F .text.code	00000010 mbedtls_platform_zeroize
6001d8d4 g     F .text.code	000000a8 mbedtls_ssl_flush_output
000193ec g     F .text.itcm	00000020 systick_isr
0000c948 g     F .text.itcm	0000003e _fnet_ip_setsockopt
600076dc g     F .text.code	00000014 mbedtls_ccm_free
0000fecc g     F .text.itcm	00000120 fnet_memcpy
0001a600 g     F .text.itcm	00000064 __cxa_begin_cleanup
60022dec g     F .text.code	000000e8 usb_init
00009264 g     F .text.itcm	00000164 EthernetClient::available()
0000e0b0 g     F .text.itcm	00000010 _fnet_malloc
60003444 g     F .text.code	00000148 mbedtls_base64_encode
60013800 g     F .text.code	000000f4 mbedtls_rsa_rsaes_pkcs1_v15_encrypt
00002a14 g     F .text.itcm	00000430 buttonCallback(int, bool)
2000b800 g     O .bss	00000030 GPIs
00000174  w    F .text.itcm	00000020 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
6001e234 g     F .text.code	00000114 mbedtls_ssl_write_certificate
0000e0e4 g     F .text.itcm	0000000c _fnet_mem_release
60033de8 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_next
00008560 g     F .text.itcm	00000006 DNSClient::begin(IPAddress const&)
200018d0  w    O .data	00000008 std::_Sp_make_shared_tag::_S_ti()::__tag
60033e34 g     O .text.progmem	00000062 usb_config_descriptor_12
60010c74 g     F .text.code	00000108 mbedtls_pem_write_buffer
00000074  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
00017fc4  w    F .text.itcm	00000002 serialEvent6()
6000ba80 g     F .text.code	0000002a mbedtls_ecp_set_zero
20000000 g       .data	00000000 _sdata
00024480 g     F .text.itcm	000000cc strchr
6000f394 g     F .text.code	00000006 mbedtls_md_get_name
6001ca34 g     F .text.code	0000000a mbedtls_ssl_get_peer_cert
0000e550 g     F .text.itcm	0000000c _fnet_netif_leave_ip4_multicast
6000e630 g     F .text.code	000000d2 mbedtls_gcm_finish
0000b0d8 g     F .text.itcm	000001c8 fnet_dns_init
6001e1ec g     F .text.code	00000048 mbedtls_ssl_close_notify
20007204 g     O .data	00000004 __cxxabiv1::__terminate_handler
00015c48 g     F .text.itcm	00000068 websockets::WebsocketsServer::poll()
2000d654 g     O .bss	00000004 systick_millis_count
00022884 g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
aaaaafff g       *ABS*	00000000 _flexram_bank_config
00013db4 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
60013370 g     F .text.code	0000003c mbedtls_rsa_check_pub_priv
60003e5c g     F .text.code	0000004a mbedtls_mpi_set_bit
0000c28c g     F .text.itcm	00000004 _fnet_eth_drain
6002f064 g     O .text.progmem	00000158 mbedtls_cipher_definitions
00017870 g     F .text.itcm	000000a8 delay
20007220 g     O .data	00000004 __atexit_recursive_mutex
0000d73c g     F .text.itcm	00000054 fnet_event_raise
20007c00 g     O .data	000002c0 _VectorsRam
000250dc g     F .text.itcm	00000088 __register_exitproc
00025204 g     F .text.itcm	0000020c _free_r
2000182c  w    O .data	0000001c vtable for std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>
0001ae38 g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
6000e274 g     F .text.code	00000154 mbedtls_gcm_setkey
6001cff0 g     F .text.code	000000a8 mbedtls_ssl_setup
6000e7c8 g     F .text.code	00000016 mbedtls_gcm_free
60011508 g     F .text.code	00000008 mbedtls_pkcs12_pbe_sha1_rc4_128
0000e408 g     F .text.itcm	00000026 fnet_netif_get_hw_addr
00001c2c g     F .text.itcm	00000068 startButtons(void (*)(int, bool))
600133ac g     F .text.code	00000090 mbedtls_rsa_public
000000d0  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
000013a8  w    F .text.itcm	00000374 ArduinoJson::V701PB2::detail::parseNumber(char const*, ArduinoJson::V701PB2::detail::VariantData&)
6001c75c g     F .text.code	00000040 mbedtls_ssl_set_hs_own_cert
0000b9ec g     F .text.itcm	00000022 fnet_tls_socket_connect
60006f3c g     F .text.code	00000404 mbedtls_camellia_self_test
0001a028  w    F .text.itcm	0000019c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
60018390 g     F .text.code	000000dc mbedtls_ssl_cache_set
20006d58 g     O .data	00000084 usb_descriptor_list
0000f2a0 g     F .text.itcm	00000088 fnet_socket_listen
60007728 g     F .text.code	0000002c mbedtls_ccm_star_encrypt_and_tag
6002ccac g     O .text.progmem	0000000d mbedtls_test_ca_pwd_rsa
0000e1bc g     F .text.itcm	00000028 _fnet_netif_drain
60006d78 g     F .text.code	000000e4 mbedtls_camellia_crypt_cbc
60009dc8 g     F .text.code	0000005a mbedtls_dhm_read_params
60018020 g     F .text.code	00000004 mbedtls_sha512_process
0000a4a0 g     F .text.itcm	000000ec fnet_fec_output
0000eb34 g     F .text.itcm	00000020 _fnet_socket_list_add
00019aa0 g     F .text.itcm	0000002e std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000091bc  w    F .text.itcm	000000a8 EthernetClient::operator!=(EthernetClient const&)
0001a2b8 g     F .text.itcm	00000008 std::bad_alloc::what() const
0000fe64 g     F .text.itcm	00000018 _fnet_mutex_lock
6001846c g     F .text.code	00000008 mbedtls_ssl_cache_set_max_entries
20000000 g     O .data	00000280 endpoint_queue_head
200079f0 g     O .data	00000024 fnet_udp_prot_if
0001a3c0 g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
60002d14 g     F .text.code	00000048 mbedtls_asn1_get_mpi
60013db0 g     F .text.code	000000f8 mbedtls_rsa_rsassa_pkcs1_v15_sign
00014538 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6000edd4 g     F .text.code	00000072 mbedtls_hmac_drbg_reseed
6000a454 g     F .text.code	00000004 mbedtls_ecdh_gen_public
0000182c  w    F .text.itcm	00000400 Settings::writeDefaults()
600043e4 g     F .text.code	00000030 mbedtls_mpi_cmp_int
60010424 g     F .text.code	00000044 mbedtls_oid_get_md_hmac
00014e88 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::ping(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
20200008 g     O .bss.dma	00000004 EthernetClass::socket_buf_len
0000faa4 g     F .text.itcm	00000046 _fnet_socket_buffer_read_record
600098d0 g     F .text.code	00000020 mbedtls_des3_set2key_dec
60021e6c g     F .text.code	000000dc mbedtls_x509_crt_free
000191d0 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00018fc0 g     F .text.itcm	000000e0 usb_serial_read
60003cdc g     F .text.code	0000007a mbedtls_mpi_safe_cond_assign
0001a344 g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
00022be4  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
2000ca3c g     O .bss	00000004 __malloc_max_total_mem
60008d00 g     F .text.code	00000028 mbedtls_des_key_check_weak
0000bf08 g     F .text.itcm	0000001e fnet_arp_send_request
0000a58c g     F .text.itcm	00000090 fnet_fec_multicast_join
200077a8 g     O .data	0000000c __sglue
000174a8 g     F .text.itcm	0000000e String::~String()
2000d298 g     O .bss	000000ac mbedtls_cipher_supported
0001b23c g     F .text.itcm	00000040 std::logic_error::~logic_error()
00015a28  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
60018474 g     F .text.code	0000002c mbedtls_ssl_cache_free
20001a54 g     O .data	00000101 _ctype_
0002a4d0 g     F .text.itcm	00000130 __sflush_r
0000e5cc g     F .text.itcm	00000010 _fnet_netif_signal_ip4_addr_conflict
60001660 g     F .text.code	0000000c mbedtls_aes_free
0000cb50 g     F .text.itcm	0000003c _fnet_ip4_set_socket_addr
60007d7c g     F .text.code	00000044 mbedtls_cipher_set_iv
00023e54 g     F .text.itcm	00000028 printf
20001544 g     O .data	00000011 typeinfo name for std::length_error
000219fc g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
600150ac g     F .text.code	00000008 mbedtls_sha1_init
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00014610 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
600227d8  w    F .text.code	00000002 startup_middle_hook
2000c820 g     O .bss	00000004 EventResponder::lastInterrupt
0000d6e8 g     F .text.itcm	00000054 fnet_isr_unlock
2000a520 g     O .bss	00000020 endpoint0_transfer_data
0002393c g     F .text.itcm	0000000c __sfp_lock_release
00021684 g     F .text.itcm	00000000 .hidden __aeabi_drsub
60002fa8 g     F .text.code	00000022 mbedtls_asn1_write_tag
0001b27c g     F .text.itcm	00000040 std::length_error::~length_error()
00013d0c g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
20001848 g     O .data	00000014 vtable for std::invalid_argument
0000b520 g     F .text.itcm	00000038 fnet_service_poll
6000980c g     F .text.code	0000000a mbedtls_des_setkey_enc
20007ab6 g     O .data	00000001 yield_active_check_flags
6001e828 g     F .text.code	000000a0 mbedtls_ssl_resend
6001ca60 g     F .text.code	00000050 mbedtls_ssl_handshake
0001a7e0 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
0001a28c  w    F .text.itcm	0000002c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0001b050 g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00023e34 g     F .text.itcm	00000020 fwrite
000137b4 g     F .text.itcm	00000324 websockets::crypto::websocketsHandshakeEncodeKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
60022c60 g     F .text.code	0000005c usb_pll_start
6000e268 g     F .text.code	0000000a mbedtls_gcm_init
0001a9a4 g     F .text.itcm	00000494 __gxx_personality_v0
60002484 g     F .text.code	000000ea mbedtls_aes_crypt_cbc
00017a5c g     F .text.itcm	00000048 eeprom_initialize
6001e4c0 g     F .text.code	00000018 mbedtls_ssl_sig_from_pk_alg
00000074  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
6001f990 g     F .text.code	0000005e mbedtls_ssl_read_record
6001c814 g     F .text.code	0000000e mbedtls_ssl_conf_fallback
00003724  w    F .text.itcm	00000294 void ArduinoJson::V701PB2::detail::TextFormatter<ArduinoJson::V701PB2::detail::StaticStringWriter>::writeFloat<double>(double)
6002eb68 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_ec_len
60010e64 g     F .text.code	00000058 mbedtls_pk_verify
0000171c  w    F .text.itcm	00000110 Settings::Settings()
600076f0 g     F .text.code	00000036 mbedtls_ccm_encrypt_and_tag
60008828 g     F .text.code	00000026 mbedtls_ctr_drbg_update
000238f4 g     F .text.itcm	0000003c __sinit
0000e55c g     F .text.itcm	0000004e _fnet_netif_is_connected
20000338 g     O .data	000000c8 __mprec_tens
6002bc2c g     O .text.progmem	00000517 mbedtls_test_cli_crt_rsa
600087d4 g     F .text.code	00000052 mbedtls_ctr_drbg_seed
0002283c g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
6001c8e0 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation_period
60010dc0 g     F .text.code	00000030 mbedtls_pk_setup
00008628 g     F .text.itcm	00000050 EthernetClass::link_callback(void*, fnet_bool_t, void*)
00016c50 g     F .text.itcm	0000000e websockets::internals::fromInternalString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
6001a238 g     F .text.code	00000008 mbedtls_ssl_conf_dtls_cookies
6000c948 g     F .text.code	000000a4 mbedtls_ecp_gen_keypair_base
0001998c  w    F .text.itcm	00000002 serialEvent()
00027718 g     F .text.itcm	00001bd4 _vfprintf_r
20007398 g     O .data	00000408 __malloc_av_
0000a61c g     F .text.itcm	0000007c fnet_fec_multicast_leave
000000fc  w    F .text.itcm	00000012 websockets::network::Teensy41TcpServer::available()
000197f8 g     F .text.itcm	0000007a flexpwm_init
60033e30 g     O .text.progmem	00000004 string0
00014608 g     F .text.itcm	00000008 websockets::internals::swapEndianess(unsigned long long)
600185e4 g     F .text.code	0000002c mbedtls_ssl_get_ciphersuite_id
0001b0f8 g     F .text.itcm	00000002 std::type_info::~type_info()
00022be4  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
6001e624 g     F .text.code	00000026 mbedtls_ssl_write_version
0002a72c g     F .text.itcm	000000aa __fputwc
000123b0 g     F .text.itcm	00000040 _fnet_timer_new
0000cab4 g     F .text.itcm	00000048 _fnet_ip4_release
600100a4 g     F .text.code	000000dc mbedtls_oid_get_numeric_string
200015d8 g     O .data	0000000d typeinfo name for std::exception
60031d80 g     O .text.progmem	00000030 mbedtls_eckey_info
0000cafc g     F .text.itcm	00000044 _fnet_ip4_route
0000dea8 g     F .text.itcm	00000008 _fnet_netbuf_trim
60003af8 g     F .text.code	0000000e mbedtls_mpi_init
600228dc g     F .text.code	00000384 configure_external_ram
2000ca40 g     O .bss	00000004 __malloc_top_pad
0002244c g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
000245d8 g     F .text.itcm	00000064 strncpy
0000eb18 g     F .text.itcm	0000001a _fnet_socket_set_error
6000460c g     F .text.code	00000072 mbedtls_mpi_add_int
00019d68 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
60033dc8 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_default
20007a14 g     O .data	00000004 mbedtls_test_ca_crt
600132c0 g     F .text.code	0000004c mbedtls_rsa_check_pubkey
6000de14 g     F .text.code	00000002 mbedtls_entropy_gather
2000a500 g     O .bss	00000020 endpoint0_transfer_ack
2000cb7c g     O .bss	00000004 __stdio_exit_handler
60002e70 g     F .text.code	00000020 mbedtls_asn1_free_named_data
6001d97c g     F .text.code	000005e0 mbedtls_ssl_write_record
0002273c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
00019ad0 g     F .text.itcm	00000038 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00009690 g     F .text.itcm	00000210 EthernetServer::available()
00018b6c  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
60011bfc g     F .text.code	000000f0 mbedtls_pkcs5_self_test
00008c4c g     F .text.itcm	000000ac EthernetClient::connect(char const*, unsigned short)
6000b8dc g     F .text.code	0000002c mbedtls_ecp_curve_info_from_name
0000dd20 g     F .text.itcm	00000040 _fnet_netbuf_free_chain
2000d691 g     O .bss	00000001 usb_cdc_line_rtsdtr
6000f610 g     F .text.code	00000008 mbedtls_md5_init
00023ef4 g     F .text.itcm	00000010 putchar
0001b45c g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
00024b90 g     F .text.itcm	00000002 __retarget_lock_init_recursive
00000080  w    F .text.itcm	00000008 ArduinoJson::V701PB2::detail::DefaultAllocator::reallocate(void*, unsigned int)
0000c71c g     F .text.itcm	0000010c _fnet_icmp4_error
0000ba10 g     F .text.itcm	00000010 fnet_tls_socket_set_hostname
00017520 g     F .text.itcm	00000026 String::String(char const*)
6000ca08 g     F .text.code	0000002e mbedtls_ecp_gen_key
60011030 g     F .text.code	0000004c mbedtls_pk_check_pair
00017aa4 g     F .text.itcm	0000007c eeprom_read_byte
60022cbc g     F .text.code	00000130 tempmon_init
0000d5bc g     F .text.itcm	00000040 _fnet_isr_handler
60016d24 g     F .text.code	00000004 mbedtls_sha256_finish
20001818 g     O .data	00000014 vtable for std::bad_exception
00017fd0 g     F .text.itcm	00000180 unused_interrupt_vector
600211d0 g     F .text.code	000006ec mbedtls_x509_crt_info
00019968 g     F .text.itcm	00000024 rtc_get
2000ca10 g     O .bss	00000028 __malloc_current_mallinfo
0000dcf0 g     F .text.itcm	00000030 _fnet_netbuf_free
60020708 g     F .text.code	0000010c mbedtls_x509_get_name
6000a2d0 g     F .text.code	0000010c mbedtls_dhm_parse_dhm
2000ca44 g     O .bss	00000138 __sf
0000eb54 g     F .text.itcm	00000028 _fnet_socket_list_del
00017418 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
60010c4c g     F .text.code	00000026 mbedtls_pem_free
6001440c g     F .text.code	0000006e mbedtls_rsa_free
0000fd54 g     F .text.itcm	000000e4 fnet_init
0000c440 g     F .text.itcm	0000010c _fnet_eth_phy_init
6000fed0 g     F .text.code	0000009c mbedtls_md5_self_test
2000c874 g     O .bss	00000190 __atexit0
000190e4 g     F .text.itcm	00000018 usb_serial_available
00000078  w    F .text.itcm	00000006 websockets::network::Teensy41TcpServer::getSocket() const
00022734 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
0002bee4 g       .ARM.exidx	00000000 __exidx_end
2000d670 g     O .bss	00000004 usb_timer0_callback
0000deb0 g     F .text.itcm	0000014e _fnet_netbuf_cut_center
60031cf0 g     O .text.progmem	00000030 mbedtls_rsa_alt_info
6000de18 g     F .text.code	000000e2 mbedtls_entropy_func
6001c3a8 g     F .text.code	0000000e mbedtls_ssl_conf_authmode
00017548 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000004d4  w    F .text.itcm	00000090 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
60033f06  w    O .text.progmem	00000001 _serialEventUSB2_default
6000f384 g     F .text.code	00000006 mbedtls_md_get_size
00019a60 g     F .text.itcm	0000000a __aeabi_atexit
60007c20 g     F .text.code	00000008 mbedtls_cipher_init
60033dfb g     O .text.progmem	00000001 _serialEvent4_default
00009a78 g     F .text.itcm	00000044 EthernetClass::socketClose(unsigned char)
20001488 g     O .data	0000000c typeinfo for std::bad_alloc
0001b27c g     F .text.itcm	00000040 std::length_error::~length_error()
60009f50 g     F .text.code	00000048 mbedtls_dhm_set_group
600185b0 g     F .text.code	0000000e mbedtls_ssl_ciphersuite_uses_psk
60014c68 g     F .text.code	000000c8 mbedtls_rsa_deduce_private_exponent
20001598 g     O .data	00000016 typeinfo name for std::bad_function_call
00015d60  w    F .text.itcm	00000136 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
000293e4 g     F .text.itcm	00000018 __sprint_r
00000488  w    F .text.itcm	0000004a VideoHub::~VideoHub()
0001b504 g     F .text.itcm	00000014 std::out_of_range::out_of_range(char const*)
0000d5fc g     F .text.itcm	00000048 _fnet_isr_vector_init
202030a0 g       .bss.dma	00000000 _heap_start
00023d40 g     F .text.itcm	00000046 _fwalk_sglue
6001e49c g     F .text.code	00000022 mbedtls_ssl_sig_from_pk
00015a2c  w    F .text.itcm	00000004 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
60033e00  w    O .text.progmem	00000016 usb_string_product_name
6000ba18 g     F .text.code	00000030 mbedtls_ecp_keypair_free
0000a044  w    F .text.itcm	00000004 usb_serial_class::available()
000239ac g     F .text.itcm	00000086 _fputs_r
6000f308 g     F .text.code	0000004c mbedtls_md_setup
000144b0 g     F .text.itcm	00000014 websockets::WebsocketsClient::~WebsocketsClient()
60033df8 g     O .text.progmem	00000001 _serialEvent1_default
0001b384 g     F .text.itcm	00000048 std::out_of_range::~out_of_range()
00025ae0 g     F .text.itcm	000000d4 __d2b
60016114 g     F .text.code	00000068 mbedtls_sha1_ret
6002c144 g     O .text.progmem	00000004 mbedtls_test_srv_key_rsa_len
0000edfc g     F .text.itcm	00000038 _fnet_socket_copy
6001c3d0 g     F .text.code	0000000c mbedtls_ssl_set_bio
2000d66c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
6001c938 g     F .text.code	00000014 mbedtls_ssl_get_verify_result
60018554 g     F .text.code	00000022 mbedtls_ssl_get_ciphersuite_sig_pk_alg
60017ce0 g     F .text.code	0000023c mbedtls_sha512_finish_ret
60021990 g     F .text.code	00000060 mbedtls_x509_crt_check_extended_key_usage
0001b4dc g     F .text.itcm	00000014 std::invalid_argument::invalid_argument(char const*)
60010208 g     F .text.code	00000044 mbedtls_oid_get_pk_alg
6002e838 g     O .text.progmem	0000032d mbedtls_test_srv_crt_ec
00007530 g     F .text.itcm	00000e44 websocketMessageCallback(websockets::WebsocketsClient&, websockets::WebsocketsMessage)
00001c94 g     F .text.itcm	00000034 pollButtons()
00022860 g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
00014918 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::poll()
60006e5c g     F .text.code	0000007e mbedtls_camellia_crypt_cfb128
600118fc g     F .text.code	00000104 mbedtls_pkcs5_pbkdf2_hmac
00005ba4  w    F .text.itcm	0000026c void ArduinoJson::V701PB2::detail::TextFormatter<ArduinoJson::V701PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::writeFloat<double>(double)
20006f34 g     O .data	00000004 F_CPU_ACTUAL
00016ce0 g     F .text.itcm	0000000c IRQHandler_Serial2
60002574 g     F .text.code	00000004 mbedtls_aes_decrypt
00016c60 g     F .text.itcm	0000000c IRQHandler_Serial1
60033e18 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20007228 g     O .data	00000000 .hidden __dso_handle
6001c7a4 g     F .text.code	00000008 mbedtls_ssl_set_hs_authmode
000255e0 g     F .text.itcm	0000005c __i2b
60012e08 g     F .text.code	00000016 mbedtls_rsa_init
00018188  w    F .text.itcm	00000006 _close
00023930 g     F .text.itcm	0000000c __sfp_lock_acquire
2000bae0 g     O .bss	00000060 Serial7
00014eb4 g     F .text.itcm	0000009c websockets::internals::WebsocketsEndpoint::close(websockets::CloseReason)
00008ae0 g     F .text.itcm	00000038 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress)
60007c48 g     F .text.code	00000058 mbedtls_cipher_setup
00008fec g     F .text.itcm	000000e4 EthernetClient::connectPoll()
6001f9f0 g     F .text.code	00000218 mbedtls_ssl_read
6000ac50 g     F .text.code	00000032 mbedtls_ecdsa_genkey
00019874 g     F .text.itcm	000000f4 pwm_init
6001d334 g     F .text.code	000000d8 mbedtls_ssl_handshake_wrapup
6001c438 g     F .text.code	00000034 mbedtls_ssl_set_session
0001a804 g     F .text.itcm	00000008 __cxa_get_globals
2000b960 g     O .bss	00000060 Serial3
00014660 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
2000d682 g     O .bss	00000001 EthernetClass::link_status
6002eb6c g     O .text.progmem	0000000d mbedtls_test_ca_pwd_ec
0001b2fc g     F .text.itcm	00000040 std::invalid_argument::~invalid_argument()
200077a0 g     O .data	00000004 __malloc_sbrk_base
20002b2c g     O .data	00000004 mbedtls_test_cli_crt_len
2000b9c0 g     O .bss	00000060 Serial4
000240a0 g     F .text.itcm	0000003e __swrite
6000f1b8 g     F .text.code	00000008 mbedtls_md_list
2000bc1c g     O .bss	0000084c VideoHub
2000b8a0 g     O .bss	00000060 Serial1
6000db2c g     F .text.code	0000013c mbedtls_ecp_group_load
60022ed4 g     F .text.code	00000054 _reboot_Teensyduino_
00009abc g     F .text.itcm	00000160 EthernetClass::socketBegin(unsigned char, unsigned short)
200079a8 g     O .data	00000024 fnet_raw_prot_if
0000fe94 g     F .text.itcm	0000001c _fnet_stack_mutex_lock
6002b57c g     O .text.progmem	000006ab mbedtls_test_cli_key_rsa
2000b900 g     O .bss	00000060 Serial2
00000240  w    F .text.itcm	00000070 websockets::network::Teensy41TcpServer::listen(unsigned short)
0000d7a4 g     F .text.itcm	0000003e _fnet_mempool_init
00019ec8  w    F .text.itcm	000000aa std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
20001748 g     O .data	00000010 vtable for websockets::WebsocketsServer
0002a408 g     F .text.itcm	000000c6 _fclose_r
2000b878 g     O .bss	00000028 Network
00014538 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6001efd8 g     F .text.code	000009b8 mbedtls_ssl_read_record_layer
0001955c g     F .text.itcm	0000001a HardwareSerial::flush()
6000a9a4 g     F .text.code	00000158 mbedtls_ecdsa_verify
0002b818 g     F .text.itcm	00000100 __ssprint_r
600032d8 g     F .text.code	00000072 mbedtls_asn1_write_bitstring
2000d674 g     O .bss	00000004 usb_timer1_callback
60002acc g     F .text.code	0000002e mbedtls_asn1_get_tag
2000c82c g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00009e3c g     F .text.itcm	00000006 fnet_htons
0000c148 g     F .text.itcm	0000000c fnet_error_set
0002543c g     F .text.itcm	0000004c _Balloc
00019f74  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00010028 g     F .text.itcm	00000018 fnet_strlen
2000d684 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
60008cd4 g     F .text.code	0000002c mbedtls_des_key_check_key_parity
6001c398 g     F .text.code	0000000e mbedtls_ssl_conf_transport
60003e3c g     F .text.code	00000020 mbedtls_mpi_get_bit
600150b4 g     F .text.code	0000000a mbedtls_sha1_free
200002c8  w    O .data	00000048 ArduinoJson::V701PB2::detail::FloatTraits<double, 8u>::positiveBinaryPowersOfTen()::factors
6001c46c g     F .text.code	0000000a mbedtls_ssl_conf_ciphersuites
60017018 g     F .text.code	00000008 mbedtls_sha512_init
00019e5c  w    F .text.itcm	0000006a std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00017440 g     F .text.itcm	0000003a String::String(String const&)
60023038 g       .text.code	00000000 __preinit_array_start
6000f260 g     F .text.code	00000018 mbedtls_md_info_from_type
2000ca38 g     O .bss	00000004 __malloc_max_sbrked_mem
60009818 g     F .text.code	00000038 mbedtls_des_setkey_dec
6001107c g     F .text.code	00000028 mbedtls_pk_debug
60013d68 g     F .text.code	00000048 mbedtls_rsa_pkcs1_decrypt
00009e44 g     F .text.itcm	00000004 fnet_htonl
60008cac g     F .text.code	0000000c mbedtls_des3_free
2000cb88 g     O .bss	00000004 _fnet_timer_api
60008cb8 g     F .text.code	0000001c mbedtls_des_key_set_parity
00008efc g     F .text.itcm	00000050 EthernetClient::write(unsigned char)
6001c3c0 g     F .text.code	00000006 mbedtls_ssl_conf_rng
0001b518  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
6006a400 g     O .text.csf	00000c00 hab_csf
6001024c g     F .text.code	0000003c mbedtls_oid_get_oid_by_pk_alg
60013234 g     F .text.code	00000080 mbedtls_rsa_export_crt
6001e8c8 g     F .text.code	00000340 mbedtls_ssl_prepare_handshake_record
20006f38 g     O .data	00000010 Serial
00021464 g     F .text.itcm	000000c4 __cxa_demangle
00009478 g     F .text.itcm	00000128 EthernetServer::poll(void*)
000170c4 g     F .text.itcm	00000066 IPAddress::fromString(char const*)
000227f4 g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
000240e0 g     F .text.itcm	00000020 __sseek
00022be8 g     F .text.itcm	00000018 calloc
0002b7f0 g     F .text.itcm	00000028 fiprintf
00017fb4  w    F .text.itcm	00000002 serialEvent2()
60021958 g     F .text.code	00000038 mbedtls_x509_crt_check_key_usage
2000a4dc g       .bss	00000000 _sbss
00023e7c g     F .text.itcm	00000076 _putc_r
600036fc g     F .text.code	000000c4 mbedtls_base64_self_test
000173fc  w    F .text.itcm	0000001c _write
00000370  w    F .text.itcm	00000026 Logic::~Logic()
00000110  w    F .text.itcm	00000016 websockets::network::Teensy41TcpClient::poll()
6002e400 g     O .text.progmem	00000004 mbedtls_test_cli_crt_ec_len
000193e8 g     F .text.itcm	00000004 pendablesrvreq_isr
60016aec g     F .text.code	00000088 mbedtls_sha256_update_ret
60016e0c g     F .text.code	00000004 mbedtls_sha256
600103e0 g     F .text.code	00000044 mbedtls_oid_get_md_alg
00013fd8 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePing(websockets::WebsocketsMessage)
0000e6ac g     F .text.itcm	0000003c _fnet_prot_release
6002b578 g     O .text.progmem	00000004 mbedtls_test_cli_key_rsa_len
2000c84c  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
6001173c g     F .text.code	000001c0 mbedtls_pkcs12_pbe
6001c7b4 g     F .text.code	00000040 mbedtls_ssl_conf_alpn_protocols
6000a4c8 g     F .text.code	00000048 mbedtls_ecdh_free
600316a0 g     O .text.progmem	00000030 mbedtls_sha224_info
60007b68 g     F .text.code	00000034 mbedtls_cipher_list
00014660 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
0001234c g     F .text.itcm	0000000c fnet_timer_get_ms
6000dd9c g     F .text.code	00000024 mbedtls_entropy_init
60033df9 g     O .text.progmem	00000001 _serialEvent2_default
6000ab98 g     F .text.code	00000020 mbedtls_ecdsa_write_signature_det
0000e62c g     F .text.itcm	00000024 _fnet_netif_get_by_scope_id
2000c870 g     O .bss	00000004 __atexit
00022744 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
600051dc g     F .text.code	00000368 mbedtls_mpi_exp_mod
0000aff4 g     F .text.itcm	00000006 fnet_dhcp_cln_is_enabled
6000456c g     F .text.code	0000004e mbedtls_mpi_add_mpi
6001ec08 g     F .text.code	000000c4 mbedtls_ssl_handle_message_type
6000ddc0 g     F .text.code	00000020 mbedtls_entropy_free
00000148  w    F .text.itcm	00000012 websockets::network::Teensy41TcpClient::close()
0001b45c g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
2000188c g     O .data	00000014 vtable for std::bad_alloc
60033e18  w    O .text.progmem	00000018 usb_string_manufacturer_name
00013b24  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
6001ef14 g     F .text.code	000000c4 mbedtls_ssl_dtls_replay_update
60018530 g     F .text.code	00000024 mbedtls_ssl_ciphersuite_from_id
0000e3bc g     F .text.itcm	0000001a fnet_netif_set_ip4_addr_type
0000ffec g     F .text.itcm	00000008 fnet_memset
6001c688 g     F .text.code	0000003c mbedtls_ssl_conf_dh_param_ctx
0000affc g     F .text.itcm	00000034 fnet_dhcp_cln_get_by_netif
00008cf8 g     F .text.itcm	00000034 EthernetClient::stop()
6001e64c g     F .text.code	00000030 mbedtls_ssl_read_version
60013ea8 g     F .text.code	000001c4 mbedtls_rsa_rsassa_pss_sign
6002010c g     F .text.code	00000130 mbedtls_ssl_parse_finished
0001a4cc g     F .text.itcm	0000002e __cxa_allocate_exception
00000dfc  w    F .text.itcm	000000ac ArduinoJson::V701PB2::detail::ResourceManager::~ResourceManager()
00014040 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handleClose(websockets::WebsocketsMessage)
00022884 g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
00023a4c g     F .text.itcm	000002f4 __sfvwrite_r
000181ac g     F .text.itcm	00000004 Panic_Temp_isr
00009d64 g     F .text.itcm	00000058 EthernetClass::socketSendAvailable(unsigned char)
00017fc0  w    F .text.itcm	00000002 serialEvent5()
20200004 g     O .bss.dma	00000004 EthernetClass::socket_buf_receive
0000ec70 g     F .text.itcm	000000e0 _fnet_socket_lookup
0000e5f8 g     F .text.itcm	00000034 fnet_netif_get_by_scope_id
00013f94 g     F .text.itcm	00000042 websockets::WebsocketsClient::send(char const*)
6001eccc g     F .text.code	000001c4 mbedtls_ssl_fetch_input
200017b8 g     O .data	00000010 vtable for websockets::internals::WebsocketsEndpoint
0000fe38 g     F .text.itcm	0000000e fnet_poll
00014f50 g     F .text.itcm	000000e4 websockets::internals::WebsocketsEndpoint::handleMessageInternally(websockets::WebsocketsMessage&)
6000ece8 g     F .text.code	00000004 mbedtls_hmac_drbg_set_entropy_len
6000b988 g     F .text.code	0000008e mbedtls_ecp_group_free
6001c388 g     F .text.code	0000000e mbedtls_ssl_conf_endpoint
000173e0 g     F .text.itcm	0000001c Print::println()
0001940c g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
00014a30 g     F .text.itcm	000000f8 websockets::internals::readData[abi:cxx11](websockets::network::TcpClient&, unsigned long long)
6000c1d0 g     F .text.code	00000048 mbedtls_ecp_tls_write_group
000001a4  w    F .text.itcm	00000054 websockets::network::Teensy41TcpClient::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00017520 g     F .text.itcm	00000026 String::String(char const*)
0000cc5c g     F .text.itcm	00000014 _fnet_ip4_multicast_leave_entry
000227cc g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
6001072c g     F .text.code	0000000a mbedtls_pem_init
0000e468 g     F .text.itcm	000000b4 _fnet_netif_init
6000334c g     F .text.code	00000050 mbedtls_asn1_write_octet_string
2000c7f8 g     O .bss	00000004 EthernetClass::socket_ptr
6000b8a0 g     F .text.code	00000020 mbedtls_ecp_curve_info_from_grp_id
00019990 g     F .text.itcm	0000004c sm_align_pool
6001c824 g     F .text.code	0000000e mbedtls_ssl_conf_encrypt_then_mac
00014610 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
0000e3d8 g     F .text.itcm	00000030 _fnet_netif_get_hw_addr
6000c844 g     F .text.code	00000090 mbedtls_ecp_muladd
6000f5fc g     F .text.code	00000014 mbedtls_md_process
0000c2c0 g     F .text.itcm	00000094 _fnet_eth_output_ip4
000293fc g     F .text.itcm	00000f8c _vfiprintf_r
00019220 g     F .text.itcm	00000094 usb_serial_flush_output
00022bb8 g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
6000ed88 g     F .text.code	0000004a mbedtls_hmac_drbg_seed_buf
600226c8 g     F .text.code	0000010c mbedtls_x509_crt_parse
0000c8c0 g     F .text.itcm	00000004 fnet_inet_aton
6001c430 g     F .text.code	00000008 mbedtls_ssl_conf_session_cache
00008678 g     F .text.itcm	00000254 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)
6001c60c g     F .text.code	00000040 mbedtls_ssl_conf_dh_param
0000e6e8 g     F .text.itcm	0000005c _fnet_prot_find
6001c94c g     F .text.code	00000010 mbedtls_ssl_get_ciphersuite
00023948 g     F .text.itcm	00000064 fputc
2000149c g     O .data	00000008 typeinfo for std::type_info
60020024 g     F .text.code	000000e8 mbedtls_ssl_parse_change_cipher_spec
00018abc g     F .text.itcm	00000028 usb_transmit
00012314 g     F .text.itcm	0000001c _fnet_timer_init
2000d368 g     O .bss	0000000c resetButton
00008c44 g     F .text.itcm	00000006 EthernetClient::close()
60003084 g     F .text.code	0000003c mbedtls_asn1_write_null
600227dc  w    F .text.code	00000002 startup_late_hook
600203e0 g     F .text.code	0000012c mbedtls_x509_dn_gets
600185c0 g     F .text.code	00000024 mbedtls_ssl_get_ciphersuite_name
00023f04 g     F .text.itcm	000000a0 _puts_r
00022860 g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
0000d480 g     F .text.itcm	00000066 _fnet_ip4_getsockopt
20002a3c g     O .data	00000006 fnet_eth_broadcast
6000bffc g     F .text.code	000000a4 mbedtls_ecp_point_write_binary
6001e578 g     F .text.code	00000020 mbedtls_ssl_check_sig_hash
00025bb4 g     F .text.itcm	0000001a __ascii_wctomb
0000c1e4 g     F .text.itcm	00000070 _fnet_eth_output
000001f8  w    F .text.itcm	00000006 ArduinoJson::V701PB2::detail::DefaultAllocator::allocate(unsigned int)
600184a0 g     F .text.code	00000060 mbedtls_ssl_list_ciphersuites
60012f00 g     F .text.code	00000124 mbedtls_rsa_complete
00015cb0  w    F .text.itcm	000000b0 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
600316d0 g     O .text.progmem	00000030 mbedtls_sha1_info
600140ac g     F .text.code	000000ec mbedtls_rsa_rsassa_pkcs1_v15_verify
2000d692 g     O .bss	00000001 usb_configuration
00015a80 g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
600182bc g     F .text.code	00000014 mbedtls_ssl_cache_init
000189c4 g     F .text.itcm	00000064 usb_config_rx
6001c6d4 g     F .text.code	00000088 mbedtls_ssl_set_hostname
0000cb8c g     F .text.itcm	00000038 _fnet_ip4_input
6001e4ec g     F .text.code	00000010 mbedtls_ssl_md_alg_from_hash
00000dfc  w    F .text.itcm	000000ac ArduinoJson::V701PB2::detail::ResourceManager::~ResourceManager()
600162a0 g     F .text.code	00000008 mbedtls_sha256_init
6001406c g     F .text.code	00000040 mbedtls_rsa_pkcs1_sign
60010d7c g     F .text.code	00000018 mbedtls_pk_info_from_type
60020e0c g     F .text.code	000000c0 mbedtls_x509_sig_alg_gets
2000d664 g     O .bss	00000008 usb_cdc_line_coding
0000b030 g     F .text.itcm	00000030 fnet_dhcp_cln_get_options
6001c3e4 g     F .text.code	0000001c mbedtls_ssl_set_timer_cb
00017f44 g     F .text.itcm	00000004 operator delete(void*)
00021928 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00022bde g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
0001a2d4 g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
2000ca0c g     O .bss	00000001 __lock___sfp_recursive_mutex
0001ae48 g     F .text.itcm	00000014 std::terminate()
6000c218 g     F .text.code	00000578 mbedtls_ecp_mul
60021a28 g     F .text.code	00000418 mbedtls_x509_crt_verify_with_profile
600101c4 g     F .text.code	00000044 mbedtls_oid_get_attr_short_name
00017f40 g     F .text.itcm	00000004 operator new[](unsigned int)
60007bc4 g     F .text.code	00000024 mbedtls_cipher_info_from_type
2000c808 g     O .bss	00000008 EthernetClass::_dnsServerAddress
6000339c g     F .text.code	000000a6 mbedtls_asn1_store_named_data
60002b50 g     F .text.code	00000060 mbedtls_asn1_get_int
0001732c g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
600186f0 g     F .text.code	000018a0 mbedtls_ssl_handshake_client_step
0000bbb4 g     F .text.itcm	00000060 _fnet_arp_init
60009504 g     F .text.code	00000308 mbedtls_des_setkey
60004680 g     F .text.code	00000070 mbedtls_mpi_sub_int
6000a080 g     F .text.code	000001f4 mbedtls_dhm_calc_secret
0000b60c g     F .text.itcm	00000054 fnet_link_init
000195b8 g     F .text.itcm	000000d8 HardwareSerial::write9bit(unsigned long)
0000e094 g     F .text.itcm	0000000c _fnet_malloc_max_netbuf
60005544 g     F .text.code	00000042 mbedtls_mpi_fill_random
6002ccc0 g     O .text.progmem	000006f6 mbedtls_test_ca_key_rsa
000002b0  w    F .text.itcm	000000a4 websockets::network::Teensy41TcpServer::accept()
6002a7d0 g     O .text.progmem	00000da7 mbedtls_test_cas_pem
60020aec g     F .text.code	00000278 mbedtls_x509_get_time
00013c48 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
0000b5b4 g     F .text.itcm	0000001c _fnet_service_init
0001747c g     F .text.itcm	0000002a String::String(String&&)
000000b4  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
6000fe68 g     F .text.code	00000004 mbedtls_md5_process
00008bb8  w    F .text.itcm	00000014 EthernetClient::remoteIP()
00017b20 g     F .text.itcm	000000ec eepromemu_flash_write
60016180 g     F .text.code	00000120 mbedtls_sha1_self_test
6000a510 g     F .text.code	00000078 mbedtls_ecdh_make_params
00024100 g     F .text.itcm	00000008 __sclose
600066e0 g     F .text.code	0000000a mbedtls_camellia_init
20007868 g     O .data	00000024 fnet_icmp4_prot_if
00014d5c g     F .text.itcm	0000010c websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool, bool, char const*)
0000d6d8 g     F .text.itcm	00000010 fnet_isr_lock
0001afe4 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6001dfe0 g     F .text.code	00000030 mbedtls_ssl_send_fatal_handshake_failure
000227f4 g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
000190a0 g     F .text.itcm	00000044 usb_serial_peekchar
6001c888 g     F .text.code	0000000e mbedtls_ssl_conf_truncated_hmac
6002ecf0 g     O .text.progmem	00000373 mbedtls_test_ca_crt_ec
00008614  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
20001668 g     O .data	00000020 vtable for EthernetServer
00019fe4  w    F .text.itcm	00000042 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
00000090  w    F .text.itcm	00000022 websockets::network::Teensy41TcpClient::send(unsigned char const*, unsigned long)
6000f284 g     F .text.code	00000036 mbedtls_md_free
0000b83c g     F .text.itcm	00000066 fnet_tls_set_own_certificate
0001a6d4 g     F .text.itcm	0000007c __cxa_begin_catch
600066ec g     F .text.code	0000000c mbedtls_camellia_free
60031d50 g     O .text.progmem	00000030 mbedtls_eckeydh_info
00012330 g     F .text.itcm	0000001c _fnet_timer_release
2020000c g     O .bss.dma	00000004 EthernetClass::socket_port
0001942c g     F .text.itcm	00000026 HardwareSerial::available()
6001c95c g     F .text.code	00000048 mbedtls_ssl_get_version
20007a18 g     O .data	00000004 mbedtls_test_cli_crt
00000ea8  w    F .text.itcm	00000052 ArduinoJson::V701PB2::detail::VariantData::getElement(unsigned int, ArduinoJson::V701PB2::detail::ResourceManager const*) const
600030c0 g     F .text.code	00000050 mbedtls_asn1_write_oid
600110b8 g     F .text.code	0000000a mbedtls_pk_get_type
0000e0c0 g     F .text.itcm	00000024 _fnet_malloc_zero
2000722c g     O .data	0000016c __global_locale
6002e744 g     O .text.progmem	00000004 mbedtls_test_srv_key_ec_len
0000f634 g     F .text.itcm	00000012 fnet_socket_recv
000173c8 g     F .text.itcm	00000016 Print::print(long)
000039b8  w    F .text.itcm	000005d0 ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::StaticStringWriter>::result_type ArduinoJson::V701PB2::detail::VariantData::accept<ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::StaticStringWriter> >(ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::StaticStringWriter>&) const
000123f0 g     F .text.itcm	00000020 _fnet_timer_free
00019db8 g     F .text.itcm	0000000c std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
60002ff8 g     F .text.code	0000008a mbedtls_asn1_write_mpi
6000f3d8 g     F .text.code	0000001c mbedtls_md
00008d2c g     F .text.itcm	000000c4 EthernetClient::connect(IPAddress, unsigned short)
00019d98 g     F .text.itcm	00000020 std::__throw_bad_function_call()
00023a34 g     F .text.itcm	00000018 fputs
6000c9ec g     F .text.code	0000001a mbedtls_ecp_gen_keypair
00021564 g     F .text.itcm	0000001e __cxa_call_terminate
60016d2c g     F .text.code	000000e0 mbedtls_sha256_ret
00024b98 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
00018b68  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
000226fc g     F .text.itcm	00000018 .hidden restore_core_regs
60021f48 g     F .text.code	00000780 mbedtls_x509_crt_parse_der
0000dc84 g     F .text.itcm	0000006a _fnet_netbuf_to_buf
60023038 g       .text.code	00000000 __init_array_start
0001a4fc g     F .text.itcm	00000020 __cxa_free_exception
0000b5d0 g     F .text.itcm	0000000c fnet_service_mutex_lock
60031700 g     O .text.progmem	00000030 mbedtls_md5_info
00022c00 g     F .text.itcm	00000078 _calloc_r
6000bf98 g     F .text.code	00000034 mbedtls_ecp_point_cmp
00008520 g     F .text.itcm	0000003e DNSClient::fnet_dns_callback(fnet_dns_resolved_addr_t const*, unsigned long, char const*, void*)
60011510 g     F .text.code	0000022c mbedtls_pkcs12_derivation
60010468 g     F .text.code	00000044 mbedtls_oid_get_extended_key_usage
60008744 g     F .text.code	00000004 mbedtls_ctr_drbg_set_reseed_interval
60008c94 g     F .text.code	0000000a mbedtls_des_free
60033f07  w    O .text.progmem	00000001 _serialEventUSB1_default
0000ebec g     F .text.itcm	00000082 _fnet_socket_conflict
0000c10c g     F .text.itcm	0000002e _fnet_checksum_pseudo_netbuf_end
0000e30c g     F .text.itcm	00000018 fnet_netif_set_ip4_gateway
6000b908 g     F .text.code	00000020 mbedtls_ecp_point_init
6001c8b8 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation
6000fcf8 g     F .text.code	00000088 mbedtls_md5_update_ret
00019d7c g     F .text.itcm	0000001c std::bad_function_call::~bad_function_call()
2000c800 g     O .bss	00000004 EthernetClass::stack_heap_ptr
00019d60 g     F .text.itcm	00000008 std::bad_function_call::what() const
60003ee8 g     F .text.code	0000006a mbedtls_mpi_bitlen
000226fc g     F .text.itcm	00000018 .hidden __restore_core_regs
00008bd0  w    F .text.itcm	00000004 EthernetClient::localPort()
0000f454 g     F .text.itcm	000000ec fnet_socket_sendto
00022900 g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
6001c8f0 g     F .text.code	0000003c mbedtls_ssl_check_pending
20200014 g     O .bss.dma	00000004 EthernetClass::socket_buf_index
20007ec0 g     O NonCacheable	00000000 .hidden __TMC_END__
20001474 g     O .data	0000000c typeinfo for std::bad_function_call
6002e834 g     O .text.progmem	00000004 mbedtls_test_srv_crt_ec_len
0000e368 g     F .text.itcm	0000001a fnet_netif_get_ip4_addr
6000f2bc g     F .text.code	0000004c mbedtls_md_init_ctx
60012e20 g     F .text.code	0000006c mbedtls_rsa_import
200015b0  w    O .data	00000018 typeinfo name for std::_Sp_make_shared_tag
6000ef6c g     F .text.code	00000012 mbedtls_hmac_drbg_random
6000ba48 g     F .text.code	0000002e mbedtls_ecp_copy
00021ffc g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
6001c604 g     F .text.code	00000006 mbedtls_ssl_conf_psk_cb
00005b48  w    F .text.itcm	0000005c ArduinoJson::V701PB2::JsonDocument::JsonDocument(ArduinoJson::V701PB2::JsonDocument const&)
000163b8 g     F .text.itcm	00000834 websockets::WebsocketsServer::accept()
60002570 g     F .text.code	00000004 mbedtls_aes_encrypt
600046f0 g     F .text.code	00000116 mbedtls_mpi_mul_mpi
0000c910 g     F .text.itcm	00000036 _fnet_ip_queue_read
60003b08 g     F .text.code	00000026 mbedtls_mpi_free
6002ddf4 g     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa
00022818 g     F .text.itcm	00000022 .hidden ___Unwind_Resume
0002563c g     F .text.itcm	0000015c __multiply
6000bfcc g     F .text.code	0000002e mbedtls_ecp_point_read_string
00025798 g     F .text.itcm	000000c0 __pow5mult
00018ed4 g     F .text.itcm	000000ec usb_serial_configure
6001e368 g     F .text.code	00000030 mbedtls_ssl_optimize_checksum
2000c824 g     O .bss	00000004 EventResponder::firstInterrupt
000191b8 g     F .text.itcm	00000018 usb_serial_write
00017c0c g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
0000e2c0 g     F .text.itcm	0000002c fnet_netif_is_initialized
60033dfc g     O .text.progmem	00000001 _serialEvent5_default
00000006 g       *ABS*	00000000 _itcm_block_count
60007b9c g     F .text.code	00000028 mbedtls_cipher_info_from_string
60002ec0 g     F .text.code	000000e6 mbedtls_asn1_write_len
0000c290 g     F .text.itcm	0000002e _fnet_eth_change_addr_notify
0001ae64 g     F .text.itcm	00000014 std::unexpected()
00013ba8  w    F .text.itcm	00000024 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
000231f8 g     F .text.itcm	0000000c __malloc_lock
000237ac g     F .text.itcm	0000001c isupper
200026c8 g     O .data	00000370 digital_pin_to_info_PGM
00017cc4 g     F .text.itcm	00000134 eeprom_write_byte
6000ecdc g     F .text.code	00000008 mbedtls_hmac_drbg_init
200016d4 g     O .data	0000000c vtable for IPAddress
0001796c g     F .text.itcm	00000024 digitalRead
00003558  w    F .text.itcm	000001cc ArduinoJson::V701PB2::detail::FloatParts<double>::FloatParts(double)
20001870  w    O .data	0000001c vtable for std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>
600129fc g     F .text.code	00000138 mbedtls_pk_parse_public_key
0000b900 g     F .text.itcm	00000062 fnet_tls_release
6000ecec g     F .text.code	00000004 mbedtls_hmac_drbg_set_reseed_interval
6001c6cc g     F .text.code	00000004 mbedtls_ssl_conf_curves
60031db0 g     O .text.progmem	00000030 mbedtls_rsa_info
00021a2c g     F .text.itcm	000002c8 .hidden __udivmoddi4
6000ca38 g     F .text.code	000000e0 mbedtls_ecp_check_pub_priv
60033f0c g       *ABS*	00000000 _stextload
000100f0 g     F .text.itcm	00000024 fnet_rand
60010738 g     F .text.code	00000514 mbedtls_pem_read_buffer
0000c0bc g     F .text.itcm	0000001e _fnet_checksum_netbuf
0000fbb0 g     F .text.itcm	00000024 fnet_socket_addr_are_equal
0001707c g     F .text.itcm	00000048 IPAddress::printTo(Print&) const
00017fbc  w    F .text.itcm	00000002 serialEvent4()
0001b238 g     F .text.itcm	00000004 std::runtime_error::what() const
60013a78 g     F .text.code	00000150 mbedtls_rsa_rsaes_pkcs1_v15_decrypt
0000e980 g     F .text.itcm	00000184 _fnet_raw_input
00022c88 g     F .text.itcm	00000010 free
600218bc g     F .text.code	0000009c mbedtls_x509_crt_verify_info
00013db4 g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6000a588 g     F .text.code	00000028 mbedtls_ecdh_read_params
00009418  w    F .text.itcm	00000002 Print::flush()
6001c3b8 g     F .text.code	00000006 mbedtls_ssl_conf_verify
6001c400 g     F .text.code	00000008 mbedtls_ssl_conf_session_tickets_cb
20007834 g     O .data	00000034 fnet_fec0_if
2000b830 g     O .bss	00000048 Logic
0001b33c g     F .text.itcm	00000048 std::logic_error::~logic_error()
0001a7dc g     F .text.itcm	00000002 std::exception::~exception()
6000c8d4 g     F .text.code	00000038 mbedtls_ecp_check_pubkey
60016004 g     F .text.code	000000c8 mbedtls_sha1_finish_ret
00008568 g     F .text.itcm	00000098 DNSClient::getHostByName(char const*, IPAddress&, unsigned short)
20200010 g     O .bss.dma	00000004 EthernetClass::socket_addr
00025580 g     F .text.itcm	00000060 __lo0bits
6002eb80 g     O .text.progmem	0000016a mbedtls_test_ca_key_ec
6000f4f8 g     F .text.code	00000060 mbedtls_md_hmac_finish
600160cc g     F .text.code	0000003c mbedtls_sha1_starts
0002168c g     F .text.itcm	0000027a .hidden __subdf3
60009fc0 g     F .text.code	000000c0 mbedtls_dhm_make_public
600162c0 g     F .text.code	000000a4 mbedtls_sha256_starts_ret
0001b238 g     F .text.itcm	00000004 std::logic_error::what() const
60033e98 g     O .text.progmem	00000062 usb_config_descriptor_480
0000ba64 g     F .text.itcm	00000042 fnet_tls_socket_send
0001a2c0 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
0000941c g     F .text.itcm	0000001c EthernetServer::write(unsigned char)
60003d58 g     F .text.code	00000084 mbedtls_mpi_safe_cond_swap
00000488  w    F .text.itcm	0000004a VideoHub::~VideoHub()
20002a4c g     O .data	00000038 fnet_fec_api
6000a5fc g     F .text.code	00000054 mbedtls_ecdh_make_public
60004e88 g     F .text.code	00000094 mbedtls_mpi_mod_mpi
00021690 g     F .text.itcm	00000276 .hidden __adddf3
60014198 g     F .text.code	000001cc mbedtls_rsa_rsassa_pss_verify_ext
6000a3dc g     F .text.code	00000078 mbedtls_dhm_self_test
0002a600 g     F .text.itcm	00000054 _fflush_r
6000df08 g     F .text.code	0000023c mbedtls_entropy_self_test
6000c178 g     F .text.code	00000058 mbedtls_ecp_tls_read_group
000192b4  w    F .text.itcm	000000f0 yield
6001cd58 g     F .text.code	00000006 mbedtls_ssl_sig_hash_set_const_hash
60014d30 g     F .text.code	0000007c mbedtls_rsa_deduce_crt
0001af74 g     F .text.itcm	0000006e __cxa_rethrow
000129b0  w    F .text.itcm	00000e04 websockets::crypto::internals::sha1::process_block(unsigned char const*)
6001c9f0 g     F .text.code	00000044 mbedtls_ssl_get_max_frag_len
6001035c g     F .text.code	00000044 mbedtls_oid_get_sig_alg_desc
00009438 g     F .text.itcm	00000040 EthernetServer::operator bool()
000174a8 g     F .text.itcm	0000000e String::~String()
00024f40 g     F .text.itcm	00000000 memchr
0000b060 g     F .text.itcm	00000010 fnet_dhcp_cln_set_response_timeout
6001ccf8 g     F .text.code	00000008 mbedtls_ssl_session_init
20006f30 g     O .data	00000004 F_BUS_ACTUAL
0000916c  w    F .text.itcm	00000050 EthernetClient::operator bool()
0002200c g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
2000720c g     O .data	00000008 EthernetClass::_fnet_poll
6000bf84 g     F .text.code	00000012 mbedtls_ecp_is_zero
200014e8 g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
60033e00 g     O .text.progmem	00000016 usb_string_product_name_default
00017f48 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0002407c g     F .text.itcm	00000022 __sread
00009c9c g     F .text.itcm	00000014 EthernetClass::socketDisconnect(unsigned char)
600227d8 g     F .text.code	00000002 startup_default_middle_hook
60008ca0 g     F .text.code	0000000a mbedtls_des3_init
600162b4 g     F .text.code	0000000a mbedtls_sha256_clone
6000e7e0 g     F .text.code	000004dc mbedtls_gcm_self_test
6000c148 g     F .text.code	00000030 mbedtls_ecp_tls_write_point
6000821c g     F .text.code	00000074 mbedtls_cipher_auth_encrypt
20007ec0 g       .data	00000000 _edata
60005040 g     F .text.code	00000134 mbedtls_mpi_write_string
0000e650 g     F .text.itcm	0000005c _fnet_prot_init
6001e4fc g     F .text.code	00000010 mbedtls_ssl_hash_from_md_alg
60020db0 g     F .text.code	0000005c mbedtls_x509_get_ext
00017fb0  w    F .text.itcm	00000002 serialEvent1()
00013b0c g     F .text.itcm	00000018 websockets::messageTypeFromOpcode(unsigned char)
200017c8  w    O .data	00000014 vtable for ArduinoJson::V701PB2::detail::DefaultAllocator
0001b414 g     F .text.itcm	00000048 std::length_error::~length_error()
000227e0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
2000d3b8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000ba20 g     F .text.itcm	00000042 fnet_tls_socket_recv
6001c3c8 g     F .text.code	00000006 mbedtls_ssl_conf_dbg
6000f1c0 g     F .text.code	000000a0 mbedtls_md_info_from_string
00023fa4 g     F .text.itcm	00000010 puts
60033dfa g     O .text.progmem	00000001 _serialEvent3_default
00024b48 g     F .text.itcm	00000048 __libc_init_array
00018150  w    F .text.itcm	00000034 _sbrk
60014364 g     F .text.code	00000032 mbedtls_rsa_rsassa_pss_verify
600162a8 g     F .text.code	0000000a mbedtls_sha256_free
6001ee90 g     F .text.code	00000084 mbedtls_ssl_dtls_replay_check
00022074 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
6000ecf0 g     F .text.code	00000098 mbedtls_hmac_drbg_update
20002b34 g     O .data	00000004 mbedtls_test_srv_key_len
600219f0 g     F .text.code	00000038 mbedtls_x509_crt_is_revoked
00024a94 g     F .text.itcm	0000002c _lseek_r
2000d687 g     O .bss	00000001 _fnet_is_enabled
60007754 g     F .text.code	00000068 mbedtls_ccm_star_auth_decrypt
60016c7c g     F .text.code	000000a4 mbedtls_sha256_starts
6001610c g     F .text.code	00000004 mbedtls_sha1_finish
60004808 g     F .text.code	000001bc mbedtls_mpi_read_string
00022818 g     F .text.itcm	00000022 .hidden _Unwind_Resume
0000d644 g     F .text.itcm	00000038 fnet_event_init
00017fcc  w    F .text.itcm	00000002 serialEvent8()
6001617c g     F .text.code	00000004 mbedtls_sha1
00003f88  w    F .text.itcm	0000141c Network::pollWebSocketServer()
600041bc g     F .text.code	0000007c mbedtls_mpi_cmp_abs
60002d5c g     F .text.code	000000b8 mbedtls_asn1_get_alg
00018394 g     F .text.itcm	00000630 usb_isr
00021928 g     F .text.itcm	00000022 .hidden __floatsidf
20001534 g     O .data	00000010 typeinfo name for std::logic_error
0001a7ec g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
60017f1c g     F .text.code	000000fc mbedtls_sha512_starts
600081c8 g     F .text.code	00000054 mbedtls_cipher_crypt
0001b100 g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
0000daf8 g     F .text.itcm	0000016c _fnet_netbuf_copy
6000ee48 g     F .text.code	0000006e mbedtls_hmac_drbg_seed
60003110 g     F .text.code	00000068 mbedtls_asn1_write_algorithm_identifier
6000f354 g     F .text.code	00000030 mbedtls_md_clone
000199dc g     F .text.itcm	00000084 sm_set_pool
0001b2bc g     F .text.itcm	00000040 std::out_of_range::~out_of_range()
6000fd80 g     F .text.code	000000b0 mbedtls_md5_finish_ret
0000d874 g     F .text.itcm	00000074 _fnet_mempool_malloc
00013b28  w    F .text.itcm	00000020 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0001ae78 g     F .text.itcm	00000010 std::get_terminate()
60017038 g     F .text.code	00000108 mbedtls_sha512_starts_ret
60007694 g     F .text.code	00000048 mbedtls_ccm_setkey
0001a2f0 g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
60008748 g     F .text.code	0000008a mbedtls_ctr_drbg_reseed
60006edc g     F .text.code	00000060 mbedtls_camellia_crypt_ctr
0000e384 g     F .text.itcm	0000001a fnet_netif_get_ip4_dns
60008c3c g     F .text.code	0000004e mbedtls_ctr_drbg_seed_entropy_len
60001624 g     F .text.code	00000030 ResetHandler
0001b4f0 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
00009dbc g     F .text.itcm	00000080 EthernetClass::socketSend(unsigned char, unsigned char const*, unsigned short)
0000fa0c g     F .text.itcm	0000003a _fnet_socket_buffer_append_record
0001a330 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
20001738 g     O .data	00000010 vtable for websockets::WebsocketsClient
00016bec g     F .text.itcm	00000064 websockets::internals::fromInterfaceString[abi:cxx11](String const&&)
6005fdf0 g       *ABS*	00000000 _sdataload
0001916c g     F .text.itcm	00000020 usb_serial_getchar
600104e8 g     F .text.code	00000044 mbedtls_oid_get_cipher_alg
0000e078 g     F .text.itcm	0000001c _fnet_heap_init
00019f74  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0000171c  w    F .text.itcm	00000110 Settings::Settings()
6001cd28 g     F .text.code	00000014 mbedtls_ssl_sig_hash_set_find
00019d30 g     F .text.itcm	00000030 std::__throw_out_of_range(char const*)
2000c828 g     O .bss	00000004 EventResponder::lastYield
6000ac84 g     F .text.code	0000003c mbedtls_ecdsa_from_keypair
0001595c g     F .text.itcm	000000cc websockets::internals::WebsocketsEndpoint::recv()
0002403c g     F .text.itcm	00000040 sprintf
0001a544 g     F .text.itcm	00000000 __cxa_end_cleanup
0000e35c g     F .text.itcm	0000000c _fnet_netif_get_default
600150cc g     F .text.code	00000048 mbedtls_sha1_starts_ret
6001c6d0 g     F .text.code	00000004 mbedtls_ssl_conf_sig_hashes
00009d48 g     F .text.itcm	0000001c EthernetClass::socketPeek(unsigned char)
6001d440 g     F .text.code	00000460 mbedtls_ssl_derive_keys
0001b0f8 g     F .text.itcm	00000002 std::type_info::~type_info()
0000e744 g     F .text.itcm	00000038 _fnet_prot_drain
00017e08 g     F .text.itcm	00000134 memcpy
60010308 g     F .text.code	00000054 mbedtls_oid_get_sig_alg
60033dfe g     O .text.progmem	00000001 _serialEvent7_default
6001e15c g     F .text.code	00000090 mbedtls_ssl_write
0000d478 g     F .text.itcm	00000006 _fnet_ip4_maximum_packet
00018b60  w    F .text.itcm	00000004 usb_serial_class::peek()
0000cbc4 g     F .text.itcm	0000003c _fnet_ip4_drain
0001b0cc g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010000 g     F .text.itcm	00000026 fnet_memcmp
0001aee4 g     F .text.itcm	00000058 __cxa_init_primary_exception
0001ae88 g     F .text.itcm	00000010 std::get_unexpected()
0000fbd4 g     F .text.itcm	00000018 _fnet_socket_addr_copy
6001cd94 g     F .text.code	000000a0 mbedtls_ssl_handshake_free
6000eeb8 g     F .text.code	000000b4 mbedtls_hmac_drbg_random_with_add
60003ea8 g     F .text.code	0000003e mbedtls_mpi_lsb
000174b8 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20001450 g     O .data	0000000c typeinfo for std::out_of_range
60018150 g     F .text.code	00000004 mbedtls_sha512
0000fe48 g     F .text.itcm	0000001c _fnet_mutex_init
00023204 g     F .text.itcm	0000000c __malloc_unlock
0001b590  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
0001a3a4 g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000099f8 g     F .text.itcm	00000080 EthernetClass::socketStatus(unsigned char)
6001c494 g     F .text.code	0000003c mbedtls_ssl_conf_own_cert
00008e0c g     F .text.itcm	00000034 EthernetClient::flush()
60020814 g     F .text.code	00000010 mbedtls_x509_get_alg_null
00022108 g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
00021690 g     F .text.itcm	00000276 .hidden __aeabi_dadd
00017fc8  w    F .text.itcm	00000002 serialEvent7()
60007cf0 g     F .text.code	0000008c mbedtls_cipher_set_padding_mode
00000cd4  w    F .text.itcm	00000128 websockets::network::Teensy41TcpClient::readLine[abi:cxx11]()
000219a0 g     F .text.itcm	0000005a .hidden __aeabi_l2d
6001c8d8 g     F .text.code	00000006 mbedtls_ssl_conf_renegotiation_enforced
60003ddc g     F .text.code	0000005e mbedtls_mpi_lset
600077bc g     F .text.code	00000018 mbedtls_ccm_auth_decrypt
60016b74 g     F .text.code	00000108 mbedtls_sha256_finish_ret
00015a30  w    F .text.itcm	0000000e std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
00025000 g     F .text.itcm	000000dc strlen
00013d0c g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
000053a4 g     F .text.itcm	0000005c loop
60022f28 g     F .text.code	00000054 analog_init
6001c48c g     F .text.code	00000006 mbedtls_ssl_conf_ca_chain
0001b12c g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
60017140 g     F .text.code	00000b00 mbedtls_internal_sha512_process
6002ccbc g     O .text.progmem	00000004 mbedtls_test_ca_key_rsa_len
20002b28 g     O .data	00000004 mbedtls_test_ca_crt_len
6001c488 g     F .text.code	00000004 mbedtls_ssl_conf_cert_profile
00013e8c g     F .text.itcm	00000060 websockets::WebsocketsClient::onMessage(std::function<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage)>)
00025540 g     F .text.itcm	00000040 __hi0bits
2000bba0 g     O .bss	0000007c Settings
00008bb0  w    F .text.itcm	00000006 EthernetClient::connectPoll(bool)
60004414 g     F .text.code	000000c2 mbedtls_mpi_add_abs
00023784 g     F .text.itcm	0000001c strtol
000000ec  w    F .text.itcm	0000000e websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
00010098 g     F .text.itcm	00000056 fnet_strtok_r
60001654 g     F .text.code	0000000a mbedtls_aes_init
0002b918 g     F .text.itcm	00000106 _wcsnrtombs_l
600227dc g     F .text.code	00000002 startup_default_late_hook
00022714 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
6000f278 g     F .text.code	0000000a mbedtls_md_init
0000bf28 g     F .text.itcm	00000028 _fnet_arp_drain
600126b4 g     F .text.code	00000258 mbedtls_pk_parse_key
600138f4 g     F .text.code	00000140 mbedtls_rsa_rsaes_oaep_encrypt
0000eb7c g     F .text.itcm	0000006e _fnet_socket_release
0000d790 g     F .text.itcm	00000014 fnet_isr_init
60001ecc g     F .text.code	00000086 mbedtls_aes_crypt_cfb8
60020600 g     F .text.code	00000108 mbedtls_x509_self_test
00019690 g     F .text.itcm	00000004 HardwareSerial::write(unsigned char)
200079cc g     O .data	00000024 fnet_tcp_prot_if
60003178 g     F .text.code	00000058 mbedtls_asn1_write_bool
600031d0 g     F .text.code	00000066 mbedtls_asn1_write_int
0001a218  w    F .text.itcm	00000072 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0000b2a0 g     F .text.itcm	000000a0 _fnet_dns_get_rr_name
2000721c  w    O .data	00000004 websockets::crypto::internals::sha1::print_base64(char*, bool) const::table
0000e33c g     F .text.itcm	00000020 fnet_netif_get_default
600098b0 g     F .text.code	0000001e mbedtls_des3_set2key_enc
0000ee34 g     F .text.itcm	000000fc fnet_socket
00000194  w    F .text.itcm	00000010 websockets::network::Teensy41TcpClient::available()
0000be78 g     F .text.itcm	00000090 _fnet_arp_resolve
6001c410 g     F .text.code	0000000e mbedtls_ssl_conf_dtls_anti_replay
60031640 g     O .text.progmem	00000030 mbedtls_sha384_info
0000c254 g     F .text.itcm	00000024 _fnet_eth_init
60031670 g     O .text.progmem	00000030 mbedtls_sha256_info
00005400  w    F .text.itcm	00000190 ArduinoJson::V701PB2::detail::JsonSerializer<ArduinoJson::V701PB2::detail::StaticStringWriter>::visit(ArduinoJson::V701PB2::detail::ObjectData const&)
0000ef30 g     F .text.itcm	0000016c fnet_socket_connect
6001c3dc g     F .text.code	00000006 mbedtls_ssl_conf_read_timeout
000010f8  w    F .text.itcm	00000218 ArduinoJson::V701PB2::detail::CollectionData::addSlot(ArduinoJson::V701PB2::detail::ResourceManager*)
0000ca5c g     F .text.itcm	00000058 _fnet_ip4_init
6001a240 g     F .text.code	00000048 mbedtls_ssl_set_client_transport_id
6000768c g     F .text.code	00000008 mbedtls_ccm_init
600205f8 g     F .text.code	00000004 mbedtls_x509_time_is_past
6000fecc g     F .text.code	00000004 mbedtls_md5
0000e2ec g     F .text.itcm	00000020 fnet_netif_set_ip4_addr
6000a680 g     F .text.code	00000064 mbedtls_ecdh_calc_secret
00008620 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_unlock(void**)
60018594 g     F .text.code	0000001c mbedtls_ssl_ciphersuite_uses_ec
00019b08 g     F .text.itcm	00000178 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
2000ce24 g     O .bss	00000010 extmem_smalloc_pool
20050000 g       .text.csf	00000000 _estack
000190fc g     F .text.itcm	00000070 usb_serial_flush_input
0002a898 g     F .text.itcm	00000024 _isatty_r
6001d1c4 g     F .text.code	00000004 mbedtls_ssl_session_reset
60008740 g     F .text.code	00000004 mbedtls_ctr_drbg_set_entropy_len
6001c8c8 g     F .text.code	0000000e mbedtls_ssl_conf_legacy_renegotiation
0001b0fc g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
0000fb84 g     F .text.itcm	00000012 _fnet_socket_addr_is_broadcast
0001400c g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePong(websockets::WebsocketsMessage)
600045bc g     F .text.code	0000004e mbedtls_mpi_sub_mpi
0001a7e0 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
6001343c g     F .text.code	000003c4 mbedtls_rsa_private


