
/tmp/arduino/sketches/4570CAB4FD6A86B53BF5A0737F6CA641/RJI.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60023070 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0002ba80 l    d  .fini	00000000 .fini
0002ba84 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20007ec0 l    d  NonCacheable	00000000 NonCacheable
2000a4dc l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6006c99c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001fc ResetHandler2
00000000 l    df *ABS*	00000000 aes.c
60029b98 l     O .text.progmem	00000028 RCON
60029bc0 l     O .text.progmem	00000100 FSb
60029cc0 l     O .text.progmem	00000400 RT0
6002a0c0 l     O .text.progmem	00000400 RT3
6002a4c0 l     O .text.progmem	00000400 RT1
6002a8c0 l     O .text.progmem	00000400 RT2
6002acc0 l     O .text.progmem	00000400 FT0
6002b0c0 l     O .text.progmem	00000400 FT3
6002b4c0 l     O .text.progmem	00000400 FT1
6002b8c0 l     O .text.progmem	00000400 FT2
6002bcc0 l     O .text.progmem	00000100 RSb
6002bdc0 l     O .text.progmem	00000040 aes_test_cfb128_pt
6002be00 l     O .text.progmem	00000030 aes_test_ecb_dec
6002be30 l     O .text.progmem	00000030 aes_test_ecb_enc
6002be60 l     O .text.progmem	00000030 aes_test_cbc_dec
6002be90 l     O .text.progmem	00000030 aes_test_cbc_enc
6002bec0 l     O .text.progmem	00000060 aes_test_cfb128_key
6002bf20 l     O .text.progmem	000000c0 aes_test_cfb128_ct
6002bfe0 l     O .text.progmem	00000030 aes_test_ctr_nonce_counter
6002c010 l     O .text.progmem	00000030 aes_test_ctr_key
6002c040 l     O .text.progmem	0000000c aes_test_ctr_len
6002c04c l     O .text.progmem	00000090 aes_test_ctr_ct
6002c0dc l     O .text.progmem	00000090 aes_test_ctr_pt
00000000 l    df *ABS*	00000000 asn1parse.c
00000000 l    df *ABS*	00000000 asn1write.c
00000000 l    df *ABS*	00000000 base64.c
6002c16c l     O .text.progmem	00000040 base64_enc_map
6002c1ac l     O .text.progmem	00000080 base64_dec_map
6002c22c l     O .text.progmem	00000040 base64_test_dec
6002c26c l     O .text.progmem	00000059 base64_test_enc
00000000 l    df *ABS*	00000000 bignum.c
600037c0 l     F .text.code	00000054 mpi_sub_hlp
60003814 l     F .text.code	000002e2 mpi_mul_hlp
60004238 l     F .text.code	00000106 mpi_montmul
60004f9c l     F .text.code	000000a2 mpi_write_hlp
60005174 l     F .text.code	00000068 mpi_check_small_factors
60005588 l     F .text.code	00000326 mpi_miller_rabin
6002c2c8 l     O .text.progmem	000002a0 small_prime
6002c568 l     O .text.progmem	00000024 gcd_pairs
00000000 l    df *ABS*	00000000 camellia.c
60006650 l     F .text.code	00000090 camellia_feistel
6002c58c l     O .text.progmem	00000100 FSb3
6002c68c l     O .text.progmem	00000100 FSb
6002c78c l     O .text.progmem	00000100 FSb4
6002c88c l     O .text.progmem	00000100 FSb2
6002c98c l     O .text.progmem	00000030 SIGMA_CHARS
6002c9bc l     O .text.progmem	00000020 shifts
6002c9dc l     O .text.progmem	000000a0 indexes
6002ca7c l     O .text.progmem	00000028 transposes
6002caa4 l     O .text.progmem	000000c0 camellia_test_ecb_key
6002cb64 l     O .text.progmem	00000060 camellia_test_ecb_cipher
6002cbc4 l     O .text.progmem	00000020 camellia_test_ecb_plain
6002cbe4 l     O .text.progmem	00000060 camellia_test_cbc_key
6002cc44 l     O .text.progmem	00000090 camellia_test_cbc_cipher
6002ccd4 l     O .text.progmem	00000030 camellia_test_cbc_plain
6002cd04 l     O .text.progmem	00000030 camellia_test_ctr_nonce_counter
6002cd34 l     O .text.progmem	00000030 camellia_test_ctr_key
6002cd64 l     O .text.progmem	0000000c camellia_test_ctr_len
6002cd70 l     O .text.progmem	00000090 camellia_test_ctr_ct
6002ce00 l     O .text.progmem	00000090 camellia_test_ctr_pt
00000000 l    df *ABS*	00000000 ccm.c
60007340 l     F .text.code	0000034a ccm_auth_crypt
6002ce90 l     O .text.progmem	00000010 key
6002cea0 l     O .text.progmem	00000060 res
6002cf00 l     O .text.progmem	0000000c msg_len
6002cf0c l     O .text.progmem	0000000c iv_len
6002cf18 l     O .text.progmem	0000000c add_len
6002cf24 l     O .text.progmem	0000000c tag_len
6002cf30 l     O .text.progmem	0000000c iv
6002cf3c l     O .text.progmem	00000018 msg
6002cf54 l     O .text.progmem	00000014 ad
00000000 l    df *ABS*	00000000 cipher.c
60007958 l     F .text.code	00000024 add_pkcs_padding
6000797c l     F .text.code	00000064 get_pkcs_padding
600079e0 l     F .text.code	0000002a add_one_and_zeros_padding
60007a0c l     F .text.code	00000060 get_one_and_zeros_padding
60007a6c l     F .text.code	0000002c add_zeros_and_len_padding
60007a98 l     F .text.code	0000005c get_zeros_and_len_padding
60007af4 l     F .text.code	00000012 add_zeros_padding
60007b08 l     F .text.code	00000048 get_zeros_padding
60007b50 l     F .text.code	00000018 get_no_padding
2000d65c l     O .bss	00000004 supported_init
00000000 l    df *ABS*	00000000 cipher_wrap.c
60008314 l     F .text.code	00000004 aes_crypt_ecb_wrap
60008318 l     F .text.code	00000004 aes_crypt_cbc_wrap
6000831c l     F .text.code	00000004 aes_crypt_cfb128_wrap
60008320 l     F .text.code	00000004 aes_crypt_ctr_wrap
60008324 l     F .text.code	00000004 aes_setkey_dec_wrap
60008328 l     F .text.code	00000004 aes_setkey_enc_wrap
6000832c l     F .text.code	0000000c gcm_aes_setkey_wrap
60008338 l     F .text.code	0000000c ccm_aes_setkey_wrap
60008344 l     F .text.code	00000004 camellia_crypt_ecb_wrap
60008348 l     F .text.code	00000004 camellia_crypt_cbc_wrap
6000834c l     F .text.code	00000004 camellia_crypt_cfb128_wrap
60008350 l     F .text.code	00000004 camellia_crypt_ctr_wrap
60008354 l     F .text.code	00000004 camellia_setkey_dec_wrap
60008358 l     F .text.code	00000004 camellia_setkey_enc_wrap
6000835c l     F .text.code	0000000c gcm_camellia_setkey_wrap
60008368 l     F .text.code	0000000c ccm_camellia_setkey_wrap
60008374 l     F .text.code	00000008 des_crypt_ecb_wrap
6000837c l     F .text.code	00000008 des3_crypt_ecb_wrap
60008384 l     F .text.code	00000004 des_crypt_cbc_wrap
60008388 l     F .text.code	00000004 des3_crypt_cbc_wrap
6000838c l     F .text.code	00000004 des_setkey_dec_wrap
60008390 l     F .text.code	00000004 des_setkey_enc_wrap
60008394 l     F .text.code	00000004 des3_set2key_dec_wrap
60008398 l     F .text.code	00000004 des3_set2key_enc_wrap
6000839c l     F .text.code	00000004 des3_set3key_dec_wrap
600083a0 l     F .text.code	00000004 des3_set3key_enc_wrap
600083a4 l     F .text.code	00000012 des3_ctx_free
600083b8 l     F .text.code	00000012 des_ctx_free
600083cc l     F .text.code	00000012 ccm_ctx_free
600083e0 l     F .text.code	00000012 gcm_ctx_free
600083f4 l     F .text.code	00000012 camellia_ctx_free
60008408 l     F .text.code	00000012 aes_ctx_free
6000841c l     F .text.code	00000018 des3_ctx_alloc
60008434 l     F .text.code	00000016 des_ctx_alloc
6000844c l     F .text.code	00000016 ccm_ctx_alloc
60008464 l     F .text.code	00000018 gcm_ctx_alloc
6000847c l     F .text.code	00000018 camellia_ctx_alloc
60008494 l     F .text.code	00000018 aes_ctx_alloc
60031ef4 l     O .text.progmem	0000001c aes_128_ecb_info
60031ed8 l     O .text.progmem	0000001c aes_192_ecb_info
60031ebc l     O .text.progmem	0000001c aes_256_ecb_info
60031ea0 l     O .text.progmem	0000001c aes_128_cbc_info
60031e84 l     O .text.progmem	0000001c aes_192_cbc_info
60031e68 l     O .text.progmem	0000001c aes_256_cbc_info
60031e4c l     O .text.progmem	0000001c aes_128_cfb128_info
60031e30 l     O .text.progmem	0000001c aes_192_cfb128_info
60031e14 l     O .text.progmem	0000001c aes_256_cfb128_info
60031df8 l     O .text.progmem	0000001c aes_128_ctr_info
60031ddc l     O .text.progmem	0000001c aes_192_ctr_info
60031dc0 l     O .text.progmem	0000001c aes_256_ctr_info
60031d80 l     O .text.progmem	0000001c aes_128_gcm_info
60031d64 l     O .text.progmem	0000001c aes_192_gcm_info
60031d48 l     O .text.progmem	0000001c aes_256_gcm_info
60031d08 l     O .text.progmem	0000001c aes_128_ccm_info
60031cec l     O .text.progmem	0000001c aes_192_ccm_info
60031cd0 l     O .text.progmem	0000001c aes_256_ccm_info
60031c90 l     O .text.progmem	0000001c camellia_128_ecb_info
60031c74 l     O .text.progmem	0000001c camellia_192_ecb_info
60031c58 l     O .text.progmem	0000001c camellia_256_ecb_info
60031c3c l     O .text.progmem	0000001c camellia_128_cbc_info
60031c20 l     O .text.progmem	0000001c camellia_192_cbc_info
60031c04 l     O .text.progmem	0000001c camellia_256_cbc_info
60031be8 l     O .text.progmem	0000001c camellia_128_cfb128_info
60031bcc l     O .text.progmem	0000001c camellia_192_cfb128_info
60031bb0 l     O .text.progmem	0000001c camellia_256_cfb128_info
60031b94 l     O .text.progmem	0000001c camellia_128_ctr_info
60031b78 l     O .text.progmem	0000001c camellia_192_ctr_info
60031b5c l     O .text.progmem	0000001c camellia_256_ctr_info
60031b1c l     O .text.progmem	0000001c camellia_128_gcm_info
60031b00 l     O .text.progmem	0000001c camellia_192_gcm_info
60031ae4 l     O .text.progmem	0000001c camellia_256_gcm_info
60031aa4 l     O .text.progmem	0000001c camellia_128_ccm_info
60031a88 l     O .text.progmem	0000001c camellia_192_ccm_info
60031a6c l     O .text.progmem	0000001c camellia_256_ccm_info
60031a2c l     O .text.progmem	0000001c des_ecb_info
600319d0 l     O .text.progmem	0000001c des_ede_ecb_info
60031974 l     O .text.progmem	0000001c des_ede3_ecb_info
60031a10 l     O .text.progmem	0000001c des_cbc_info
600319b4 l     O .text.progmem	0000001c des_ede_cbc_info
60031958 l     O .text.progmem	0000001c des_ede3_cbc_info
60031990 l     O .text.progmem	00000024 des_ede3_info
600319ec l     O .text.progmem	00000024 des_ede_info
60031a48 l     O .text.progmem	00000024 des_info
60031ac0 l     O .text.progmem	00000024 ccm_camellia_info
60031b38 l     O .text.progmem	00000024 gcm_camellia_info
60031cac l     O .text.progmem	00000024 camellia_info
60031d24 l     O .text.progmem	00000024 ccm_aes_info
60031d9c l     O .text.progmem	00000024 gcm_aes_info
60031f10 l     O .text.progmem	00000024 aes_info
00000000 l    df *ABS*	00000000 ctr_drbg.c
600084ac l     F .text.code	000001b0 block_cipher_df
6000865c l     F .text.code	00000098 ctr_drbg_update_internal
600086f4 l     F .text.code	00000020 ctr_drbg_self_test_entropy
2000d670 l     O .bss	00000004 test_offset
60031f34 l     O .text.progmem	00000060 entropy_source_pr
60031f94 l     O .text.progmem	00000010 result_pr
60031fa4 l     O .text.progmem	00000040 entropy_source_nopr
60031fe4 l     O .text.progmem	00000010 result_nopr
60031ff4 l     O .text.progmem	00000010 nonce_pers_nopr
60032004 l     O .text.progmem	00000010 nonce_pers_pr
00000000 l    df *ABS*	00000000 des.c
60009850 l     F .text.code	00000060 des3_set2key
600098f0 l     F .text.code	0000006c des3_set3key
60032014 l     O .text.progmem	00000080 odd_parity_table
60032094 l     O .text.progmem	00000080 weak_key_table
60032114 l     O .text.progmem	00000100 SB8
60032214 l     O .text.progmem	00000100 SB7
60032314 l     O .text.progmem	00000100 SB6
60032414 l     O .text.progmem	00000100 SB4
60032514 l     O .text.progmem	00000100 SB2
60032614 l     O .text.progmem	00000100 SB5
60032714 l     O .text.progmem	00000100 SB3
60032814 l     O .text.progmem	00000100 SB1
60032914 l     O .text.progmem	00000040 LHs
60032954 l     O .text.progmem	00000040 RHs
60032994 l     O .text.progmem	00000018 des3_test_keys
600329ac l     O .text.progmem	00000018 des3_test_ecb_dec
600329c4 l     O .text.progmem	00000018 des3_test_ecb_enc
600329dc l     O .text.progmem	00000018 des3_test_cbc_enc
600329f4 l     O .text.progmem	00000018 des3_test_cbc_dec
00000000 l    df *ABS*	00000000 dhm.c
60009d20 l     F .text.code	0000003c dhm_read_bignum
60009d5c l     F .text.code	00000064 dhm_check_range
60032a0c l     O .text.progmem	000000fb mbedtls_test_dhm_params
00000000 l    df *ABS*	00000000 ecdh.c
00000000 l    df *ABS*	00000000 ecdsa.c
6000a6e4 l     F .text.code	0000005a derive_mpi
00000000 l    df *ABS*	00000000 ecp.c
6000acc8 l     F .text.code	00000090 ecp_modp
6000ad58 l     F .text.code	00000104 ecp_normalize_jac
6000ae5c l     F .text.code	0000004a ecp_safe_invert_jac
6000aea8 l     F .text.code	00000540 ecp_double_jac
6000b3e8 l     F .text.code	0000019c ecp_check_pubkey_sw
6000b584 l     F .text.code	0000025c ecp_normalize_jac_many
6000b7e0 l     F .text.code	00000078 ecp_select_comb.constprop.0
6000baac l     F .text.code	000004d8 ecp_add_mixed
6000c790 l     F .text.code	000000b4 mbedtls_ecp_mul_shortcuts
2000cba0 l     O .bss	00000004 add_count
2000cba4 l     O .bss	00000004 dbl_count
2000ce18 l     O .bss	00000005 ecp_supported_grp_id
2000d290 l     O .bss	00000004 init_done.0
2000d354 l     O .bss	00000004 mul_count
60032b08 l     O .text.progmem	0000003c ecp_supported_curves
00000000 l    df *ABS*	00000000 ecp_curves.c
6000ce9c l     F .text.code	0000050c ecp_mod_p384
6000d3a8 l     F .text.code	00000258 ecp_mod_p224
6000d600 l     F .text.code	000003b6 ecp_mod_p256
6000d9b8 l     F .text.code	00000172 ecp_mod_p192
20007b7c l     O .data	00000004 one.0
60032b44 l     O .text.progmem	00000018 secp192r1_p
60032b5c l     O .text.progmem	00000018 secp192r1_b
60032b74 l     O .text.progmem	00000018 secp192r1_n
60032b8c l     O .text.progmem	00000018 secp192r1_gx
60032ba4 l     O .text.progmem	00000018 secp192r1_gy
60032bbc l     O .text.progmem	00000020 secp224r1_p
60032bdc l     O .text.progmem	0000001c secp224r1_b
60032bf8 l     O .text.progmem	0000001c secp224r1_n
60032c14 l     O .text.progmem	0000001c secp224r1_gx
60032c30 l     O .text.progmem	0000001c secp224r1_gy
60032c4c l     O .text.progmem	00000020 secp256r1_p
60032c6c l     O .text.progmem	00000020 secp256r1_b
60032c8c l     O .text.progmem	00000020 secp256r1_n
60032cac l     O .text.progmem	00000020 secp256r1_gx
60032ccc l     O .text.progmem	00000020 secp256r1_gy
60032cec l     O .text.progmem	00000030 secp384r1_p
60032d1c l     O .text.progmem	00000030 secp384r1_b
60032d4c l     O .text.progmem	00000030 secp384r1_n
60032d7c l     O .text.progmem	00000030 secp384r1_gx
60032dac l     O .text.progmem	00000030 secp384r1_gy
00000000 l    df *ABS*	00000000 entropy.c
6000dc68 l     F .text.code	0000007c entropy_update
6000dce4 l     F .text.code	000000a4 entropy_gather_internal
6000dd88 l     F .text.code	00000014 entropy_dummy_source
00000000 l    df *ABS*	00000000 gcm.c
6000e144 l     F .text.code	00000124 gcm_mult
60033538 l     O .text.progmem	00000018 pt_index
60033538 l     O .text.progmem	00000018 key_index
60032de0 l     O .text.progmem	00000080 last4
60032e60 l     O .text.progmem	00000480 ct
600332e0 l     O .text.progmem	00000120 tag
60033400 l     O .text.progmem	00000018 pt_len
60033418 l     O .text.progmem	00000018 iv_index
60033430 l     O .text.progmem	00000018 iv_len
60033448 l     O .text.progmem	00000018 add_index
60033460 l     O .text.progmem	00000018 add_len
60033478 l     O .text.progmem	000000c0 key
60033550 l     O .text.progmem	00000180 iv
600336d0 l     O .text.progmem	00000180 additional
60033850 l     O .text.progmem	00000180 pt
00000000 l    df *ABS*	00000000 hmac_drbg.c
6000ecbc l     F .text.code	00000020 hmac_drbg_self_test_entropy
2000d674 l     O .bss	00000004 test_offset
600339d0 l     O .text.progmem	00000038 entropy_pr
60033a08 l     O .text.progmem	00000028 entropy_nopr
60033a30 l     O .text.progmem	00000050 result_nopr
60033a80 l     O .text.progmem	00000050 result_pr
00000000 l    df *ABS*	00000000 md.c
60033ad0 l     O .text.progmem	0000001c supported_digests
2000064c l     O .data	00000018 CSWTCH.2
00000000 l    df *ABS*	00000000 md5.c
60033aec l     O .text.progmem	0000001c md5_test_buflen
60033b08 l     O .text.progmem	00000237 md5_test_buf
60033d40 l     O .text.progmem	00000070 md5_test_sum
00000000 l    df *ABS*	00000000 md_wrap.c
6000ff6c l     F .text.code	00000004 md5_starts_wrap
6000ff70 l     F .text.code	00000004 md5_update_wrap
6000ff74 l     F .text.code	00000004 md5_finish_wrap
6000ff78 l     F .text.code	00000004 md5_clone_wrap
6000ff7c l     F .text.code	00000004 md5_process_wrap
6000ff80 l     F .text.code	00000004 sha1_starts_wrap
6000ff84 l     F .text.code	00000004 sha1_update_wrap
6000ff88 l     F .text.code	00000004 sha1_finish_wrap
6000ff8c l     F .text.code	00000004 sha1_clone_wrap
6000ff90 l     F .text.code	00000004 sha1_process_wrap
6000ff94 l     F .text.code	00000006 sha224_starts_wrap
6000ff9c l     F .text.code	00000004 sha224_update_wrap
6000ffa0 l     F .text.code	00000004 sha224_finish_wrap
6000ffa4 l     F .text.code	00000006 sha224_wrap
6000ffac l     F .text.code	00000004 sha224_clone_wrap
6000ffb0 l     F .text.code	00000004 sha224_process_wrap
6000ffb4 l     F .text.code	00000006 sha256_starts_wrap
6000ffbc l     F .text.code	00000006 sha256_wrap
6000ffc4 l     F .text.code	00000006 sha384_starts_wrap
6000ffcc l     F .text.code	00000004 sha384_update_wrap
6000ffd0 l     F .text.code	00000004 sha384_finish_wrap
6000ffd4 l     F .text.code	00000006 sha384_wrap
6000ffdc l     F .text.code	00000004 sha384_clone_wrap
6000ffe0 l     F .text.code	00000004 sha384_process_wrap
6000ffe4 l     F .text.code	00000006 sha512_starts_wrap
6000ffec l     F .text.code	00000006 sha512_wrap
6000fff4 l     F .text.code	00000012 md5_ctx_free
60010008 l     F .text.code	00000012 sha1_ctx_free
6001001c l     F .text.code	00000012 sha224_ctx_free
60010030 l     F .text.code	00000012 sha384_ctx_free
60010044 l     F .text.code	00000016 md5_ctx_alloc
6001005c l     F .text.code	00000016 sha1_ctx_alloc
60010074 l     F .text.code	00000016 sha224_ctx_alloc
6001008c l     F .text.code	00000016 sha384_ctx_alloc
00000000 l    df *ABS*	00000000 oid.c
60033ed0 l     O .text.progmem	00000078 oid_x509_ext
60033f48 l     O .text.progmem	00000190 oid_x520_attr_type
600340d8 l     O .text.progmem	00000050 oid_pk_alg
60034128 l     O .text.progmem	00000064 oid_ecp_grp
6003418c l     O .text.progmem	00000118 oid_sig_alg
600342a4 l     O .text.progmem	0000008c oid_md_alg
60034330 l     O .text.progmem	00000078 oid_md_hmac
600343a8 l     O .text.progmem	00000070 oid_ext_key_usage
60034418 l     O .text.progmem	0000003c oid_cipher_alg
60034454 l     O .text.progmem	0000003c oid_pkcs12_pbe_alg
00000000 l    df *ABS*	00000000 pem.c
60010580 l     F .text.code	000000ea pem_pbkdf1
6001066c l     F .text.code	0000005c pem_des3_decrypt
600106c8 l     F .text.code	00000062 pem_aes_decrypt
00000000 l    df *ABS*	00000000 pk.c
2000069c l     O .data	00000010 CSWTCH.5
00000000 l    df *ABS*	00000000 pk_wrap.c
600110c4 l     F .text.code	0000000e rsa_can_do
600110d4 l     F .text.code	0000000a rsa_get_bitlen
600110e0 l     F .text.code	00000050 rsa_verify_wrap
60011130 l     F .text.code	0000003c rsa_sign_wrap
6001116c l     F .text.code	00000048 rsa_decrypt_wrap
600111b4 l     F .text.code	00000048 rsa_encrypt_wrap
600111fc l     F .text.code	00000004 rsa_check_pair_wrap
60011200 l     F .text.code	00000028 rsa_debug
60011228 l     F .text.code	0000000c eckey_can_do
60011234 l     F .text.code	00000004 eckey_get_bitlen
60011238 l     F .text.code	00000020 ecdsa_verify_wrap
60011258 l     F .text.code	00000004 ecdsa_sign_wrap
6001125c l     F .text.code	00000050 eckey_verify_wrap
600112ac l     F .text.code	00000054 eckey_sign_wrap
60011300 l     F .text.code	00000004 eckey_check_pair
60011304 l     F .text.code	00000014 eckey_debug
60011318 l     F .text.code	0000000c eckeydh_can_do
60011324 l     F .text.code	0000000c ecdsa_can_do
60011330 l     F .text.code	0000000c rsa_alt_can_do
6001133c l     F .text.code	0000000c rsa_alt_get_bitlen
60011348 l     F .text.code	00000042 rsa_alt_sign_wrap
6001138c l     F .text.code	00000040 rsa_alt_decrypt_wrap
600113cc l     F .text.code	00000012 rsa_free_wrap
600113e0 l     F .text.code	00000012 eckey_free_wrap
600113f4 l     F .text.code	00000012 ecdsa_free_wrap
60011408 l     F .text.code	00000014 rsa_alt_free_wrap
6001141c l     F .text.code	0000001a rsa_alloc_wrap
60011438 l     F .text.code	00000016 eckey_alloc_wrap
60011450 l     F .text.code	00000016 ecdsa_alloc_wrap
60011468 l     F .text.code	00000008 rsa_alt_alloc_wrap
60011470 l     F .text.code	00000098 rsa_alt_check_pair
00000000 l    df *ABS*	00000000 pkcs12.c
00000000 l    df *ABS*	00000000 pkcs5.c
60034580 l     O .text.progmem	000000c0 result_key
60034640 l     O .text.progmem	00000018 plen
60034658 l     O .text.progmem	00000018 slen
60034670 l     O .text.progmem	00000018 it_cnt
60034688 l     O .text.progmem	00000018 key_len
600346a0 l     O .text.progmem	000000f0 salt
60034790 l     O .text.progmem	000000c0 password
00000000 l    df *ABS*	00000000 pkparse.c
60011cec l     F .text.code	000000b8 pk_get_rsapubkey
60011da4 l     F .text.code	00000210 pk_parse_key_pkcs1_der
60011fb4 l     F .text.code	00000058 pk_get_pk_alg
6001200c l     F .text.code	000002f4 pk_use_ecparams
60012300 l     F .text.code	000001a8 pk_parse_key_sec1_der
600124a8 l     F .text.code	000000e8 pk_parse_key_pkcs8_unencrypted_der
60012590 l     F .text.code	00000124 pk_parse_key_pkcs8_encrypted_der
00000000 l    df *ABS*	00000000 platform_util.c
20007b3c l     O .data	00000004 memset_func
00000000 l    df *ABS*	00000000 rsa.c
60012b44 l     F .text.code	000000a2 mgf_mask
60012be8 l     F .text.code	0000013c rsa_rsassa_pkcs1_v15_encode
60012d24 l     F .text.code	0000001e myrand
60012d44 l     F .text.code	000000c4 rsa_check_context.constprop.0
00000000 l    df *ABS*	00000000 rsa_internal.c
00000000 l    df *ABS*	00000000 sha1.c
60034850 l     O .text.progmem	0000003c sha1_test_sum
6003488c l     O .text.progmem	0000000c sha1_test_buflen
60034898 l     O .text.progmem	000000ab sha1_test_buf
00000000 l    df *ABS*	00000000 sha256.c
60034944 l     O .text.progmem	00000100 K
60034a44 l     O .text.progmem	000000c0 sha256_test_sum
60034b04 l     O .text.progmem	0000000c sha256_test_buflen
60034b10 l     O .text.progmem	000000ab sha256_test_buf
00000000 l    df *ABS*	00000000 sha512.c
60034bc0 l     O .text.progmem	00000280 K
60034e40 l     O .text.progmem	00000180 sha512_test_sum
60034fc0 l     O .text.progmem	0000000c sha512_test_buflen
60034fcc l     O .text.progmem	00000153 sha512_test_buf
00000000 l    df *ABS*	00000000 ssl_cache.c
00000000 l    df *ABS*	00000000 ssl_ciphersuites.c
60035460 l     O .text.progmem	00001060 ciphersuite_definitions
2000d450 l     O .bss	0000020c supported_ciphersuites
2000d660 l     O .bss	00000004 supported_init
60035120 l     O .text.progmem	00000340 ciphersuite_preference
00000000 l    df *ABS*	00000000 ssl_cli.c
60018610 l     F .text.code	000000e0 ssl_write_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_srv.c
60019f90 l     F .text.code	00000040 ssl_parse_client_dh_public
60019fd0 l     F .text.code	000000d0 ssl_parse_client_psk_identity
6001a0a0 l     F .text.code	00000198 ssl_parse_encrypted_pms
00000000 l    df *ABS*	00000000 ssl_tls.c
6001bc38 l     F .text.code	00000040 ssl_update_checksum_start
6001bc78 l     F .text.code	00000024 ssl_update_checksum_md5sha1
6001bc9c l     F .text.code	0000004e ssl_calc_verify_tls
6001bcec l     F .text.code	00000098 ssl_calc_finished_tls
6001bd84 l     F .text.code	0000000a ssl_update_checksum_sha256
6001bd90 l     F .text.code	0000002c ssl_calc_verify_tls_sha256
6001bdbc l     F .text.code	00000078 ssl_calc_finished_tls_sha256
6001be34 l     F .text.code	0000000a ssl_update_checksum_sha384
6001be40 l     F .text.code	0000002c ssl_calc_verify_tls_sha384
6001be6c l     F .text.code	0000007c ssl_calc_finished_tls_sha384
6001bee8 l     F .text.code	00000008 ssl_cookie_write_dummy
6001bef0 l     F .text.code	00000008 ssl_cookie_check_dummy
6001bef8 l     F .text.code	00000074 ssl_swap_epochs
6001bf6c l     F .text.code	00000124 tls_prf_generic
6001c090 l     F .text.code	00000022 tls_prf_sha256
6001c0b4 l     F .text.code	00000022 tls_prf_sha384
6001c0d8 l     F .text.code	00000210 tls1_prf
6001c2e8 l     F .text.code	00000094 ssl_session_copy
6001ce34 l     F .text.code	000001bc ssl_handshake_init
6001d098 l     F .text.code	0000012c ssl_session_reset_int
6001d1c8 l     F .text.code	00000044 ssl_start_renegotiation
6001df94 l     F .text.code	0000004a ssl_resend_hello_request
6001e068 l     F .text.code	00000066 ssl_check_ctr_renegotiate
6001e0d0 l     F .text.code	0000008c ssl_write_real
20007b80 l     O .data	00000018 ssl_preset_default_hashes
20007b98 l     O .data	0000000c ssl_preset_suiteb_ciphersuites
20007ba4 l     O .data	00000003 ssl_preset_suiteb_curves
20007ba8 l     O .data	0000000c ssl_preset_suiteb_hashes
2000063c l     O .data	00000010 CSWTCH.158
200006ac l     O .data	00000010 CSWTCH.72
00000000 l    df *ABS*	00000000 x509.c
00000000 l    df *ABS*	00000000 x509_crt.c
60020ef4 l     F .text.code	0000004e x509_profile_check_key
60020f44 l     F .text.code	00000066 x509_crt_check_signature
60020fac l     F .text.code	000000b8 x509_name_cmp
60021064 l     F .text.code	000000b0 x509_crt_find_parent_in
60021114 l     F .text.code	000000ba x509_crt_check_cn
600364c0 l     O .text.progmem	000000a8 x509_crt_verify_strings
00000000 l    df *ABS*	00000000 tempmon.c
2000d3b8 l     O .bss	00000004 s_hotCount
2000d3bc l     O .bss	00000004 s_hotTemp
2000d3c0 l     O .bss	00000004 s_hot_ROOM
2000d3c4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00018148 l     F .text.itcm	00000088 schedule_transfer
000181d0 l     F .text.itcm	00000036 run_callbacks
00018208 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000ce20 l     O .bss	00000008 endpoint0_buffer
2000ce28 l     O .bss	00000004 endpoint0_notify_mask
2000a6c0 l     O .bss	00000008 endpoint0_setupdata
2000ce2c l     O .bss	00000004 endpointN_notify_mask
2000d370 l     O .bss	00000008 reply_buffer
2000d6a2 l     O .bss	00000001 sof_usage
2000d6a9 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2000d69c l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2000d358 l     O .bss	00000000 object.0
60023038 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 RJI.ino.cpp
00000220 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000354 l     F .text.itcm	0000001a ArduinoJson::V702PB2::Converter<char const*, void>::fromJson(ArduinoJson::V702PB2::JsonVariantConst) [clone .isra.0]
00000398 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000450 l     F .text.itcm	00000036 Settings::write_16bit(unsigned short, int) [clone .isra.0]
00000564 l     F .text.itcm	00000040 void Debug::printInfo<char const*, char const*>(char const*, char const*) [clone .constprop.0]
000005a4 l     F .text.itcm	00000064 void Debug::printInfo<char const*, char const*, char const*, char const*>(char const*, char const*, char const*, char const*) [clone .isra.0]
00000608 l     F .text.itcm	00000130 Network::pollWebServer() [clone .isra.0]
60023070 l     O .text.progmem	00006b27 webpageA
00000860 l     F .text.itcm	000005a0 Settings::printSettings() [clone .isra.0]
0000102c l     F .text.itcm	000000d8 bool ArduinoJson::V702PB2::detail::VisitorAdapter<ArduinoJson::V702PB2::detail::JsonVariantCopier>::visit<ArduinoJson::V702PB2::JsonString>(ArduinoJson::V702PB2::JsonString const&) [clone .isra.0]
00003668 l     F .text.itcm	000002a2 Settings::setEngineer(int, ArduinoJson::V702PB2::JsonDocument) [clone .isra.0]
00005a08 l     F .text.itcm	00000310 ArduinoJson::V702PB2::detail::JsonVariantCopier::result_type ArduinoJson::V702PB2::detail::accept<ArduinoJson::V702PB2::detail::JsonVariantCopier>(ArduinoJson::V702PB2::JsonVariantConst, ArduinoJson::V702PB2::detail::JsonVariantCopier&) [clone .isra.0]
00005fa8 l     F .text.itcm	000008b4 ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::result_type ArduinoJson::V702PB2::detail::VariantData::accept<ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> > >(ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >&) const [clone .isra.0]
00006b50 l     F .text.itcm	00000a08 ArduinoJson::V702PB2::DeserializationError::Code ArduinoJson::V702PB2::detail::JsonDeserializer<ArduinoJson::V702PB2::detail::Reader<String, void> >::parseVariant<ArduinoJson::V702PB2::detail::AllowAllFilter>(ArduinoJson::V702PB2::detail::VariantData&, ArduinoJson::V702PB2::detail::AllowAllFilter, ArduinoJson::V702PB2::DeserializationOption::NestingLimit) [clone .isra.0]
000082a0 l     F .text.itcm	000001b8 _GLOBAL__sub_I_DebugLight
00000000 l    df *ABS*	00000000 NativeEthernet.cpp
00008ab8 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN13EthernetClass17_dnsServerAddressE
2000c478 l     O .bss	00000004 guard variable for EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
2000c86c l     O .bss	00000010 EthernetClass::link_callback(void*, fnet_bool_t, void*)::dhcp_params
2000c87c l     O .bss	00000004 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::_responseTimeout
200019c4 l     O .data	00000010 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::teensy_mutex_api
200019d4 l     O .data	00000008 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)::timer_api
200019dc l     O .data	00000010 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::teensy_mutex_api
200019ec l     O .data	00000008 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)::timer_api
00000000 l    df *ABS*	00000000 crypto.cpp
00012880 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00013a10 l     F .text.itcm	00000034 _GLOBAL__sub_I__ZN10websockets6crypto9internals13base64_encodeB5cxx11EPKhj
2000c7e0 l     O .bss	00000018 websockets::crypto::internals::base64_chars
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
00016ba4 l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial1
2000c488 l     O .bss	00000040 rx_buffer1
2000c688 l     O .bss	00000040 tx_buffer1
20000b50 l     O .data	00000064 UART6_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00016c24 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial2
2000c4c8 l     O .bss	00000040 rx_buffer2
2000c6c8 l     O .bss	00000028 tx_buffer2
2000718c l     O .data	00000064 UART4_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00016ca8 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial3
2000c508 l     O .bss	00000040 rx_buffer3
2000c6f0 l     O .bss	00000028 tx_buffer3
200070c4 l     O .data	00000064 UART2_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial4.cpp
00016d2c l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial4
2000c548 l     O .bss	00000040 rx_buffer4
2000c718 l     O .bss	00000028 tx_buffer4
20007128 l     O .data	00000064 UART3_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
00016db0 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial5
2000c588 l     O .bss	00000040 rx_buffer5
2000c740 l     O .bss	00000028 tx_buffer5
200072b8 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial6.cpp
00016e34 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial6
2000c5c8 l     O .bss	00000040 rx_buffer6
2000c768 l     O .bss	00000028 tx_buffer6
20007060 l     O .data	00000064 UART1_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial7.cpp
00016eb8 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial7
2000c608 l     O .bss	00000040 rx_buffer7
2000c790 l     O .bss	00000028 tx_buffer7
20007254 l     O .data	00000064 UART7_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial8.cpp
00016f3c l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial8
2000c648 l     O .bss	00000040 rx_buffer8
2000c7b8 l     O .bss	00000028 tx_buffer8
200071f0 l     O .data	00000064 UART5_Hardware
00000000 l    df *ABS*	00000000 eh_alloc.o
0001a324 l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0001a3ac l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0001a454 l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 certs.c
6002fb54 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha1
60030070 l     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa_sha256
00000000 l    df *ABS*	00000000 serialEvent1.cpp
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 serialEvent4.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 serialEvent6.cpp
00000000 l    df *ABS*	00000000 serialEvent7.cpp
00000000 l    df *ABS*	00000000 serialEvent8.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
200078d0 l     O .data	00000012 device_descriptor
20007b40 l     O .data	00000028 microsoft_os_compatible_id_desc
20007b68 l     O .data	00000012 microsoft_os_string_desc
6003669c l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 NativeDns.cpp
00000000 l    df *ABS*	00000000 NativeEthernetClient.cpp
20007bcc l     O .data	00000001 EthernetClient::connect(IPAddress, unsigned short)::first_call
20007bcd l     O .data	00000001 EthernetClient::connect(char const*, unsigned short)::first_call
00000000 l    df *ABS*	00000000 NativeEthernetServer.cpp
00000000 l    df *ABS*	00000000 Nativesocket.cpp
200005dc l     O .data	00000005 CSWTCH.117
00000000 l    df *ABS*	00000000 fnet_cpu.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_eth.c
00009d80 l     F .text.itcm	00000004 fnet_mimxrt_eth_phy_init
00009d84 l     F .text.itcm	0000016c fnet_mimxrt_eth_init
200079a4 l     O .data	0000011c fnet_mimxrt_eth0_if
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_isr_inst.c
00000000 l    df *ABS*	00000000 fnet_mimxrt_serial.cpp
00000000 l    df *ABS*	00000000 fnet_fec.c
00009f84 l     F .text.itcm	00000042 _fnet_fec_get_hw_addr
00009fc8 l     F .text.itcm	00000026 _fnet_fec_get_statistics
00009ff0 l     F .text.itcm	0000001e fnet_fec_isr_handler_top
0000a010 l     F .text.itcm	00000064 _fnet_fec_phy_read
0000a074 l     F .text.itcm	00000060 _fnet_fec_phy_write
0000a0d4 l     F .text.itcm	00000070 _fnet_fec_set_hw_addr
0000a144 l     F .text.itcm	00000028 _fnet_fec_release
0000a16c l     F .text.itcm	0000019c _fnet_fec_init
0000a3a8 l     F .text.itcm	0000002e fnet_fec_isr_handler_bottom
0000a308 l     F .text.itcm	0000009e _fnet_fec_input
00000000 l    df *ABS*	00000000 fnet_dhcp.c
00000000 l    df *ABS*	00000000 fnet_dhcp_cln.c
0000a5f8 l     F .text.itcm	0000013e _fnet_dhcp_cln_parse_options
0000a738 l     F .text.itcm	000000dc _fnet_dhcp_cln_receive_message
0000a814 l     F .text.itcm	00000204 _fnet_dhcp_cln_send_message
0000aa18 l     F .text.itcm	0000011c _fnet_dhcp_cln_set_state
0000ab34 l     F .text.itcm	0000006c _fnet_dhcp_cln_apply_params
0000aba0 l     F .text.itcm	00000294 _fnet_dhcp_cln_poll
2000ce44 l     O .bss	000002cc fnet_dhcp_cln_if_list
20007940 l     O .data	00000006 fnet_dhcp_cln_parameter_request_list
00000000 l    df *ABS*	00000000 fnet_dns.c
0000afa8 l     F .text.itcm	00000068 _fnet_dns_cmp_name
0000b278 l     F .text.itcm	000001e0 _fnet_dns_poll
2000cba8 l     O .bss	00000270 dns_if_list
00000000 l    df *ABS*	00000000 fnet_service.c
2000d1bc l     O .bss	00000090 fnet_poll_if
2000d250 l     O .bss	00000004 fnet_service_mutex
00000000 l    df *ABS*	00000000 fnet_link.c
0000b520 l     F .text.itcm	00000022 _fnet_link_poll
2000d190 l     O .bss	00000018 fnet_link_if_list
00000000 l    df *ABS*	00000000 fnet_tls.c
0000b598 l     F .text.itcm	0000002a _fnet_tls_mbedtls_entropy_poll
0000b5c4 l     F .text.itcm	00000038 _fnet_tls_mbedtls_recv
0000b5fc l     F .text.itcm	00000038 _fnet_tls_mbedtls_send
2000a6c8 l     O .bss	00000e20 fnet_tls_if_list
2000b4e8 l     O .bss	00000318 fnet_tls_socket_if_list
00000000 l    df *ABS*	00000000 fnet_arp.c
0000b9e0 l     F .text.itcm	00000004 _fnet_arp_ip4_addr_conflict
0000b9e4 l     F .text.itcm	00000040 _fnet_arp_timer
0000ba24 l     F .text.itcm	000000c8 _fnet_arp_add_entry
00000000 l    df *ABS*	00000000 fnet_checksum.c
0000be88 l     F .text.itcm	00000104 _fnet_checksum32_low
0000bf8c l     F .text.itcm	00000068 _fnet_checksum32_nb
00000000 l    df *ABS*	00000000 fnet_error.c
2000d694 l     O .bss	00000001 FNET_ERR_NUMBER
00000000 l    df *ABS*	00000000 fnet_eth.c
2000d110 l     O .bss	00000004 fnet_eth_number
00000000 l    df *ABS*	00000000 fnet_icmp4.c
0000c484 l     F .text.itcm	0000005e _fnet_icmp4_output
0000c4e4 l     F .text.itcm	00000086 _fnet_icmp4_notify_protocol
0000c56c l     F .text.itcm	000000e8 _fnet_icmp4_input
2000068c l     O .data	0000000d CSWTCH.42
00000000 l    df *ABS*	00000000 fnet_inet.c
0000c760 l     F .text.itcm	00000096 _fnet_inet_pton_ip4
00000000 l    df *ABS*	00000000 fnet_ip.c
00000000 l    df *ABS*	00000000 fnet_ip4.c
0000c8fc l     F .text.itcm	00000064 _fnet_ip4_frag_list_free.part.0
0000c960 l     F .text.itcm	00000034 _fnet_ip4_timer
0000cc18 l     F .text.itcm	000004b0 _fnet_ip4_input_low
0000d0c8 l     F .text.itcm	0000007c _fnet_ip4_netif_output
2000d294 l     O .bss	00000004 ip_event
2000d298 l     O .bss	00000004 ip_frag_list_head
2000d68c l     O .bss	00000002 ip_id.0
2000d29c l     O .bss	00000008 ip_queue
2000d2a4 l     O .bss	00000004 ip_timer_ptr
00000000 l    df *ABS*	00000000 fnet_isr.c
2000d18c l     O .bss	00000004 fnet_isr_table
2000d1a8 l     O .bss	00000004 fnet_locked
20007948 l     O .data	00000004 fnet_event_desc_last
00000000 l    df *ABS*	00000000 fnet_mempool.c
00000000 l    df *ABS*	00000000 fnet_netbuf.c
0000d87c l     F .text.itcm	00000134 _fnet_netbuf_trim.part.0
2000d1ac l     O .bss	00000004 fnet_mempool_main
00000000 l    df *ABS*	00000000 fnet_netif.c
0000e028 l     F .text.itcm	000000cc _fnet_netif_set_ip4_addr.part.0
2000d1b0 l     O .bss	00000004 fnet_netif_callback_ip4_addr_conflict
00000000 l    df *ABS*	00000000 fnet_prot.c
20002bb0 l     O .data	00000010 fnet_prot_if_list
00000000 l    df *ABS*	00000000 fnet_raw.c
0000e6b4 l     F .text.itcm	00000014 _fnet_raw_attach
0000e6c8 l     F .text.itcm	00000030 _fnet_raw_shutdown
0000e6f8 l     F .text.itcm	000000e8 _fnet_raw_snd
0000e7e0 l     F .text.itcm	0000005e _fnet_raw_rcv
0000e840 l     F .text.itcm	00000038 _fnet_raw_connect
0000e878 l     F .text.itcm	00000024 _fnet_raw_detach
0000e89c l     F .text.itcm	0000001c _fnet_raw_release
20002bc0 l     O .data	0000002c fnet_raw_socket_api
00000000 l    df *ABS*	00000000 fnet_socket.c
2000d254 l     O .bss	00000030 fnet_socket_desc
20007bca l     O .data	00000002 fnet_port_last
00000000 l    df *ABS*	00000000 fnet_stack.c
2000cb90 l     O .bss	00000004 _fnet_mutex_api
2000d284 l     O .bss	00000004 fnet_stack_mutex
00000000 l    df *ABS*	00000000 fnet_stdlib.c
2000d24c l     O .bss	00000004 fnet_rand_seed
00000000 l    df *ABS*	00000000 fnet_tcp.c
0001005c l     F .text.itcm	0000005e _fnet_tcp_process_fin
000100bc l     F .text.itcm	0000005c _fnet_tcp_set_synopt
00010118 l     F .text.itcm	00000088 _fnet_tcp_init_connection
000101a0 l     F .text.itcm	00000064 _fnet_tcp_getsockopt
00010204 l     F .text.itcm	00000030 _fnet_tcp_accept
00010234 l     F .text.itcm	00000056 _fnet_tcp_attach
0001028c l     F .text.itcm	000000e4 _fnet_tcp_find_socket
00010370 l     F .text.itcm	0000009a _fnet_tcp_setsockopt
0001040c l     F .text.itcm	00000180 _fnet_tcp_send_seg.constprop.0
0001058c l     F .text.itcm	00000070 _fnet_tcp_send_rstsk
000105fc l     F .text.itcm	0000008e _fnet_tcp_send_rst
0001068c l     F .text.itcm	00000082 _fnet_tcp_get_opt.isra.0
00010710 l     F .text.itcm	00000068 _fnet_tcp_init
00010ca0 l     F .text.itcm	00000060 _fnet_tcp_fasttimo
0001197c l     F .text.itcm	0000005c _fnet_tcp_slowtimo
00010778 l     F .text.itcm	000000cc _fnet_tcp_close_socket
00010844 l     F .text.itcm	00000048 _fnet_tcp_abort_socket
0001088c l     F .text.itcm	00000064 _fnet_tcp_listen
000108f0 l     F .text.itcm	00000050 _fnet_tcp_release
00010940 l     F .text.itcm	00000068 _fnet_tcp_drain
000109a8 l     F .text.itcm	000000a0 _fnet_tcp_control_input
00010a48 l     F .text.itcm	0000011a _fnet_tcp_send_headseg
00010b64 l     F .text.itcm	00000070 _fnet_tcp_send_ack
00010bd4 l     F .text.itcm	000000cc _fnet_tcp_rcv
00010d00 l     F .text.itcm	000000b8 _fnet_tcp_connect
00010db8 l     F .text.itcm	00000158 _fnet_tcp_send_dataseg.constprop.0.isra.0
00010f10 l     F .text.itcm	00000156 _fnet_tcp_send_anydata
00011068 l     F .text.itcm	00000062 _fnet_tcp_shutdown
000110cc l     F .text.itcm	000000d4 _fnet_tcp_close
000111a0 l     F .text.itcm	00000534 _fnet_tcp_dataprocess
000116d4 l     F .text.itcm	000002a6 _fnet_tcp_slowtimosk
000119d8 l     F .text.itcm	0000012c _fnet_tcp_snd
00011b04 l     F .text.itcm	00000748 _fnet_tcp_input
2000cb94 l     O .bss	00000004 _fnet_tcp_initial_seq_number
2000d288 l     O .bss	00000004 fnet_tcp_fasttimer
2000d28c l     O .bss	00000004 fnet_tcp_slowtimer
20002bec l     O .data	0000002c fnet_tcp_socket_api
00000000 l    df *ABS*	00000000 fnet_timer.c
2000cb9c l     O .bss	00000004 _fnet_timer_head
00000000 l    df *ABS*	00000000 fnet_udp.c
00012348 l     F .text.itcm	0000001c _fnet_udp_attach
00012364 l     F .text.itcm	00000030 _fnet_udp_shutdown
00012394 l     F .text.itcm	000001a2 _fnet_udp_snd
00012538 l     F .text.itcm	00000060 _fnet_udp_rcv
00012598 l     F .text.itcm	0000002e _fnet_udp_connect
000125c8 l     F .text.itcm	00000024 _fnet_udp_detach
000125ec l     F .text.itcm	0000001c _fnet_udp_release
00012608 l     F .text.itcm	000001e8 _fnet_udp_input
000127f0 l     F .text.itcm	00000090 _fnet_udp_control_input
20002c20 l     O .data	0000002c fnet_udp_socket_api
00000000 l    df *ABS*	00000000 message.cpp
20000664 l     O .data	00000028 CSWTCH.4
00000000 l    df *ABS*	00000000 websockets_client.cpp
00013a98 l     F .text.itcm	00000018 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsEvent&&, String&&)
00013ab0 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00013ac8 l     F .text.itcm	00000016 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsEvent, String), websockets::WebsocketsClient::String(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsEvent, String)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00013b04 l     F .text.itcm	0000007c std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), websockets::WebsocketsClient::WebsocketsMessage(std::shared_ptr<websockets::network::TcpClient>)::{lambda(websockets::WebsocketsClient&, websockets::WebsocketsMessage)#1}>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
00000000 l    df *ABS*	00000000 websockets_endpoint.cpp
00014408 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
200005e4 l     O .data	00000018 CSWTCH.134
00000000 l    df *ABS*	00000000 websockets_server.cpp
000159e0 l     F .text.itcm	00000068 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00015a80 l     F .text.itcm	00000044 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .isra.0]
00015dd0 l     F .text.itcm	000000dc std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) [clone .isra.0]
00000000 l    df *ABS*	00000000 ws_common.cpp
00000000 l    df *ABS*	00000000 IPAddress.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
00017064 l     F .text.itcm	00000058 pit_isr()
2000a4e0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
000171e4 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
00017938 l     F .text.itcm	0000005c flash_wait
2000d69f l     O .bss	00000001 initialized
2000d3cc l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00018aac l     F .text.itcm	00000060 rx_queue_transfer
202000a0 l     O .bss.dma	00001000 rx_buffer
00018b0c l     F .text.itcm	000000b4 rx_event
00018bc0 l     F .text.itcm	00000090 usb_serial_flush_callback
202010a0 l     O .bss.dma	00002000 txbuffer
00018c50 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000d388 l     O .bss	00000004 rx_available
2000d38c l     O .bss	00000010 rx_count
2000d6a0 l     O .bss	00000001 rx_head
2000d39c l     O .bss	00000010 rx_index
2000d3ac l     O .bss	00000009 rx_list
2000d68e l     O .bss	00000002 rx_packet_size
2000d6a1 l     O .bss	00000001 rx_tail
2000a540 l     O .bss	00000100 rx_transfer
2000d6a3 l     O .bss	00000001 transmit_previous_timeout
2000d690 l     O .bss	00000002 tx_available
2000d6a4 l     O .bss	00000001 tx_head
2000d6a5 l     O .bss	00000001 tx_noautoflush
2000d692 l     O .bss	00000002 tx_packet_size
2000a640 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000d699 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 list.o
00000000 l    df *ABS*	00000000 tree.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 functional.o
00000000 l    df *ABS*	00000000 shared_ptr.o
00000000 l    df *ABS*	00000000 string-inst.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
0001a744 l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0001a804 l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
0001a84c l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
0001add0 l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 cp-demangle.o
0001b4cc l     F .text.itcm	000000f0 d_make_comp
0001b5bc l     F .text.itcm	00000074 d_number
0001b630 l     F .text.itcm	00000046 d_call_offset
0001b678 l     F .text.itcm	00000036 d_ref_qualifier
0001b6b0 l     F .text.itcm	000000d4 d_count_templates_scopes
0001b784 l     F .text.itcm	0000001c d_pack_length
0001b7a0 l     F .text.itcm	00000048 d_discriminator
0001b7e8 l     F .text.itcm	0000001c d_index_template_argument.part.0
0001b804 l     F .text.itcm	00000078 d_growable_string_callback_adapter
0001b87c l     F .text.itcm	00000030 next_is_type_qual.isra.0
0001b8ac l     F .text.itcm	00000044 d_append_char
0001b8f0 l     F .text.itcm	00000036 d_lookup_template_argument
0001b928 l     F .text.itcm	00000094 d_find_pack
0001b9bc l     F .text.itcm	00000066 d_append_string
0001ba24 l     F .text.itcm	0000005e d_template_param
0001ba84 l     F .text.itcm	00000078 d_append_num
0001bafc l     F .text.itcm	000000e0 d_source_name
0001bbdc l     F .text.itcm	00000194 d_substitution
0001bd70 l     F .text.itcm	0000086e d_type
0001d3c4 l     F .text.itcm	00000152 d_cv_qualifiers
0001c6a8 l     F .text.itcm	0000006a d_function_type
0001d98c l     F .text.itcm	0000029c d_name
0001ccd4 l     F .text.itcm	00000064 d_template_args_1
0001ce64 l     F .text.itcm	000004ec d_expression_1
0001c5e0 l     F .text.itcm	00000080 d_parmlist
0001c660 l     F .text.itcm	00000048 d_bare_function_type
0001c714 l     F .text.itcm	00000108 d_operator_name
0001c81c l     F .text.itcm	00000340 d_unqualified_name
0001cb5c l     F .text.itcm	00000120 d_expr_primary
0001dc28 l     F .text.itcm	000000f6 d_encoding.part.0
0001d518 l     F .text.itcm	00000474 d_special_name
0001cc7c l     F .text.itcm	00000058 d_template_arg
0001cd38 l     F .text.itcm	0000012a d_prefix
0001d350 l     F .text.itcm	00000072 d_exprlist
0001dd20 l     F .text.itcm	000020f4 d_print_comp_inner
0001fe14 l     F .text.itcm	0000005a d_print_comp
000204a8 l     F .text.itcm	000001d8 d_print_function_type
00020f64 l     F .text.itcm	00000254 d_maybe_print_fold_expression
000211b8 l     F .text.itcm	000001e4 d_maybe_print_designated_init
00020e88 l     F .text.itcm	000000da d_print_subexpr
00020a90 l     F .text.itcm	00000076 d_print_expr_op
0001fe70 l     F .text.itcm	00000638 d_print_mod
000208c8 l     F .text.itcm	000001c8 d_print_array_type
00020680 l     F .text.itcm	00000248 d_print_mod_list
00020b08 l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
00021460 l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 unwind-arm.o
00021c2c l     F .text.itcm	00000012 selfrel_offset31
00021c40 l     F .text.itcm	0000005c search_EIT_table
00021c9c l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
00021cc4 l     F .text.itcm	00000098 get_eit_entry
00021d5c l     F .text.itcm	00000058 restore_non_core_regs
00021db4 l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
00021dc0 l     F .text.itcm	00000002 _Unwind_DebugHook
00021dc4 l     F .text.itcm	0000003a unwind_phase2
00021e00 l     F .text.itcm	000000ca unwind_phase2_forced
00021fdc l     F .text.itcm	0000001a _Unwind_GetGR
00022028 l     F .text.itcm	00000018 _Unwind_SetGR
000220c4 l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
000227e0 l     F .text.itcm	00000038 next_unwind_byte
00022818 l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
00022834 l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00022b20 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-isupper.o
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-strstr.o
00022ed0 l     F .text.itcm	000000c6 critical_factorization
00022f98 l     F .text.itcm	000001f8 two_way_long_needle
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-printf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-putchar.o
00000000 l    df *ABS*	00000000 libc_a-puts.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-calloc.o
00000000 l    df *ABS*	00000000 libc_a-rand.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00026a98 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00027a54 l     F .text.itcm	00000018 stdio_exit_handler
00027a6c l     F .text.itcm	00000040 cleanup_stdio
00027aac l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-strnlen.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfprintf.o
0002a394 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
0002a414 l     F .text.itcm	00000076 __sprint_r.part.0
0002b430 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0002b978 l     F .text.itcm	00000008 __mbedtls_pk_free_veneer
0002b980 l     F .text.itcm	00000008 __mbedtls_ssl_conf_ca_chain_veneer
0002b988 l     F .text.itcm	00000008 __mbedtls_ssl_write_veneer
0002b990 l     F .text.itcm	00000008 __mbedtls_ssl_conf_own_cert_veneer
0002b998 l     F .text.itcm	00000008 __mbedtls_ssl_close_notify_veneer
0002b9a0 l     F .text.itcm	00000008 __mbedtls_ssl_cache_free_veneer
0002b9a8 l     F .text.itcm	00000008 __mbedtls_x509_crt_init_veneer
0002b9b0 l     F .text.itcm	00000008 __mbedtls_x509_crt_free_veneer
0002b9b8 l     F .text.itcm	00000008 ___init_veneer
0002b9c0 l     F .text.itcm	00000008 __mbedtls_ssl_cache_init_veneer
0002b9c8 l     F .text.itcm	00000008 __mbedtls_ssl_conf_rng_veneer
0002b9d0 l     F .text.itcm	00000008 __mbedtls_ssl_set_hostname_veneer
0002b9d8 l     F .text.itcm	00000008 __mbedtls_entropy_add_source_veneer
0002b9e0 l     F .text.itcm	00000008 __mbedtls_ssl_config_defaults_veneer
0002b9e8 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0002b9f0 l     F .text.itcm	00000008 __mbedtls_ssl_handshake_veneer
0002b9f8 l     F .text.itcm	00000008 __mbedtls_ssl_config_init_veneer
0002ba00 l     F .text.itcm	00000008 __mbedtls_entropy_init_veneer
0002ba08 l     F .text.itcm	00000008 __mbedtls_ssl_config_free_veneer
0002ba10 l     F .text.itcm	00000008 __mbedtls_ssl_conf_authmode_veneer
0002ba18 l     F .text.itcm	00000008 __mbedtls_entropy_free_veneer
0002ba20 l     F .text.itcm	00000008 __mbedtls_pk_parse_key_veneer
0002ba28 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_init_veneer
0002ba30 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_seed_veneer
0002ba38 l     F .text.itcm	00000008 __mbedtls_ssl_conf_session_cache_veneer
0002ba40 l     F .text.itcm	00000008 __mbedtls_ssl_set_bio_veneer
0002ba48 l     F .text.itcm	00000008 __mbedtls_ssl_free_veneer
0002ba50 l     F .text.itcm	00000008 __mbedtls_ssl_setup_veneer
0002ba58 l     F .text.itcm	00000008 __mbedtls_ssl_read_veneer
0002ba60 l     F .text.itcm	00000008 __mbedtls_x509_crt_parse_veneer
0002ba68 l     F .text.itcm	00000008 __mbedtls_pk_init_veneer
0002ba70 l     F .text.itcm	00000008 __mbedtls_ctr_drbg_free_veneer
60022f88 l     F .text.code	00000008 __memcpy_veneer
60022f90 l     F .text.code	00000008 __strstr_veneer
60022f98 l     F .text.code	00000008 __strcmp_veneer
60022fa0 l     F .text.code	00000008 __free_veneer
60022fa8 l     F .text.code	00000008 __printf_veneer
60022fb0 l     F .text.code	00000008 __memmove_veneer
60022fb8 l     F .text.code	00000008 __main_veneer
60022fc0 l     F .text.code	00000008 __memset_veneer
60022fc8 l     F .text.code	00000008 __strlen_veneer
60022fd0 l     F .text.code	00000008 ____libc_init_array_veneer
60022fd8 l     F .text.code	00000008 __memcmp_veneer
60022fe0 l     F .text.code	00000008 __rand_veneer
60022fe8 l     F .text.code	00000008 __delay_veneer
60022ff0 l     F .text.code	00000008 __sm_set_pool_veneer
60022ff8 l     F .text.code	00000008 ____aeabi_uldivmod_veneer
60023000 l     F .text.code	00000008 __set_arm_clock_veneer
60023008 l     F .text.code	00000008 __pwm_init_veneer
60023010 l     F .text.code	00000008 __puts_veneer
60023018 l     F .text.code	00000008 __snprintf_veneer
60023020 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60023028 l     F .text.code	00000008 __calloc_veneer
60023030 l     F .text.code	00000008 __putchar_veneer
00019c38 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
200015c8 g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
6001cd00 g     F .text.code	00000028 mbedtls_ssl_session_free
00000128  w    F .text.itcm	0000001e websockets::network::Teensy41TcpClient::read(unsigned char*, unsigned long)
0001b174 g     F .text.itcm	00000040 std::logic_error::~logic_error()
00017d30 g     F .text.itcm	00000010 main
000218c8 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20001830 g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
20007b38 g     O .data	00000004 mbedtls_test_srv_key
00019bd8 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
60008920 g     F .text.code	00000012 mbedtls_ctr_drbg_random
00000068  w    F .text.itcm	00000006 websockets::network::Teensy41TcpClient::getSocket() const
00018e08 g     F .text.itcm	00000002 usb_serial_reset
0001b428 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
6001c37c g     F .text.code	0000000a mbedtls_ssl_init
60016364 g     F .text.code	00000786 mbedtls_internal_sha256_process
60003288 g     F .text.code	00000050 mbedtls_asn1_write_ia5_string
00028628 g     F .text.itcm	00000024 _sbrk_r
6000f618 g     F .text.code	0000000a mbedtls_md5_free
60010180 g     F .text.code	00000044 mbedtls_oid_get_x509_ext_type
60016d20 g     F .text.code	00000004 mbedtls_sha256_update
0002b7e4 g     F .text.itcm	00000024 _wcsnrtombs_r
00028694 g     F .text.itcm	0000002c _write_r
6000ece4 g     F .text.code	00000004 mbedtls_hmac_drbg_set_prediction_resistance
00014908 g     F .text.itcm	00000060 websockets::internals::readExtendedPayloadLength(websockets::network::TcpClient&, websockets::internals::Header const&)
20001534 g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
00000400  w    F .text.itcm	00000050 websockets::network::Teensy41TcpServer::poll()
6000c90c g     F .text.code	0000003c mbedtls_ecp_check_privkey
00015960  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
20200000 g     O .bss.dma	00000004 EthernetClass::socket_buf_transmit
20002c88 g     O .data	00000004 mbedtls_test_srv_crt_len
60020334 g     F .text.code	000000aa mbedtls_ssl_get_key_exchange_md_tls1_2
6001c854 g     F .text.code	00000034 mbedtls_ssl_conf_max_frag_len
00015eac g     F .text.itcm	00000444 websockets::recvHandshakeRequest(websockets::network::TcpClient&)
00017378 g     F .text.itcm	0000003a String::String(String const&)
0000c344 g     F .text.itcm	00000034 _fnet_eth_is_connected
0000d144 g     F .text.itcm	0000026c _fnet_ip4_output
00003198  w    F .text.itcm	0000006c int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
000218d8 g     F .text.itcm	0000005a .hidden __floatdidf
00009054  w    F .text.itcm	00000050 EthernetClient::operator==(bool)
0002578c g     F .text.itcm	00000060 memcmp
00014598 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
0000f48c g     F .text.itcm	000000e0 fnet_socket_recvfrom
2000c82c g     O .bss	00000004 EventResponder::firstYield
6001d8a0 g     F .text.code	00000034 mbedtls_ssl_update_handshake_status
600110a4 g     F .text.code	00000014 mbedtls_pk_get_name
6000f558 g     F .text.code	00000034 mbedtls_md_hmac_reset
0000e2d8 g     F .text.itcm	0000001c fnet_netif_get_ip4_addr_type
600019ac g     F .text.code	000004a4 mbedtls_internal_aes_encrypt
60020d64 g     F .text.code	0000004c mbedtls_x509_get_serial
6000f630 g     F .text.code	00000034 mbedtls_md5_starts_ret
0002b834 g     F .text.itcm	0000002c _read_r
0000ec88 g     F .text.itcm	000000ac _fnet_socket_get_uniqueport
00009b70 g     F .text.itcm	00000064 EthernetClass::socketConnect(unsigned char, unsigned char*, unsigned short)
000236b8 g     F .text.itcm	0000000c __errno
00014680 g     F .text.itcm	000001d0 websockets::internals::WebsocketsEndpoint::getHeader[abi:cxx11](unsigned long long, unsigned char, bool, bool)
6001c420 g     F .text.code	00000006 mbedtls_ssl_conf_dtls_badmac_limit
60008c8c g     F .text.code	00000008 mbedtls_des_init
0000b4d4 g     F .text.itcm	00000018 fnet_service_unregister
6000b934 g     F .text.code	00000034 mbedtls_ecp_keypair_init
000266a4 g     F .text.itcm	00000154 __mdiff
00013a90  w    F .text.itcm	00000006 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
60010fe0 g     F .text.code	00000028 mbedtls_pk_decrypt
0000015c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
0000c324 g     F .text.itcm	0000001e _fnet_eth_phy_write
20001580 g     O .data	0000000c typeinfo for std::bad_exception
00026bc0 g     F .text.itcm	00000cec _dtoa_r
60009dc0 g     F .text.code	00000008 mbedtls_dhm_init
20001914 g     O .data	00000014 vtable for std::length_error
00022b10 g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
6000fe30 g     F .text.code	00000030 mbedtls_md5_starts
60018500 g     F .text.code	00000030 mbedtls_ssl_ciphersuite_from_string
000144d4 g     F .text.itcm	0000006c websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
600102cc g     F .text.code	0000003c mbedtls_oid_get_oid_by_ec_grp
60011008 g     F .text.code	00000028 mbedtls_pk_encrypt
0000f13c g     F .text.itcm	00000054 fnet_socket_close
60010ebc g     F .text.code	000000c4 mbedtls_pk_verify_ext
60008720 g     F .text.code	0000001c mbedtls_ctr_drbg_free
00019400 g     F .text.itcm	00000092 HardwareSerial::read()
2000d384 g     O .bss	00000004 resetTeensy
0000d820 g     F .text.itcm	0000005c _fnet_mempool_malloc_max
000180e0  w    F .text.itcm	00000004 abort
000097d8 g     F .text.itcm	00000068 EthernetServer::write(unsigned char const*, unsigned int)
2000ce30 g     O .bss	00000004 errno
0000c304 g     F .text.itcm	0000001e _fnet_eth_phy_read
6000fe64 g     F .text.code	00000004 mbedtls_md5_finish
00003204  w    F .text.itcm	000002ec VideoHub::parse(char)
0000c014 g     F .text.itcm	00000030 _fnet_checksum_pseudo_netbuf_start
00026660 g     F .text.itcm	00000042 __mcmp
0000f91c g     F .text.itcm	00000026 _fnet_socket_buffer_release
000236c8 g     F .text.itcm	00001b44 _svfprintf_r
6000999c g     F .text.code	00000384 mbedtls_des_self_test
6000358c g     F .text.code	00000170 mbedtls_base64_decode
00026a68 g     F .text.itcm	00000018 realloc
600077d4 g     F .text.code	00000184 mbedtls_ccm_self_test
6000e750 g     F .text.code	00000076 mbedtls_gcm_auth_decrypt
20001804 g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
0001a734 g     F .text.itcm	00000008 __cxa_get_globals_fast
6002306c g       .text.code	00000000 __init_array_end
20002b68 g     O .data	00000006 fnet_eth_null_addr
000199a4 g     F .text.itcm	00000022 std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
00014400  w    F .text.itcm	00000006 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
00028508 g     F .text.itcm	0000002c _fstat_r
60015f7c g     F .text.code	00000088 mbedtls_sha1_update_ret
60008fe0 g     F .text.code	0000045e mbedtls_des3_crypt_ecb
00000370  w    F .text.itcm	00000026 Logic::~Logic()
60006254 g     F .text.code	000003fc mbedtls_mpi_self_test
2000158c g     O .data	0000000c typeinfo for std::invalid_argument
0000d5b4 g     F .text.itcm	0000005c fnet_isr_unregister
000035a8  w    F .text.itcm	000000c0 unsigned char ArduinoJson::V702PB2::detail::VariantData::asIntegral<unsigned char>() const
00009ef0 g     F .text.itcm	0000000c fnet_cpu_isr
6001e598 g     F .text.code	0000008c mbedtls_ssl_check_cert_usage
0000fad0 g     F .text.itcm	00000016 fnet_socket_addr_is_unspecified
6000cb18 g     F .text.code	00000384 mbedtls_ecp_self_test
60003f60 g     F .text.code	000000ce mbedtls_mpi_read_binary
600132bc g     F .text.code	00000004 mbedtls_rsa_get_len
0000c7fc g     F .text.itcm	0000004c _fnet_ip_queue_append
00021840 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001a59c g     F .text.itcm	00000070 __gnu_end_cleanup
0000df38 g     F .text.itcm	00000030 _fnet_netbuf_concat
60004f1c g     F .text.code	0000007e mbedtls_mpi_mod_int
00008a50 g     F .text.itcm	0000004c EthernetClass::begin(unsigned char*, IPAddress)
2000732c g     O .data	00000004 IntervalTimer::nvic_priorites
000215c4 g     F .text.itcm	0000027a .hidden __aeabi_dsub
0001ae74 g     F .text.itcm	00000038 __cxa_throw
000259d4 g     F .text.itcm	0000004c _wcrtomb_r
6000ef98 g     F .text.code	00000220 mbedtls_hmac_drbg_self_test
60007e10 g     F .text.code	00000224 mbedtls_cipher_update
2000c814 g     O .bss	00000004 EthernetClass::stack_heap_size
0000c28c g     F .text.itcm	0000003c _fnet_eth_multicast_leave_ip4
6001c9a4 g     F .text.code	0000004c mbedtls_ssl_get_record_expansion
60004128 g     F .text.code	00000092 mbedtls_mpi_shift_r
6002e8e4 g     O .text.progmem	000006ab mbedtls_test_srv_key_rsa
000178c8 g     F .text.itcm	00000070 pinMode
0000ae34 g     F .text.itcm	000000d4 fnet_dhcp_cln_init
6000995c g     F .text.code	0000001e mbedtls_des3_set3key_enc
20007330  w    O .data	00000004 ArduinoJson::V702PB2::detail::DefaultAllocator::instance()::allocator
2000d6e0 g       .bss	00000000 _ebss
60002470 g     F .text.code	00000014 mbedtls_aes_crypt_ecb
0000dc98 g     F .text.itcm	00000148 _fnet_netbuf_pullup
6002e3c4 g     O .text.progmem	00000004 mbedtls_test_cli_crt_rsa_len
6000a274 g     F .text.code	0000005c mbedtls_dhm_free
00025a74 g     F .text.itcm	00000002 __retarget_lock_release_recursive
000226c0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
60018024 g     F .text.code	0000012c mbedtls_sha512_ret
6000ef80 g     F .text.code	00000018 mbedtls_hmac_drbg_free
6000f664 g     F .text.code	00000694 mbedtls_internal_md5_process
60004080 g     F .text.code	000000a6 mbedtls_mpi_shift_l
60020a1c g     F .text.code	00000040 mbedtls_x509_get_sig
20002ba8 g     O .data	00000008 fnet_fec_eth_api
600227d4 g     F .text.code	00000002 startup_default_early_hook
00008b0c  w    F .text.itcm	00000004 EthernetClient::setConnectionTimeout(unsigned short)
6000acc0 g     F .text.code	00000004 mbedtls_ecdsa_init
6000a740 g     F .text.code	000001b8 mbedtls_ecdsa_sign
00021ff8 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
6001e50c g     F .text.code	0000004c mbedtls_ssl_set_calc_verify_md
60002bb0 g     F .text.code	00000064 mbedtls_asn1_get_bitstring
200015a4  w    O .data	00000008 typeinfo for std::_Sp_make_shared_tag
0000131c  w    F .text.itcm	00000098 ArduinoJson::V702PB2::detail::VariantData::getOrAddElement(unsigned int, ArduinoJson::V702PB2::detail::ResourceManager*)
0000c08c g     F .text.itcm	0000008e _fnet_eth_input
60003ca0 g     F .text.code	0000003a mbedtls_mpi_swap
0000854c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00008804 g     F .text.itcm	00000214 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress, IPAddress)
00014da0 g     F .text.itcm	00000020 websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool)
6000997c g     F .text.code	00000020 mbedtls_des3_set3key_dec
00015a48  w    F .text.itcm	00000038 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
6001447c g     F .text.code	000001f4 mbedtls_rsa_gen_key
60007c28 g     F .text.code	00000020 mbedtls_cipher_free
0000efd4 g     F .text.itcm	00000168 fnet_socket_bind
00008b34 g     F .text.itcm	00000048 EthernetClient::connected()
00025a84 g     F .text.itcm	00000008 _localeconv_r
6002ef94 g     O .text.progmem	000004ad mbedtls_test_srv_crt_rsa
000013b4  w    F .text.itcm	0000008c ArduinoJson::V702PB2::detail::StringBuilder::append(char)
000218c8 g     F .text.itcm	0000006a .hidden __floatundidf
00027de8 g     F .text.itcm	00000078 frexp
60003c0c g     F .text.code	00000094 mbedtls_mpi_copy
0000ff78 g     F .text.itcm	0000002a fnet_strnlen
0001af4c g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001487c g     F .text.itcm	00000088 websockets::internals::readUntilSuccessfullOrError(websockets::network::TcpClient&, unsigned char*, unsigned long)
60021e60 g     F .text.code	0000000a mbedtls_x509_crt_init
6000dde0 g     F .text.code	00000032 mbedtls_entropy_add_source
600058b0 g     F .text.code	0000026a mbedtls_mpi_gcd
20001548 g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
60006c50 g     F .text.code	00000128 mbedtls_camellia_crypt_ecb
60008128 g     F .text.code	00000038 mbedtls_cipher_write_tag
60001f54 g     F .text.code	0000006a mbedtls_aes_crypt_ctr
6001cd3c g     F .text.code	0000001c mbedtls_ssl_sig_hash_set_add
6001e67c g     F .text.code	0000003c mbedtls_ssl_send_flight_completed
60002e90 g     F .text.code	0000002e mbedtls_asn1_free_named_data_list
000192dc g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00015be8  w    F .text.itcm	000000b0 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
60020824 g     F .text.code	00000010 mbedtls_x509_get_alg
00021f88 g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
00014a60 g     F .text.itcm	00000234 websockets::internals::WebsocketsEndpoint::_recv()
00013a5c  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
20001568 g     O .data	0000000c typeinfo for std::length_error
0000bb4c g     F .text.itcm	00000016 _fnet_arp_release
0001004c g     F .text.itcm	00000010 fnet_srand
60005b1c g     F .text.code	000004d4 mbedtls_mpi_inv_mod
0000b490 g     F .text.itcm	00000044 fnet_service_register
20006f24 g     O .data	00000001 String::zerotermination
0000ea3c g     F .text.itcm	00000014 _fnet_socket_init
0001a268 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
200015b8 g     O .data	00000008 typeinfo for std::exception
0006d800 g       *ABS*	00000000 _flashimagelen
60008034 g     F .text.code	000000f4 mbedtls_cipher_finish
600344c0 g     O .text.progmem	00000030 mbedtls_ecdsa_info
2000155c g     O .data	0000000c typeinfo for std::logic_error
600104ac g     F .text.code	0000003c mbedtls_oid_get_oid_by_md
6001052c g     F .text.code	00000054 mbedtls_oid_get_pkcs12_pbe_alg
0000ca78 g     F .text.itcm	0000000e _fnet_ip4_will_fragment
60036578 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_suiteb
0000e11c g     F .text.itcm	00000024 fnet_netif_get_by_number
0001a688 g     F .text.itcm	0000008a __cxa_end_catch
0001a0fc  w    F .text.itcm	00000054 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0000f60c g     F .text.itcm	00000108 fnet_socket_setopt
00027d5c g     F .text.itcm	00000088 snprintf
6000e704 g     F .text.code	0000004a mbedtls_gcm_crypt_and_tag
0002ba80 g     F .fini	00000000 _fini
60031488 g     O .text.progmem	00000004 mbedtls_test_ca_crt_ec_len
00019bb8 g     F .text.itcm	00000020 std::__throw_bad_alloc()
0000f714 g     F .text.itcm	00000208 fnet_socket_getopt
6000b928 g     F .text.code	0000000c mbedtls_ecp_group_init
0000fa24 g     F .text.itcm	00000078 _fnet_socket_buffer_read_address
000194b0 g     F .text.itcm	00000040 nvic_execution_priority()
6001fc08 g     F .text.code	0000041c mbedtls_ssl_parse_certificate
000172b4 g     F .text.itcm	0000004c Print::print(String const&)
00008540 g     F .text.itcm	0000000c EthernetClass::timer_get_ms()
6000aafc g     F .text.code	0000009c mbedtls_ecdsa_write_signature
0001a714 g     F .text.itcm	00000002 std::exception::~exception()
6000b858 g     F .text.code	00000008 mbedtls_ecp_curve_list
0001a298 g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000f580 g     F .text.itcm	0000008c fnet_socket_getpeername
60030ab0 g     O .text.progmem	000000e9 mbedtls_test_cli_key_ec
2000d1b8 g     O .bss	00000004 fnet_netif_list
60002fcc g     F .text.code	0000002a mbedtls_asn1_write_raw_buffer
00018a1c g     F .text.itcm	0000001c usb_receive
00022774 g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
20001980 g     O .data	00000014 vtable for std::bad_function_call
60002c64 g     F .text.code	000000b0 mbedtls_asn1_get_sequence_of
6001e4d8 g     F .text.code	00000012 mbedtls_ssl_pk_alg_from_sig
000142e8 g     F .text.itcm	0000004e websockets::WebsocketsClient::close(websockets::CloseReason)
6001d40c g     F .text.code	00000034 mbedtls_ssl_reset_checksum
0000b634 g     F .text.itcm	00000140 fnet_tls_init
200015e8 g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
0000e168 g     F .text.itcm	00000050 _fnet_netif_release
000159b8 g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
0000b514 g     F .text.itcm	0000000c fnet_service_mutex_unlock
0000e47c g     F .text.itcm	0000000c _fnet_netif_join_ip4_multicast
00008a9c g     F .text.itcm	0000001c EthernetClass::localIP()
6001c808 g     F .text.code	0000000a mbedtls_ssl_conf_min_version
6000f38c g     F .text.code	00000006 mbedtls_md_get_type
00022654 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
0000bb64 g     F .text.itcm	0000006c fnet_arp_get_mac
0000e514 g     F .text.itcm	0000001a fnet_netif_get_scope_id
0001b414 g     F .text.itcm	00000014 std::invalid_argument::invalid_argument(char const*)
00019d44  w    F .text.itcm	0000004e std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
60006060 g     F .text.code	000001f4 mbedtls_mpi_gen_prime
6001caf0 g     F .text.code	000001a0 mbedtls_ssl_config_defaults
60004e5c g     F .text.code	0000002c mbedtls_mpi_div_int
0000d9b0 g     F .text.itcm	00000080 _fnet_netbuf_new
00005d18  w    F .text.itcm	0000005c ArduinoJson::V702PB2::JsonDocument::JsonDocument(ArduinoJson::V702PB2::JsonDocument const&)
600227d4  w    F .text.code	00000002 startup_early_hook
6000c114 g     F .text.code	00000034 mbedtls_ecp_tls_read_point
60009e24 g     F .text.code	0000012c mbedtls_dhm_make_params
6001702c g     F .text.code	0000000a mbedtls_sha512_clone
00025aa8 g     F .text.itcm	000002dc strcmp
00008538 g     F .text.itcm	00000004 EthernetClass::teensy_mutex_init(void**)
60018018 g     F .text.code	00000004 mbedtls_sha512_update
6001c6c4 g     F .text.code	00000006 mbedtls_ssl_conf_dhm_min_bitlen
60010d94 g     F .text.code	0000000a mbedtls_pk_init
0000cb38 g     F .text.itcm	0000005c _fnet_ip4_multicast_join
0001b43c g     F .text.itcm	00000014 std::out_of_range::out_of_range(char const*)
200078bc g     O .data	00000004 __malloc_trim_threshold
60020ecc g     F .text.code	00000028 mbedtls_x509_key_size_helper
0000dfd8 g     F .text.itcm	00000010 _fnet_free
60008290 g     F .text.code	00000084 mbedtls_cipher_auth_decrypt
60010f80 g     F .text.code	00000060 mbedtls_pk_sign
600366a8  w    O .text.progmem	00000001 _serialEvent_default
00008dd8 g     F .text.itcm	0000002c EthernetClient::read()
000180e8 g     F .text.itcm	00000060 tempmonGetTemp
000094d8 g     F .text.itcm	000000f0 EthernetServer::begin()
60012e8c g     F .text.code	00000074 mbedtls_rsa_import_raw
6001cae8 g     F .text.code	00000008 mbedtls_ssl_config_init
0002b4b0 g     F .text.itcm	000000b0 __swbuf_r
200078cc g     O .data	00000004 _impure_ptr
6000f624 g     F .text.code	0000000a mbedtls_md5_clone
0000fa9c g     F .text.itcm	00000020 fnet_socket_addr_is_multicast
6000b968 g     F .text.code	00000020 mbedtls_ecp_point_free
60008934 g     F .text.code	00000308 mbedtls_ctr_drbg_self_test
2000171c g     O .data	00000070 vtable for EthernetClient
600205fc g     F .text.code	00000004 mbedtls_x509_time_is_future
0002ba84 g       .ARM.exidx	00000000 __exidx_start
6003659f g     O .text.progmem	00000001 _serialEvent8_default
0002b90c g     F .text.itcm	00000066 _fputwc_r
0000685c  w    F .text.itcm	000002f4 ArduinoJson::V702PB2::detail::JsonDeserializer<ArduinoJson::V702PB2::detail::Reader<String, void> >::parseQuotedString()
60007ca0 g     F .text.code	00000050 mbedtls_cipher_setkey
00008e04 g     F .text.itcm	00000030 EthernetClient::peek()
00005d74  w    F .text.itcm	00000234 void ArduinoJson::V702PB2::detail::TextFormatter<ArduinoJson::V702PB2::detail::Writer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void> >::writeFloat<double>(double)
6001c7f4 g     F .text.code	00000006 mbedtls_ssl_get_alpn_protocol
00000000 g       .text.itcm	00000000 _stext
600049c4 g     F .text.code	0000001c mbedtls_mpi_mul_int
20001630 g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00018a9c  w    F .text.itcm	00000004 usb_serial_class::flush()
00009300 g     F .text.itcm	0000004c EthernetClient::operator==(EthernetClient const&)
00025924 g     F .text.itcm	000000a4 memset
600182d0 g     F .text.code	000000be mbedtls_ssl_cache_get
00009b54 g     F .text.itcm	0000001c EthernetClass::socketListen(unsigned char)
00000e00  w    F .text.itcm	000000b4 ArduinoJson::V702PB2::detail::ResourceManager::~ResourceManager()
6000ba78 g     F .text.code	00000006 mbedtls_ecp_group_copy
2000d114 g     O .bss	00000078 fnet_ip4_multicast_list
60001000 g     O .text.headers	00000020 ImageVectorTable
20280000 g       .text.csf	00000000 _heap_end
60009440 g     F .text.code	000000c4 mbedtls_des3_crypt_cbc
0000e1b8 g     F .text.itcm	00000040 _fnet_netif_release_all
600066f8 g     F .text.code	000004a4 mbedtls_camellia_setkey_enc
00014338 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
6001330c g     F .text.code	00000064 mbedtls_rsa_check_privkey
0001a71c g     F .text.itcm	00000008 std::bad_exception::what() const
6002023c g     F .text.code	000000f6 mbedtls_ssl_get_key_exchange_md_ssl_tls
6000166c g     F .text.code	00000228 mbedtls_aes_setkey_enc
70000000 g       .bss.extram	00000000 _extram_end
200019fc  w    O .data	000000c9 std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
20001690 g     O .data	00000012 typeinfo name for std::bad_exception
0000ffa4 g     F .text.itcm	0000001a fnet_strcpy
00018960 g     F .text.itcm	00000064 usb_config_tx
6000f3c4 g     F .text.code	00000014 mbedtls_md_finish
0001af1c g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
60008160 g     F .text.code	00000068 mbedtls_cipher_check_tag
000199c8 g     F .text.itcm	0000000e std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
60002a34 g     F .text.code	00000096 mbedtls_asn1_get_len
000174b8 g     F .text.itcm	000002f0 set_arm_clock
6000f58c g     F .text.code	00000070 mbedtls_md_hmac
0000d724 g     F .text.itcm	00000088 _fnet_mempool_free
00015978  w    F .text.itcm	00000006 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
2000733c g     O .data	00000004 __brkval
60004030 g     F .text.code	0000004e mbedtls_mpi_write_binary
6000acc4 g     F .text.code	00000004 mbedtls_ecdsa_free
2000d6a8 g     O .bss	00000001 usb_high_speed
00017184 g     F .text.itcm	00000060 IntervalTimer::end()
0001a71c g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
600227e0 g     F .text.code	00000004 startup_debug_reset
6000defc g     F .text.code	0000000a mbedtls_entropy_update_manual
00021884 g     F .text.itcm	00000042 .hidden __extendsfdf2
000180d4  w    F .text.itcm	00000004 _isatty
00015640 g     F .text.itcm	00000254 websockets::internals::WebsocketsEndpoint::handleFrameInStandardMode(websockets::internals::WebsocketsFrame&)
00013cec g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6001ca40 g     F .text.code	00000020 mbedtls_ssl_get_session
00013cec g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
00018a38 g     F .text.itcm	00000004 usb_transfer_status
60016d28 g     F .text.code	00000004 mbedtls_sha256_process
00028238 g     F .text.itcm	000000a0 _malloc_trim_r
00018a94  w    F .text.itcm	00000004 usb_serial_class::clear()
60014a6c g     F .text.code	000001fc mbedtls_rsa_deduce_primes
0002520c g     F .text.itcm	00000010 malloc
00001ec0  w    F .text.itcm	00000168 Network::reconnectToVideoHub(IPAddress, unsigned short)
00026570 g     F .text.itcm	000000f0 __lshift
0002265c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
0000e140 g     F .text.itcm	00000028 _fnet_netif_get_by_sockaddr
6001d20c g     F .text.code	00000126 mbedtls_ssl_free
20006f28 g     O .data	00000120 _impure_data
00022afc g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
2000bb50 g     O .bss	00000060 Serial8
6001c4d0 g     F .text.code	000000c0 mbedtls_ssl_conf_psk
60003f54 g     F .text.code	0000000c mbedtls_mpi_size
2000ba30 g     O .bss	00000060 Serial5
20007bb4  w    O .data	00000016 usb_string_serial_number
6001c428 g     F .text.code	00000006 mbedtls_ssl_conf_handshake_timeout
600227e4 g     F .text.code	000000f8 configure_cache
2000ba90 g     O .bss	00000060 Serial6
0001938c g     F .text.itcm	00000072 HardwareSerial::peek()
0000fdb4 g     F .text.itcm	00000018 _fnet_mutex_unlock
6000abb8 g     F .text.code	00000098 mbedtls_ecdsa_read_signature
00016c9c g     F .text.itcm	0000000c IRQHandler_Serial3
00015ad0 g     F .text.itcm	00000028 websockets::WebsocketsServer::available()
6001801c g     F .text.code	00000004 mbedtls_sha512_finish
000215a0 g     F .text.itcm	0000001a __cxa_current_exception_type
00016d20 g     F .text.itcm	0000000c IRQHandler_Serial4
60015114 g     F .text.code	00000e68 mbedtls_internal_sha1_process
0000f260 g     F .text.itcm	0000012c fnet_socket_accept
0000fde8 g     F .text.itcm	0000001c _fnet_stack_mutex_unlock
0000855c g     F .text.itcm	00000002 EthernetClass::teensy_mutex_lock(void**)
00008b04  w    F .text.itcm	00000004 EthernetClient::remotePort()
6001e398 g     F .text.code	00000104 mbedtls_ssl_psk_derive_premaster
6001c7fc g     F .text.code	0000000a mbedtls_ssl_conf_max_version
60030ba0 g     O .text.progmem	0000033d mbedtls_test_cli_crt_ec
0001a488 g     F .text.itcm	000000b0 __cxa_type_match
00026a80 g     F .text.itcm	00000016 _wcsrtombs_r
00016e28 g     F .text.itcm	0000000c IRQHandler_Serial6
0001b304 g     F .text.itcm	00000048 std::invalid_argument::~invalid_argument()
6001e010 g     F .text.code	00000058 mbedtls_ssl_renegotiate
000257ec g     F .text.itcm	000000f8 memmove
0001b034 g     F .text.itcm	00000004 std::type_info::__is_function_p() const
00016da4 g     F .text.itcm	0000000c IRQHandler_Serial5
60008f1c g     F .text.code	000000c4 mbedtls_des_crypt_cbc
00009efc g     F .text.itcm	00000078 fnet_cpu_isr_install
00012290 g     F .text.itcm	00000044 _fnet_timer_poll
00016eac g     F .text.itcm	0000000c IRQHandler_Serial7
2000d1b4 g     O .bss	00000004 fnet_netif_default
200018b4  w    O .data	00000028 vtable for websockets::network::Teensy41TcpServer
6001c590 g     F .text.code	00000074 mbedtls_ssl_set_hs_psk
60010288 g     F .text.code	00000044 mbedtls_oid_get_ec_grp
00016f30 g     F .text.itcm	0000000c IRQHandler_Serial8
00019ca0 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
00017e74 g     F .text.itcm	00000004 operator new(unsigned int)
200016a4 g     O .data	00000015 typeinfo name for std::invalid_argument
6001e348 g     F .text.code	0000001e mbedtls_ssl_write_change_cipher_spec
60005ff0 g     F .text.code	0000006e mbedtls_mpi_is_prime
000269b0 g     F .text.itcm	00000040 rand
70000000 g       .bss.extram	00000000 _extram_start
6006d800 g       .text.csf	00000000 __text_csf_end
6003659d g     O .text.progmem	00000001 _serialEvent6_default
6001c834 g     F .text.code	0000000e mbedtls_ssl_conf_extended_master_secret
60002e14 g     F .text.code	00000032 mbedtls_asn1_get_alg_null
00022c80 g     F .text.itcm	0000008a strncmp
2000ca18 g     O .bss	00000001 __lock___malloc_recursive_mutex
00019ec4  w    F .text.itcm	00000058 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00021ecc g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
6000e534 g     F .text.code	000000fa mbedtls_gcm_update
0000934c  w    F .text.itcm	00000004 Print::availableForWrite()
2000c80c g     O .bss	00000004 EthernetClass::socket_size
6002050c g     F .text.code	000000ec mbedtls_x509_serial_gets
6000f3f4 g     F .text.code	000000dc mbedtls_md_hmac_starts
6000fe60 g     F .text.code	00000004 mbedtls_md5_update
000190c4 g     F .text.itcm	0000002c usb_serial_putchar
6000a650 g     F .text.code	00000030 mbedtls_ecdh_read_public
00009008  w    F .text.itcm	0000004c EthernetClient::operator!=(bool)
00022664 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
0000b7dc g     F .text.itcm	0000005a fnet_tls_set_ca_certificate
60016e10 g     F .text.code	00000204 mbedtls_sha256_self_test
00021f9c g     F .text.itcm	00000002 .hidden _Unwind_Complete
6000a458 g     F .text.code	00000064 mbedtls_ecdh_compute_shared
6003058c g     O .text.progmem	00000004 mbedtls_test_ca_crt_rsa_len
60023038 g       .text.code	00000000 __preinit_array_end
6000b860 g     F .text.code	00000040 mbedtls_ecp_grp_id_list
60014398 g     F .text.code	00000074 mbedtls_rsa_pkcs1_verify
00025f20 g     F .text.itcm	000000ba strcpy
2000c820 g     O .bss	00000004 EthernetServer::server_port
6001c478 g     F .text.code	0000000e mbedtls_ssl_conf_ciphersuites_for_version
00017850 g     F .text.itcm	00000054 digitalWrite
0000bbd0 g     F .text.itcm	00000144 _fnet_arp_input
60002c14 g     F .text.code	00000050 mbedtls_asn1_get_bitstring_null
0001b1f4 g     F .text.itcm	00000040 std::out_of_range::~out_of_range()
6001cc90 g     F .text.code	00000066 mbedtls_ssl_config_free
00021fa0 g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
0000015c  w    F .text.itcm	00000018 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
00005760  w    F .text.itcm	00000190 ArduinoJson::V702PB2::detail::VariantData* ArduinoJson::V702PB2::detail::ObjectData::getOrAddMember<ArduinoJson::V702PB2::detail::JsonStringAdapter>(ArduinoJson::V702PB2::detail::JsonStringAdapter, ArduinoJson::V702PB2::detail::ResourceManager*)
0000fb24 g     F .text.itcm	00000024 _fnet_socket_addr_route
0000e368 g     F .text.itcm	00000038 _fnet_netif_set_hw_addr
600150c0 g     F .text.code	0000000a mbedtls_sha1_clone
200017d0  w    O .data	00000028 vtable for usb_serial_class
0000db9c g     F .text.itcm	00000020 _fnet_netbuf_from_buf
00009f74  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
2000153c g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
6000a8f8 g     F .text.code	000000ac mbedtls_ecdsa_sign_det
0001a25c g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
2000d66c g     O .bss	00000004 systick_safe_read
20001928 g     O .data	00000014 vtable for std::out_of_range
60030aac g     O .text.progmem	00000004 mbedtls_test_cli_key_ec_len
00008e84 g     F .text.itcm	000000a0 EthernetClient::connect(char const*, unsigned short, bool)
20007320 g     O .data	00000004 __cxxabiv1::__unexpected_handler
60003b90 g     F .text.code	0000007a mbedtls_mpi_shrink
00015980 g     F .text.itcm	00000038 websockets::WebsocketsServer::~WebsocketsServer()
2000187c  w    O .data	00000038 vtable for websockets::network::Teensy41TcpClient
60007dc0 g     F .text.code	00000018 mbedtls_cipher_reset
60018578 g     F .text.code	0000001c mbedtls_ssl_get_ciphersuite_sig_alg
0000af08 g     F .text.itcm	00000024 fnet_dhcp_cln_release
60014dac g     F .text.code	00000200 mbedtls_rsa_validate_params
60016110 g     F .text.code	00000004 mbedtls_sha1_process
0000bd14 g     F .text.itcm	0000009c _fnet_arp_send_request
6002cf68 g     O .text.progmem	00000004 mbedtls_test_cas_pem_len
000259c8 g     F .text.itcm	0000000c __cxa_atexit
60031318 g     O .text.progmem	00000004 mbedtls_test_ca_key_ec_len
6000b8c0 g     F .text.code	0000001c mbedtls_ecp_curve_info_from_tls_id
00013b80 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
6001e7cc g     F .text.code	0000005c mbedtls_ssl_recv_flight_completed
00014f6c g     F .text.itcm	000006d4 websockets::internals::WebsocketsEndpoint::handleFrameInStreamingMode(websockets::internals::WebsocketsFrame&)
000180bc  w    F .text.itcm	00000004 _read
6001df5c g     F .text.code	00000038 mbedtls_ssl_send_alert_message
60002afc g     F .text.code	00000052 mbedtls_asn1_get_bool
00018a3c g     F .text.itcm	00000058 usb_init_serialnumber
00000025 g       *ABS*	00000000 _teensy_model_identifier
6000f4d0 g     F .text.code	00000028 mbedtls_md_hmac_update
0001b234 g     F .text.itcm	00000040 std::invalid_argument::~invalid_argument()
000214bc g     F .text.itcm	000000e4 __cxa_call_unexpected
00025e48 g     F .text.itcm	000000d8 __smakebuf_r
00001104  w    F .text.itcm	00000218 ArduinoJson::V702PB2::detail::CollectionData::addSlot(ArduinoJson::V702PB2::detail::ResourceManager*)
00014338 g     F .text.itcm	000000b0 websockets::WebsocketsClient::~WebsocketsClient()
0000e25c g     F .text.itcm	00000018 fnet_netif_set_ip4_dns
20001550 g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
000261a0 g     F .text.itcm	00000012 _Bfree
00025a6c g     F .text.itcm	00000002 __retarget_lock_close_recursive
0002522c g     F .text.itcm	00000560 _malloc_r
60010e50 g     F .text.code	00000012 mbedtls_pk_can_do
000182a0 g     F .text.itcm	0000002c usb_stop_sof_interrupts
20007b34 g     O .data	00000004 mbedtls_test_srv_crt
000173b4 g     F .text.itcm	0000002a String::String(String&&)
0000e454 g     F .text.itcm	00000026 fnet_netif_init
00015ac4 g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
00008b10 g     F .text.itcm	00000024 EthernetClient::connect(IPAddress, unsigned short, bool)
000284e4 g     F .text.itcm	00000024 strnlen
00019cfc  w    F .text.itcm	00000048 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
000180c8  w    F .text.itcm	0000000a _fstat
60010e40 g     F .text.code	00000010 mbedtls_pk_get_bitlen
00003d70  w    F .text.itcm	000005d0 ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::StaticStringWriter>::result_type ArduinoJson::V702PB2::detail::VariantData::accept<ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::StaticStringWriter> >(ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::StaticStringWriter>&) const
0000cba8 g     F .text.itcm	00000070 _fnet_ip4_addr_is_broadcast
2000170c g     O .data	0000000d typeinfo name for std::type_info
0000f478 g     F .text.itcm	00000012 fnet_socket_send
00015ac4 g     F .text.itcm	0000000c websockets::WebsocketsServer::WebsocketsServer(websockets::network::TcpServer*)
6000873c g     F .text.code	00000004 mbedtls_ctr_drbg_set_prediction_resistance
20001900 g     O .data	00000014 vtable for std::logic_error
00013e24 g     F .text.itcm	000000a8 websockets::WebsocketsClient::available(bool)
60002578 g     F .text.code	000004bc mbedtls_aes_self_test
20000310 g     O .data	00000028 __mprec_bigtens
60004340 g     F .text.code	000000a2 mbedtls_mpi_cmp_mpi
0000f980 g     F .text.itcm	0000005a _fnet_socket_buffer_append_address
00027e60 g     F .text.itcm	000003d8 _realloc_r
0000ffc0 g     F .text.itcm	0000000e fnet_tolower
2000d69e g     O .bss	00000001 external_psram_size
00009be8 g     F .text.itcm	00000098 EthernetClass::socketRecv(unsigned char, unsigned char*, short)
6000fe6c g     F .text.code	00000060 mbedtls_md5_ret
6000a4bc g     F .text.code	0000000a mbedtls_ecdh_init
00013fac g     F .text.itcm	0000033c websockets::WebsocketsClient::poll()
6002ef90 g     O .text.progmem	00000004 mbedtls_test_srv_crt_rsa_len
2000ca14 g     O .bss	00000001 __lock___atexit_recursive_mutex
0002b5e8 g     F .text.itcm	0000002a __ascii_mbtowc
00022374  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
0002237c  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
2000167c g     O .data	00000011 typeinfo name for std::out_of_range
0001a1f8 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
0000a5d0 g     F .text.itcm	00000026 _fnet_dhcp_add_option
60022f7c g     F .text.code	00000000 _init
00002028  w    F .text.itcm	0000071c Logic::parseButton(int, bool)
0000df7c g     F .text.itcm	00000032 _fnet_netbuf_queue_del
600044d8 g     F .text.code	00000092 mbedtls_mpi_sub_abs
000170bc g     F .text.itcm	000000c8 IntervalTimer::beginCycles(void (*)(), unsigned long)
00017ef0  w    F .text.itcm	00000002 serialEvent3()
6002f444 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_rsa_len
0002236c g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
6000c0a0 g     F .text.code	00000074 mbedtls_ecp_point_read_binary
00009f80  w    F .text.itcm	00000004 usb_serial_class::read()
20007bb4 g     O .data	00000016 usb_string_serial_number_default
00021840 g     F .text.itcm	0000001e .hidden __floatunsidf
00025a78 g     F .text.itcm	0000000c __locale_mb_cur_max
6000f39c g     F .text.code	00000014 mbedtls_md_starts
00008d78 g     F .text.itcm	00000028 EthernetClient::write(unsigned char const*, unsigned int)
0000c1b0 g     F .text.itcm	00000014 _fnet_eth_release
60013114 g     F .text.code	00000120 mbedtls_rsa_export_raw
00013a80  w    F .text.itcm	0000000e std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
60021e40 g     F .text.code	00000020 mbedtls_x509_crt_verify
60001e50 g     F .text.code	0000007a mbedtls_aes_crypt_cfb128
600103a0 g     F .text.code	00000040 mbedtls_oid_get_oid_by_sig_alg
00021884 g     F .text.itcm	00000042 .hidden __aeabi_f2d
00000200  w    F .text.itcm	00000020 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
60014778 g     F .text.code	000002f4 mbedtls_rsa_self_test
6001e558 g     F .text.code	00000020 mbedtls_ssl_check_curve
60010df0 g     F .text.code	00000050 mbedtls_pk_setup_rsa_alt
00001d9c  w    F .text.itcm	00000124 Network::connectToVideoHub(IPAddress, unsigned short)
0001af30 g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6000f3b0 g     F .text.code	00000014 mbedtls_md_update
6001c7ac g     F .text.code	00000006 mbedtls_ssl_conf_sni
6001290c g     F .text.code	000000f0 mbedtls_pk_parse_subpubkey
60018154 g     F .text.code	00000168 mbedtls_sha512_self_test
00015af8 g     F .text.itcm	00000088 websockets::WebsocketsServer::listen(unsigned short)
6001a288 g     F .text.code	000019ac mbedtls_ssl_handshake_server_step
0000d420 g     F .text.itcm	000000d2 _fnet_ip4_setsockopt
20200020 g     O .bss.dma	00000062 usb_descriptor_buffer
20007ec0 g     O NonCacheable	0000261c fnet_fec0_buf
000122d4 g     F .text.itcm	00000012 fnet_timer_poll
0000f190 g     F .text.itcm	00000048 fnet_socket_shutdown
0000fb48 g     F .text.itcm	00000144 fnet_socket_poll
00025d7c g     F .text.itcm	000000cc __swsetup_r
2000d697 g     O .bss	00000001 EventResponder::runningFromYield
6000a5b0 g     F .text.code	0000004c mbedtls_ecdh_get_params
6001c8a8 g     F .text.code	0000000e mbedtls_ssl_conf_session_tickets
60008d28 g     F .text.code	000001f4 mbedtls_des_crypt_ecb
0000b904 g     F .text.itcm	00000020 fnet_tls_socket_close
00008da0 g     F .text.itcm	00000038 EthernetClient::read(unsigned char*, unsigned int)
0000b89c g     F .text.itcm	00000068 fnet_tls_socket
00023190 g     F .text.itcm	00000168 strstr
60013024 g     F .text.code	000000f0 mbedtls_rsa_export
6001c79c g     F .text.code	00000008 mbedtls_ssl_set_hs_ca_chain
000143fc  w    F .text.itcm	00000002 std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0000c074 g     F .text.itcm	0000000c fnet_error_get
000180d8  w    F .text.itcm	00000006 _lseek
60010da0 g     F .text.code	00000020 mbedtls_pk_free
0000df68 g     F .text.itcm	00000014 _fnet_netbuf_queue_add
6001c844 g     F .text.code	0000000e mbedtls_ssl_conf_cert_req_ca_list
000235ec g     F .text.itcm	000000aa _fwrite_r
60020834 g     F .text.code	000001e8 mbedtls_x509_get_rsassa_pss_params
00014598 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
60014fac g     F .text.code	00000100 mbedtls_rsa_validate_crt
00009840 g     F .text.itcm	000000f0 EthernetServer::accept()
00002744 g     F .text.itcm	00000508 setup
200016ec g     O .data	0000000d typeinfo name for std::bad_alloc
600132b4 g     F .text.code	00000006 mbedtls_rsa_set_padding
0000c2c8 g     F .text.itcm	0000003c _fnet_eth_multicast_join_ip4
60001020 g     O .text.headers	0000000c BootData
200078e4 g     O .data	0000005c fnet_cpu_eth0_if
60016108 g     F .text.code	00000004 mbedtls_sha1_update
60014670 g     F .text.code	00000106 mbedtls_rsa_copy
0000d71c g     F .text.itcm	00000006 _fnet_mempool_release
0000e4e4 g     F .text.itcm	0000001e fnet_netif_is_connected
60013bc8 g     F .text.code	000001a0 mbedtls_rsa_rsaes_oaep_decrypt
0001ad94 g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
60007be8 g     F .text.code	00000038 mbedtls_cipher_info_from_values
2000d664 g     O .bss	00000004 systick_cycle_count
000261b4 g     F .text.itcm	000000a4 __multadd
000189c4 g     F .text.itcm	00000030 usb_prepare_transfer
00022ac4 g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
60003b30 g     F .text.code	00000060 mbedtls_mpi_grow
00008d28 g     F .text.itcm	0000001c EthernetClient::availableForWrite()
200017ac g     O .data	00000024 vtable for HardwareSerial
00000f08  w    F .text.itcm	00000124 ArduinoJson::V702PB2::detail::VariantData::release(ArduinoJson::V702PB2::detail::ResourceManager*)
20002b5c g     O .data	00000004 fnet_dhcp_magic_cookie
60020a5c g     F .text.code	00000090 mbedtls_x509_get_sig_alg
6001c92c g     F .text.code	0000000c mbedtls_ssl_get_bytes_avail
6001c408 g     F .text.code	00000006 mbedtls_ssl_conf_export_keys_cb
0000c8c0 g     F .text.itcm	0000003a _fnet_ip_getsockopt
2000c824 g     O .bss	00000004 EthernetServer::tls_socket_ptr
0002be10 g       .text.itcm	00000000 _etext
000278ac g     F .text.itcm	00000024 _close_r
60002e48 g     F .text.code	00000028 mbedtls_asn1_find_named_data
60008714 g     F .text.code	0000000a mbedtls_ctr_drbg_init
60033db0 g     O .text.progmem	00000030 mbedtls_sha512_info
00000070  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::close()
60011a00 g     F .text.code	000001fc mbedtls_pkcs5_pbes2
60001fc0 g     F .text.code	000004b0 mbedtls_internal_aes_decrypt
6001c898 g     F .text.code	0000000e mbedtls_ssl_conf_cbc_record_splitting
000195cc g     F .text.itcm	00000164 HardwareSerial::IRQHandler()
600049e0 g     F .text.code	0000047c mbedtls_mpi_div_mpi
60017020 g     F .text.code	0000000a mbedtls_sha512_free
60001894 g     F .text.code	00000118 mbedtls_aes_setkey_dec
0000853c g     F .text.itcm	00000002 EthernetClass::teensy_mutex_release(void**)
60003238 g     F .text.code	00000050 mbedtls_asn1_write_printable_string
60017c40 g     F .text.code	000000a0 mbedtls_sha512_update_ret
6000e3c8 g     F .text.code	0000016a mbedtls_gcm_starts
0000ff2c g     F .text.itcm	0000000c fnet_memset_zero
60013a34 g     F .text.code	00000044 mbedtls_rsa_pkcs1_encrypt
000258e4 g     F .text.itcm	00000040 __assert_func
6001cd60 g     F .text.code	00000032 mbedtls_ssl_transform_free
6001cab0 g     F .text.code	00000038 mbedtls_ssl_handshake_step
60030ee4 g     O .text.progmem	000000e9 mbedtls_test_srv_key_ec
60007dd8 g     F .text.code	00000038 mbedtls_cipher_update_ad
60006b9c g     F .text.code	000000b4 mbedtls_camellia_setkey_dec
6001e6b8 g     F .text.code	00000114 mbedtls_ssl_write_finished
00017e84 g     F .text.itcm	00000062 ultoa
00019c08 g     F .text.itcm	00000030 std::__throw_invalid_argument(char const*)
60008850 g     F .text.code	000000d0 mbedtls_ctr_drbg_random_with_add
60009f98 g     F .text.code	00000028 mbedtls_dhm_read_public
2000d695 g     O .bss	00000001 EthernetClass::socket_num
2000c828 g     O .bss	00000004 EthernetServer::_tls
00002c4c g     F .text.itcm	00000084 resetInterface()
6001c64c g     F .text.code	0000003a mbedtls_ssl_conf_dh_param_bin
60012b34 g     F .text.code	00000010 mbedtls_platform_zeroize
6001d8d4 g     F .text.code	000000a8 mbedtls_ssl_flush_output
00019324 g     F .text.itcm	00000020 systick_isr
0000c880 g     F .text.itcm	0000003e _fnet_ip_setsockopt
600076dc g     F .text.code	00000014 mbedtls_ccm_free
0000fe04 g     F .text.itcm	00000120 fnet_memcpy
0001a538 g     F .text.itcm	00000064 __cxa_begin_cleanup
60022dec g     F .text.code	000000e8 usb_init
0000919c g     F .text.itcm	00000164 EthernetClient::available()
0000dfe8 g     F .text.itcm	00000010 _fnet_malloc
60003444 g     F .text.code	00000148 mbedtls_base64_encode
60013800 g     F .text.code	000000f4 mbedtls_rsa_rsaes_pkcs1_v15_encrypt
00002cd0 g     F .text.itcm	000004c8 buttonCallback(int, bool)
2000b800 g     O .bss	00000030 GPIs
00000174  w    F .text.itcm	00000020 websockets::network::Teensy41TcpClient::~Teensy41TcpClient()
6001e234 g     F .text.code	00000114 mbedtls_ssl_write_certificate
0000e01c g     F .text.itcm	0000000c _fnet_mem_release
60036588 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_next
00008498 g     F .text.itcm	00000006 DNSClient::begin(IPAddress const&)
200019f4  w    O .data	00000008 std::_Sp_make_shared_tag::_S_ti()::__tag
600365d4 g     O .text.progmem	00000062 usb_config_descriptor_12
60010c74 g     F .text.code	00000108 mbedtls_pem_write_buffer
00000074  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
00017efc  w    F .text.itcm	00000002 serialEvent6()
6000ba80 g     F .text.code	0000002a mbedtls_ecp_set_zero
20000000 g       .data	00000000 _sdata
000268cc g     F .text.itcm	000000cc strchr
6000f394 g     F .text.code	00000006 mbedtls_md_get_name
6001ca34 g     F .text.code	0000000a mbedtls_ssl_get_peer_cert
0000e488 g     F .text.itcm	0000000c _fnet_netif_leave_ip4_multicast
6000e630 g     F .text.code	000000d2 mbedtls_gcm_finish
0000b010 g     F .text.itcm	000001c8 fnet_dns_init
6001e1ec g     F .text.code	00000048 mbedtls_ssl_close_notify
2000731c g     O .data	00000004 __cxxabiv1::__terminate_handler
00015b80 g     F .text.itcm	00000068 websockets::WebsocketsServer::poll()
2000d668 g     O .bss	00000004 systick_millis_count
000227bc g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
aaaaafff g       *ABS*	00000000 _flexram_bank_config
00013cec g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&&)
60013370 g     F .text.code	0000003c mbedtls_rsa_check_pub_priv
60003e5c g     F .text.code	0000004a mbedtls_mpi_set_bit
0000c1c4 g     F .text.itcm	00000004 _fnet_eth_drain
60031800 g     O .text.progmem	00000158 mbedtls_cipher_definitions
000177a8 g     F .text.itcm	000000a8 delay
20007338 g     O .data	00000004 __atexit_recursive_mutex
0000d674 g     F .text.itcm	00000054 fnet_event_raise
20007c00 g     O .data	000002c0 _VectorsRam
0002b560 g     F .text.itcm	00000088 __register_exitproc
000282d8 g     F .text.itcm	0000020c _free_r
20001950  w    O .data	0000001c vtable for std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>
0001ad70 g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
6000e274 g     F .text.code	00000154 mbedtls_gcm_setkey
6001cff0 g     F .text.code	000000a8 mbedtls_ssl_setup
6000e7c8 g     F .text.code	00000016 mbedtls_gcm_free
60011508 g     F .text.code	00000008 mbedtls_pkcs12_pbe_sha1_rc4_128
0000e340 g     F .text.itcm	00000026 fnet_netif_get_hw_addr
00001cb4 g     F .text.itcm	00000068 startButtons(void (*)(int, bool))
600133ac g     F .text.code	00000090 mbedtls_rsa_public
000000d0  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
6001c75c g     F .text.code	00000040 mbedtls_ssl_set_hs_own_cert
0000b924 g     F .text.itcm	00000022 fnet_tls_socket_connect
60006f3c g     F .text.code	00000404 mbedtls_camellia_self_test
00019f60  w    F .text.itcm	0000019c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
60018390 g     F .text.code	000000dc mbedtls_ssl_cache_set
20006e70 g     O .data	00000084 usb_descriptor_list
0000f1d8 g     F .text.itcm	00000088 fnet_socket_listen
60007728 g     F .text.code	0000002c mbedtls_ccm_star_encrypt_and_tag
6002f448 g     O .text.progmem	0000000d mbedtls_test_ca_pwd_rsa
0000e0f4 g     F .text.itcm	00000028 _fnet_netif_drain
60006d78 g     F .text.code	000000e4 mbedtls_camellia_crypt_cbc
60009dc8 g     F .text.code	0000005a mbedtls_dhm_read_params
60018020 g     F .text.code	00000004 mbedtls_sha512_process
0000a3d8 g     F .text.itcm	000000ec fnet_fec_output
0000ea6c g     F .text.itcm	00000020 _fnet_socket_list_add
000199d8 g     F .text.itcm	0000002e std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000090f4  w    F .text.itcm	000000a8 EthernetClient::operator!=(EthernetClient const&)
0001a1f0 g     F .text.itcm	00000008 std::bad_alloc::what() const
0000fd9c g     F .text.itcm	00000018 _fnet_mutex_lock
6001846c g     F .text.code	00000008 mbedtls_ssl_cache_set_max_entries
20000000 g     O .data	00000280 endpoint_queue_head
20007b08 g     O .data	00000024 fnet_udp_prot_if
00003adc  w    F .text.itcm	00000294 void ArduinoJson::V702PB2::detail::TextFormatter<ArduinoJson::V702PB2::detail::StaticStringWriter>::writeFloat<double>(double)
0001a2f8 g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
60002d14 g     F .text.code	00000048 mbedtls_asn1_get_mpi
60013db0 g     F .text.code	000000f8 mbedtls_rsa_rsassa_pkcs1_v15_sign
00014470 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6000edd4 g     F .text.code	00000072 mbedtls_hmac_drbg_reseed
6000a454 g     F .text.code	00000004 mbedtls_ecdh_gen_public
000018b4  w    F .text.itcm	00000400 Settings::writeDefaults()
600043e4 g     F .text.code	00000030 mbedtls_mpi_cmp_int
60010424 g     F .text.code	00000044 mbedtls_oid_get_md_hmac
00014dc0 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::ping(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
20200008 g     O .bss.dma	00000004 EthernetClass::socket_buf_len
0000f9dc g     F .text.itcm	00000046 _fnet_socket_buffer_read_record
600098d0 g     F .text.code	00000020 mbedtls_des3_set2key_dec
60021e6c g     F .text.code	000000dc mbedtls_x509_crt_free
00019108 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00018ef8 g     F .text.itcm	000000e0 usb_serial_read
60003cdc g     F .text.code	0000007a mbedtls_mpi_safe_cond_assign
0001a27c g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
00022b1c  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
2000ca4c g     O .bss	00000004 __malloc_max_total_mem
60008d00 g     F .text.code	00000028 mbedtls_des_key_check_weak
0000be40 g     F .text.itcm	0000001e fnet_arp_send_request
0000a4c4 g     F .text.itcm	00000090 fnet_fec_multicast_join
200078c0 g     O .data	0000000c __sglue
000173e0 g     F .text.itcm	0000000e String::~String()
2000d2a8 g     O .bss	000000ac mbedtls_cipher_supported
0001b174 g     F .text.itcm	00000040 std::logic_error::~logic_error()
00015960  w    F .text.itcm	00000002 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
60018474 g     F .text.code	0000002c mbedtls_ssl_cache_free
20001b78 g     O .data	00000101 _ctype_
000278d0 g     F .text.itcm	00000130 __sflush_r
0000e504 g     F .text.itcm	00000010 _fnet_netif_signal_ip4_addr_conflict
60001660 g     F .text.code	0000000c mbedtls_aes_free
0000ca88 g     F .text.itcm	0000003c _fnet_ip4_set_socket_addr
60007d7c g     F .text.code	00000044 mbedtls_cipher_set_iv
00025fdc g     F .text.itcm	00000028 printf
20001668 g     O .data	00000011 typeinfo name for std::length_error
00021934 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
600150ac g     F .text.code	00000008 mbedtls_sha1_init
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00014548 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
600227d8  w    F .text.code	00000002 startup_middle_hook
2000c830 g     O .bss	00000004 EventResponder::lastInterrupt
0000d620 g     F .text.itcm	00000054 fnet_isr_unlock
2000a520 g     O .bss	00000020 endpoint0_transfer_data
00027bc8 g     F .text.itcm	0000000c __sfp_lock_release
000215bc g     F .text.itcm	00000000 .hidden __aeabi_drsub
60002fa8 g     F .text.code	00000022 mbedtls_asn1_write_tag
0001b1b4 g     F .text.itcm	00000040 std::length_error::~length_error()
00013c44 g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
2000196c g     O .data	00000014 vtable for std::invalid_argument
0000b458 g     F .text.itcm	00000038 fnet_service_poll
6000980c g     F .text.code	0000000a mbedtls_des_setkey_enc
20007bce g     O .data	00000001 yield_active_check_flags
6001e828 g     F .text.code	000000a0 mbedtls_ssl_resend
6001ca60 g     F .text.code	00000050 mbedtls_ssl_handshake
0001a718 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
0001a1c4  w    F .text.itcm	0000002c std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0001af88 g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00023698 g     F .text.itcm	00000020 fwrite
000136ec g     F .text.itcm	00000324 websockets::crypto::websocketsHandshakeEncodeKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
60022c60 g     F .text.code	0000005c usb_pll_start
6000e268 g     F .text.code	0000000a mbedtls_gcm_init
0001a8dc g     F .text.itcm	00000494 __gxx_personality_v0
60002484 g     F .text.code	000000ea mbedtls_aes_crypt_cbc
00017994 g     F .text.itcm	00000048 eeprom_initialize
6001e4c0 g     F .text.code	00000018 mbedtls_ssl_sig_from_pk_alg
00000074  w    F .text.itcm	00000002 websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
6001f990 g     F .text.code	0000005e mbedtls_ssl_read_record
6001c814 g     F .text.code	0000000e mbedtls_ssl_conf_fallback
60031304 g     O .text.progmem	00000004 mbedtls_test_ca_pwd_ec_len
60010e64 g     F .text.code	00000058 mbedtls_pk_verify
000017b4  w    F .text.itcm	00000100 Settings::Settings()
600076f0 g     F .text.code	00000036 mbedtls_ccm_encrypt_and_tag
60008828 g     F .text.code	00000026 mbedtls_ctr_drbg_update
00027b80 g     F .text.itcm	0000003c __sinit
0000e494 g     F .text.itcm	0000004e _fnet_netif_is_connected
20000338 g     O .data	000000c8 __mprec_tens
6002e3c8 g     O .text.progmem	00000517 mbedtls_test_cli_crt_rsa
600087d4 g     F .text.code	00000052 mbedtls_ctr_drbg_seed
00022774 g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
00000e00  w    F .text.itcm	000000b4 ArduinoJson::V702PB2::detail::ResourceManager::~ResourceManager()
6001c8e0 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation_period
60010dc0 g     F .text.code	00000030 mbedtls_pk_setup
00008560 g     F .text.itcm	00000050 EthernetClass::link_callback(void*, fnet_bool_t, void*)
00016b88 g     F .text.itcm	0000000e websockets::internals::fromInternalString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
6001a238 g     F .text.code	00000008 mbedtls_ssl_conf_dtls_cookies
6000c948 g     F .text.code	000000a4 mbedtls_ecp_gen_keypair_base
000198c4  w    F .text.itcm	00000002 serialEvent()
000287c0 g     F .text.itcm	00001bd4 _vfprintf_r
200074b0 g     O .data	00000408 __malloc_av_
0000a554 g     F .text.itcm	0000007c fnet_fec_multicast_leave
000000fc  w    F .text.itcm	00000012 websockets::network::Teensy41TcpServer::available()
00019730 g     F .text.itcm	0000007a flexpwm_init
600365d0 g     O .text.progmem	00000004 string0
00014540 g     F .text.itcm	00000008 websockets::internals::swapEndianess(unsigned long long)
600185e4 g     F .text.code	0000002c mbedtls_ssl_get_ciphersuite_id
0001b030 g     F .text.itcm	00000002 std::type_info::~type_info()
00022b1c  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
6001e624 g     F .text.code	00000026 mbedtls_ssl_write_version
0002b860 g     F .text.itcm	000000aa __fputwc
000122e8 g     F .text.itcm	00000040 _fnet_timer_new
0000c9ec g     F .text.itcm	00000048 _fnet_ip4_release
600100a4 g     F .text.code	000000dc mbedtls_oid_get_numeric_string
200016fc g     O .data	0000000d typeinfo name for std::exception
60034520 g     O .text.progmem	00000030 mbedtls_eckey_info
0000ca34 g     F .text.itcm	00000044 _fnet_ip4_route
0000dde0 g     F .text.itcm	00000008 _fnet_netbuf_trim
60003af8 g     F .text.code	0000000e mbedtls_mpi_init
600228dc g     F .text.code	00000384 configure_external_ram
2000ca50 g     O .bss	00000004 __malloc_top_pad
00022384 g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
00022d0c g     F .text.itcm	00000064 strncpy
0000ea50 g     F .text.itcm	0000001a _fnet_socket_set_error
00003910  w    F .text.itcm	000001cc ArduinoJson::V702PB2::detail::FloatParts<double>::FloatParts(double)
6000460c g     F .text.code	00000072 mbedtls_mpi_add_int
00019ca0 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
60036568 g     O .text.progmem	00000010 mbedtls_x509_crt_profile_default
20007b2c g     O .data	00000004 mbedtls_test_ca_crt
600132c0 g     F .text.code	0000004c mbedtls_rsa_check_pubkey
6000de14 g     F .text.code	00000002 mbedtls_entropy_gather
2000a500 g     O .bss	00000020 endpoint0_transfer_ack
2000cb8c g     O .bss	00000004 __stdio_exit_handler
60002e70 g     F .text.code	00000020 mbedtls_asn1_free_named_data
6001d97c g     F .text.code	000005e0 mbedtls_ssl_write_record
00022674 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
00019a08 g     F .text.itcm	00000038 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
000095c8 g     F .text.itcm	00000210 EthernetServer::available()
00018aa4  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
60011bfc g     F .text.code	000000f0 mbedtls_pkcs5_self_test
00008b84 g     F .text.itcm	000000ac EthernetClient::connect(char const*, unsigned short)
6000b8dc g     F .text.code	0000002c mbedtls_ecp_curve_info_from_name
0000dc58 g     F .text.itcm	00000040 _fnet_netbuf_free_chain
2000d6a6 g     O .bss	00000001 usb_cdc_line_rtsdtr
6000f610 g     F .text.code	00000008 mbedtls_md5_init
0002607c g     F .text.itcm	00000010 putchar
0001b394 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
00025a68 g     F .text.itcm	00000002 __retarget_lock_init_recursive
0000c654 g     F .text.itcm	0000010c _fnet_icmp4_error
0000b948 g     F .text.itcm	00000010 fnet_tls_socket_set_hostname
00017458 g     F .text.itcm	00000026 String::String(char const*)
6000ca08 g     F .text.code	0000002e mbedtls_ecp_gen_key
60011030 g     F .text.code	0000004c mbedtls_pk_check_pair
000179dc g     F .text.itcm	0000007c eeprom_read_byte
60022cbc g     F .text.code	00000130 tempmon_init
0000d4f4 g     F .text.itcm	00000040 _fnet_isr_handler
60016d24 g     F .text.code	00000004 mbedtls_sha256_finish
2000193c g     O .data	00000014 vtable for std::bad_exception
00017f08 g     F .text.itcm	00000180 unused_interrupt_vector
600211d0 g     F .text.code	000006ec mbedtls_x509_crt_info
000198a0 g     F .text.itcm	00000024 rtc_get
2000ca20 g     O .bss	00000028 __malloc_current_mallinfo
0000dc28 g     F .text.itcm	00000030 _fnet_netbuf_free
60020708 g     F .text.code	0000010c mbedtls_x509_get_name
6000a2d0 g     F .text.code	0000010c mbedtls_dhm_parse_dhm
2000ca54 g     O .bss	00000138 __sf
0000ea8c g     F .text.itcm	00000028 _fnet_socket_list_del
00017350 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
60010c4c g     F .text.code	00000026 mbedtls_pem_free
6001440c g     F .text.code	0000006e mbedtls_rsa_free
0000fc8c g     F .text.itcm	000000e4 fnet_init
0000c378 g     F .text.itcm	0000010c _fnet_eth_phy_init
6000fed0 g     F .text.code	0000009c mbedtls_md5_self_test
2000d69d g     O .bss	00000001 didJustRestart
2000c884 g     O .bss	00000190 __atexit0
0001901c g     F .text.itcm	00000018 usb_serial_available
00000078  w    F .text.itcm	00000006 websockets::network::Teensy41TcpServer::getSocket() const
0002266c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
0002be14 g       .ARM.exidx	00000000 __exidx_end
2000d684 g     O .bss	00000004 usb_timer0_callback
0000dde8 g     F .text.itcm	0000014e _fnet_netbuf_cut_center
60034490 g     O .text.progmem	00000030 mbedtls_rsa_alt_info
6000de18 g     F .text.code	000000e2 mbedtls_entropy_func
6001c3a8 g     F .text.code	0000000e mbedtls_ssl_conf_authmode
00017480 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000004d4  w    F .text.itcm	00000090 std::_Function_handler<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage), void (*)(websockets::WebsocketsClient&, websockets::WebsocketsMessage)>::_M_invoke(std::_Any_data const&, websockets::WebsocketsClient&, websockets::WebsocketsMessage&&)
600366a6  w    O .text.progmem	00000001 _serialEventUSB2_default
6000f384 g     F .text.code	00000006 mbedtls_md_get_size
00019998 g     F .text.itcm	0000000a __aeabi_atexit
60007c20 g     F .text.code	00000008 mbedtls_cipher_init
6003659b g     O .text.progmem	00000001 _serialEvent4_default
000099b0 g     F .text.itcm	00000044 EthernetClass::socketClose(unsigned char)
200015ac g     O .data	0000000c typeinfo for std::bad_alloc
0001b1b4 g     F .text.itcm	00000040 std::length_error::~length_error()
60009f50 g     F .text.code	00000048 mbedtls_dhm_set_group
600185b0 g     F .text.code	0000000e mbedtls_ssl_ciphersuite_uses_psk
60014c68 g     F .text.code	000000c8 mbedtls_rsa_deduce_private_exponent
200016bc g     O .data	00000016 typeinfo name for std::bad_function_call
00015c98  w    F .text.itcm	00000136 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0002a48c g     F .text.itcm	00000018 __sprint_r
00000488  w    F .text.itcm	0000004a VideoHub::~VideoHub()
0001b43c g     F .text.itcm	00000014 std::out_of_range::out_of_range(char const*)
0000d534 g     F .text.itcm	00000048 _fnet_isr_vector_init
200002c8  w    O .data	00000048 ArduinoJson::V702PB2::detail::FloatTraits<double, 8u>::positiveBinaryPowersOfTen()::factors
202030a0 g       .bss.dma	00000000 _heap_start
0002864c g     F .text.itcm	00000046 _fwalk_sglue
6001e49c g     F .text.code	00000022 mbedtls_ssl_sig_from_pk
00015964  w    F .text.itcm	00000004 std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
00001d50  w    F .text.itcm	0000004c VideoHub::resetStates()
600365a0  w    O .text.progmem	00000016 usb_string_product_name
6000ba18 g     F .text.code	00000030 mbedtls_ecp_keypair_free
00009f7c  w    F .text.itcm	00000004 usb_serial_class::available()
00022df0 g     F .text.itcm	00000086 _fputs_r
6000f308 g     F .text.code	0000004c mbedtls_md_setup
000143e8 g     F .text.itcm	00000014 websockets::WebsocketsClient::~WebsocketsClient()
60036598 g     O .text.progmem	00000001 _serialEvent1_default
0001b2bc g     F .text.itcm	00000048 std::out_of_range::~out_of_range()
000267f8 g     F .text.itcm	000000d4 __d2b
60016114 g     F .text.code	00000068 mbedtls_sha1_ret
6002e8e0 g     O .text.progmem	00000004 mbedtls_test_srv_key_rsa_len
0000ed34 g     F .text.itcm	00000038 _fnet_socket_copy
6001c3d0 g     F .text.code	0000000c mbedtls_ssl_set_bio
2000d680 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
000055d0  w    F .text.itcm	00000190 ArduinoJson::V702PB2::detail::JsonSerializer<ArduinoJson::V702PB2::detail::StaticStringWriter>::visit(ArduinoJson::V702PB2::detail::ObjectData const&)
6001c938 g     F .text.code	00000014 mbedtls_ssl_get_verify_result
60018554 g     F .text.code	00000022 mbedtls_ssl_get_ciphersuite_sig_pk_alg
60017ce0 g     F .text.code	0000023c mbedtls_sha512_finish_ret
60021990 g     F .text.code	00000060 mbedtls_x509_crt_check_extended_key_usage
0001b414 g     F .text.itcm	00000014 std::invalid_argument::invalid_argument(char const*)
60010208 g     F .text.code	00000044 mbedtls_oid_get_pk_alg
60030fd4 g     O .text.progmem	0000032d mbedtls_test_srv_crt_ec
00007558 g     F .text.itcm	00000d48 websocketMessageCallback(websockets::WebsocketsClient&, websockets::WebsocketsMessage)
00001d1c g     F .text.itcm	00000034 pollButtons()
00022798 g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
00014850 g     F .text.itcm	0000002c websockets::internals::WebsocketsEndpoint::poll()
60006e5c g     F .text.code	0000007e mbedtls_camellia_crypt_cfb128
600118fc g     F .text.code	00000104 mbedtls_pkcs5_pbkdf2_hmac
2000704c g     O .data	00000004 F_CPU_ACTUAL
00016c18 g     F .text.itcm	0000000c IRQHandler_Serial2
60002574 g     F .text.code	00000004 mbedtls_aes_decrypt
00016b98 g     F .text.itcm	0000000c IRQHandler_Serial1
600365b8 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20007340 g     O .data	00000000 .hidden __dso_handle
6001c7a4 g     F .text.code	00000008 mbedtls_ssl_set_hs_authmode
000262f8 g     F .text.itcm	0000005c __i2b
60012e08 g     F .text.code	00000016 mbedtls_rsa_init
000180c0  w    F .text.itcm	00000006 _close
00027bbc g     F .text.itcm	0000000c __sfp_lock_acquire
2000baf0 g     O .bss	00000060 Serial7
00014dec g     F .text.itcm	0000009c websockets::internals::WebsocketsEndpoint::close(websockets::CloseReason)
00008a18 g     F .text.itcm	00000038 EthernetClass::begin(unsigned char*, IPAddress, IPAddress, IPAddress)
60007c48 g     F .text.code	00000058 mbedtls_cipher_setup
00008f24 g     F .text.itcm	000000e4 EthernetClient::connectPoll()
6001f9f0 g     F .text.code	00000218 mbedtls_ssl_read
6000ac50 g     F .text.code	00000032 mbedtls_ecdsa_genkey
000197ac g     F .text.itcm	000000f4 pwm_init
6001d334 g     F .text.code	000000d8 mbedtls_ssl_handshake_wrapup
6001c438 g     F .text.code	00000034 mbedtls_ssl_set_session
0001a73c g     F .text.itcm	00000008 __cxa_get_globals
2000b970 g     O .bss	00000060 Serial3
00014598 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&&)
2000d696 g     O .bss	00000001 EthernetClass::link_status
60031308 g     O .text.progmem	0000000d mbedtls_test_ca_pwd_ec
0001b234 g     F .text.itcm	00000040 std::invalid_argument::~invalid_argument()
200078b8 g     O .data	00000004 __malloc_sbrk_base
20002c84 g     O .data	00000004 mbedtls_test_cli_crt_len
2000b9d0 g     O .bss	00000060 Serial4
000285a4 g     F .text.itcm	0000003e __swrite
6000f1b8 g     F .text.code	00000008 mbedtls_md_list
2000bc2c g     O .bss	0000084c VideoHub
2000b8b0 g     O .bss	00000060 Serial1
6000db2c g     F .text.code	0000013c mbedtls_ecp_group_load
60022ed4 g     F .text.code	00000054 _reboot_Teensyduino_
000099f4 g     F .text.itcm	00000160 EthernetClass::socketBegin(unsigned char, unsigned short)
20007ac0 g     O .data	00000024 fnet_raw_prot_if
0000fdcc g     F .text.itcm	0000001c _fnet_stack_mutex_lock
6002dd18 g     O .text.progmem	000006ab mbedtls_test_cli_key_rsa
2000b910 g     O .bss	00000060 Serial2
00000240  w    F .text.itcm	00000070 websockets::network::Teensy41TcpServer::listen(unsigned short)
0000d6dc g     F .text.itcm	0000003e _fnet_mempool_init
00019e00  w    F .text.itcm	000000aa std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
2000186c g     O .data	00000010 vtable for websockets::WebsocketsServer
0002b614 g     F .text.itcm	000000c6 _fclose_r
2000b878 g     O .bss	00000038 Network
00014470 g     F .text.itcm	00000064 websockets::internals::WebsocketsEndpoint::~WebsocketsEndpoint()
6001efd8 g     F .text.code	000009b8 mbedtls_ssl_read_record_layer
00019494 g     F .text.itcm	0000001a HardwareSerial::flush()
6000a9a4 g     F .text.code	00000158 mbedtls_ecdsa_verify
000286c0 g     F .text.itcm	00000100 __ssprint_r
600032d8 g     F .text.code	00000072 mbedtls_asn1_write_bitstring
2000d688 g     O .bss	00000004 usb_timer1_callback
60002acc g     F .text.code	0000002e mbedtls_asn1_get_tag
2000c83c g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00009d74 g     F .text.itcm	00000006 fnet_htons
0000c080 g     F .text.itcm	0000000c fnet_error_set
00026154 g     F .text.itcm	0000004c _Balloc
00019eac  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0000ff60 g     F .text.itcm	00000018 fnet_strlen
2000d698 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
60008cd4 g     F .text.code	0000002c mbedtls_des_key_check_key_parity
6001c398 g     F .text.code	0000000e mbedtls_ssl_conf_transport
60003e3c g     F .text.code	00000020 mbedtls_mpi_get_bit
600150b4 g     F .text.code	0000000a mbedtls_sha1_free
6001c46c g     F .text.code	0000000a mbedtls_ssl_conf_ciphersuites
60017018 g     F .text.code	00000008 mbedtls_sha512_init
00019d94  w    F .text.itcm	0000006a std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00017378 g     F .text.itcm	0000003a String::String(String const&)
60023038 g       .text.code	00000000 __preinit_array_start
6000f260 g     F .text.code	00000018 mbedtls_md_info_from_type
2000ca48 g     O .bss	00000004 __malloc_max_sbrked_mem
2000d44c g     O .bss	00000004 startTime
60009818 g     F .text.code	00000038 mbedtls_des_setkey_dec
6001107c g     F .text.code	00000028 mbedtls_pk_debug
60013d68 g     F .text.code	00000048 mbedtls_rsa_pkcs1_decrypt
00009d7c g     F .text.itcm	00000004 fnet_htonl
60008cac g     F .text.code	0000000c mbedtls_des3_free
2000cb98 g     O .bss	00000004 _fnet_timer_api
60008cb8 g     F .text.code	0000001c mbedtls_des_key_set_parity
00008e34 g     F .text.itcm	00000050 EthernetClient::write(unsigned char)
6001c3c0 g     F .text.code	00000006 mbedtls_ssl_conf_rng
0001b450  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
6006cc00 g     O .text.csf	00000c00 hab_csf
6001024c g     F .text.code	0000003c mbedtls_oid_get_oid_by_pk_alg
60013234 g     F .text.code	00000080 mbedtls_rsa_export_crt
6001e8c8 g     F .text.code	00000340 mbedtls_ssl_prepare_handshake_record
20007050 g     O .data	00000010 Serial
0002139c g     F .text.itcm	000000c4 __cxa_demangle
000093b0 g     F .text.itcm	00000128 EthernetServer::poll(void*)
00016ffc g     F .text.itcm	00000066 IPAddress::fromString(char const*)
0002272c g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
000285e4 g     F .text.itcm	00000020 __sseek
00026998 g     F .text.itcm	00000018 calloc
00028558 g     F .text.itcm	00000028 fiprintf
00017eec  w    F .text.itcm	00000002 serialEvent2()
60021958 g     F .text.code	00000038 mbedtls_x509_crt_check_key_usage
2000a4dc g       .bss	00000000 _sbss
00026004 g     F .text.itcm	00000076 _putc_r
600036fc g     F .text.code	000000c4 mbedtls_base64_self_test
00017334  w    F .text.itcm	0000001c _write
00000370  w    F .text.itcm	00000026 Logic::~Logic()
00000110  w    F .text.itcm	00000016 websockets::network::Teensy41TcpClient::poll()
60030b9c g     O .text.progmem	00000004 mbedtls_test_cli_crt_ec_len
00019320 g     F .text.itcm	00000004 pendablesrvreq_isr
60016aec g     F .text.code	00000088 mbedtls_sha256_update_ret
60016e0c g     F .text.code	00000004 mbedtls_sha256
600103e0 g     F .text.code	00000044 mbedtls_oid_get_md_alg
00013f10 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePing(websockets::WebsocketsMessage)
0000e5e4 g     F .text.itcm	0000003c _fnet_prot_release
6002dd14 g     O .text.progmem	00000004 mbedtls_test_cli_key_rsa_len
2000c85c  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
6001173c g     F .text.code	000001c0 mbedtls_pkcs12_pbe
6001c7b4 g     F .text.code	00000040 mbedtls_ssl_conf_alpn_protocols
6000a4c8 g     F .text.code	00000048 mbedtls_ecdh_free
60033e40 g     O .text.progmem	00000030 mbedtls_sha224_info
60007b68 g     F .text.code	00000034 mbedtls_cipher_list
00014598 g     F .text.itcm	000000e8 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(websockets::internals::WebsocketsEndpoint const&)
00012284 g     F .text.itcm	0000000c fnet_timer_get_ms
6000dd9c g     F .text.code	00000024 mbedtls_entropy_init
60036599 g     O .text.progmem	00000001 _serialEvent2_default
6000ab98 g     F .text.code	00000020 mbedtls_ecdsa_write_signature_det
0000e564 g     F .text.itcm	00000024 _fnet_netif_get_by_scope_id
2000c880 g     O .bss	00000004 __atexit
0002267c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
600051dc g     F .text.code	00000368 mbedtls_mpi_exp_mod
0000af2c g     F .text.itcm	00000006 fnet_dhcp_cln_is_enabled
6000456c g     F .text.code	0000004e mbedtls_mpi_add_mpi
6001ec08 g     F .text.code	000000c4 mbedtls_ssl_handle_message_type
6000ddc0 g     F .text.code	00000020 mbedtls_entropy_free
00000148  w    F .text.itcm	00000012 websockets::network::Teensy41TcpClient::close()
0001b394 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
200019b0 g     O .data	00000014 vtable for std::bad_alloc
600365b8  w    O .text.progmem	00000018 usb_string_manufacturer_name
00013a5c  w    F .text.itcm	00000002 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
6001ef14 g     F .text.code	000000c4 mbedtls_ssl_dtls_replay_update
60018530 g     F .text.code	00000024 mbedtls_ssl_ciphersuite_from_id
0000e2f4 g     F .text.itcm	0000001a fnet_netif_set_ip4_addr_type
0000ff24 g     F .text.itcm	00000008 fnet_memset
20000280  w    O .data	00000048 ArduinoJson::V702PB2::detail::FloatTraits<double, 8u>::negativeBinaryPowersOfTen()::factors
6001c688 g     F .text.code	0000003c mbedtls_ssl_conf_dh_param_ctx
0000af34 g     F .text.itcm	00000034 fnet_dhcp_cln_get_by_netif
00008c30 g     F .text.itcm	00000034 EthernetClient::stop()
6001e64c g     F .text.code	00000030 mbedtls_ssl_read_version
60013ea8 g     F .text.code	000001c4 mbedtls_rsa_rsassa_pss_sign
6002010c g     F .text.code	00000130 mbedtls_ssl_parse_finished
0001a404 g     F .text.itcm	0000002e __cxa_allocate_exception
00013f78 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handleClose(websockets::WebsocketsMessage)
000227bc g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
000232f8 g     F .text.itcm	000002f4 __sfvwrite_r
000180e4 g     F .text.itcm	00000004 Panic_Temp_isr
00009c9c g     F .text.itcm	00000058 EthernetClass::socketSendAvailable(unsigned char)
00017ef8  w    F .text.itcm	00000002 serialEvent5()
20200004 g     O .bss.dma	00000004 EthernetClass::socket_buf_receive
0000eba8 g     F .text.itcm	000000e0 _fnet_socket_lookup
0000e530 g     F .text.itcm	00000034 fnet_netif_get_by_scope_id
00013ecc g     F .text.itcm	00000042 websockets::WebsocketsClient::send(char const*)
6001eccc g     F .text.code	000001c4 mbedtls_ssl_fetch_input
200018dc g     O .data	00000010 vtable for websockets::internals::WebsocketsEndpoint
0000fd70 g     F .text.itcm	0000000e fnet_poll
00014e88 g     F .text.itcm	000000e4 websockets::internals::WebsocketsEndpoint::handleMessageInternally(websockets::WebsocketsMessage&)
6000ece8 g     F .text.code	00000004 mbedtls_hmac_drbg_set_entropy_len
6000b988 g     F .text.code	0000008e mbedtls_ecp_group_free
6001c388 g     F .text.code	0000000e mbedtls_ssl_conf_endpoint
00017318 g     F .text.itcm	0000001c Print::println()
00019344 g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
00014968 g     F .text.itcm	000000f8 websockets::internals::readData[abi:cxx11](websockets::network::TcpClient&, unsigned long long)
6000c1d0 g     F .text.code	00000048 mbedtls_ecp_tls_write_group
000001a4  w    F .text.itcm	00000054 websockets::network::Teensy41TcpClient::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00017458 g     F .text.itcm	00000026 String::String(char const*)
0000cb94 g     F .text.itcm	00000014 _fnet_ip4_multicast_leave_entry
00022704 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
6001072c g     F .text.code	0000000a mbedtls_pem_init
0000e3a0 g     F .text.itcm	000000b4 _fnet_netif_init
6000334c g     F .text.code	00000050 mbedtls_asn1_write_octet_string
2000c808 g     O .bss	00000004 EthernetClass::socket_ptr
6000b8a0 g     F .text.code	00000020 mbedtls_ecp_curve_info_from_grp_id
000198c8 g     F .text.itcm	0000004c sm_align_pool
6001c824 g     F .text.code	0000000e mbedtls_ssl_conf_encrypt_then_mac
00014548 g     F .text.itcm	00000050 websockets::internals::WebsocketsEndpoint::WebsocketsEndpoint(std::shared_ptr<websockets::network::TcpClient>, websockets::FragmentsPolicy)
0000e310 g     F .text.itcm	00000030 _fnet_netif_get_hw_addr
6000c844 g     F .text.code	00000090 mbedtls_ecp_muladd
6000f5fc g     F .text.code	00000014 mbedtls_md_process
0000c1f8 g     F .text.itcm	00000094 _fnet_eth_output_ip4
0002a4a4 g     F .text.itcm	00000f8c _vfiprintf_r
00019158 g     F .text.itcm	00000094 usb_serial_flush_output
00022af0 g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
6000ed88 g     F .text.code	0000004a mbedtls_hmac_drbg_seed_buf
600226c8 g     F .text.code	0000010c mbedtls_x509_crt_parse
0000c7f8 g     F .text.itcm	00000004 fnet_inet_aton
6001c430 g     F .text.code	00000008 mbedtls_ssl_conf_session_cache
000085b0 g     F .text.itcm	00000254 EthernetClass::begin(unsigned char*, unsigned long, unsigned long)
6001c60c g     F .text.code	00000040 mbedtls_ssl_conf_dh_param
0000e620 g     F .text.itcm	0000005c _fnet_prot_find
6001c94c g     F .text.code	00000010 mbedtls_ssl_get_ciphersuite
00022d8c g     F .text.itcm	00000064 fputc
200015c0 g     O .data	00000008 typeinfo for std::type_info
60020024 g     F .text.code	000000e8 mbedtls_ssl_parse_change_cipher_spec
000189f4 g     F .text.itcm	00000028 usb_transmit
0001224c g     F .text.itcm	0000001c _fnet_timer_init
2000d378 g     O .bss	0000000c resetButton
00008b7c g     F .text.itcm	00000006 EthernetClient::close()
60003084 g     F .text.code	0000003c mbedtls_asn1_write_null
600227dc  w    F .text.code	00000002 startup_late_hook
600203e0 g     F .text.code	0000012c mbedtls_x509_dn_gets
600185c0 g     F .text.code	00000024 mbedtls_ssl_get_ciphersuite_name
0002608c g     F .text.itcm	000000a0 _puts_r
00022798 g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
0000d3b8 g     F .text.itcm	00000066 _fnet_ip4_getsockopt
20002b60 g     O .data	00000006 fnet_eth_broadcast
6000bffc g     F .text.code	000000a4 mbedtls_ecp_point_write_binary
6001e578 g     F .text.code	00000020 mbedtls_ssl_check_sig_hash
000001f8  w    F .text.itcm	00000006 ArduinoJson::V702PB2::detail::DefaultAllocator::allocate(unsigned int)
0002860c g     F .text.itcm	0000001a __ascii_wctomb
0000c11c g     F .text.itcm	00000070 _fnet_eth_output
600184a0 g     F .text.code	00000060 mbedtls_ssl_list_ciphersuites
60012f00 g     F .text.code	00000124 mbedtls_rsa_complete
60033e70 g     O .text.progmem	00000030 mbedtls_sha1_info
600140ac g     F .text.code	000000ec mbedtls_rsa_rsassa_pkcs1_v15_verify
2000d6a7 g     O .bss	00000001 usb_configuration
000159b8 g     F .text.itcm	00000028 websockets::WebsocketsServer::~WebsocketsServer()
600182bc g     F .text.code	00000014 mbedtls_ssl_cache_init
000188fc g     F .text.itcm	00000064 usb_config_rx
6001c6d4 g     F .text.code	00000088 mbedtls_ssl_set_hostname
0000cac4 g     F .text.itcm	00000038 _fnet_ip4_input
6001e4ec g     F .text.code	00000010 mbedtls_ssl_md_alg_from_hash
00003910  w    F .text.itcm	000001cc ArduinoJson::V702PB2::detail::FloatParts<double>::FloatParts(double)
600162a0 g     F .text.code	00000008 mbedtls_sha256_init
6001406c g     F .text.code	00000040 mbedtls_rsa_pkcs1_sign
60010d7c g     F .text.code	00000018 mbedtls_pk_info_from_type
60020e0c g     F .text.code	000000c0 mbedtls_x509_sig_alg_gets
2000d678 g     O .bss	00000008 usb_cdc_line_coding
0000af68 g     F .text.itcm	00000030 fnet_dhcp_cln_get_options
6001c3e4 g     F .text.code	0000001c mbedtls_ssl_set_timer_cb
00017e7c g     F .text.itcm	00000004 operator delete(void*)
00021860 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00022b16 g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
0001a20c g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
2000ca1c g     O .bss	00000001 __lock___sfp_recursive_mutex
0001ad80 g     F .text.itcm	00000014 std::terminate()
6000c218 g     F .text.code	00000578 mbedtls_ecp_mul
60021a28 g     F .text.code	00000418 mbedtls_x509_crt_verify_with_profile
600101c4 g     F .text.code	00000044 mbedtls_oid_get_attr_short_name
00017e78 g     F .text.itcm	00000004 operator new[](unsigned int)
60007bc4 g     F .text.code	00000024 mbedtls_cipher_info_from_type
2000c818 g     O .bss	00000008 EthernetClass::_dnsServerAddress
6000339c g     F .text.code	000000a6 mbedtls_asn1_store_named_data
60002b50 g     F .text.code	00000060 mbedtls_asn1_get_int
00000088  w    F .text.itcm	00000006 ArduinoJson::V702PB2::detail::DefaultAllocator::deallocate(void*)
00017264 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
600186f0 g     F .text.code	000018a0 mbedtls_ssl_handshake_client_step
0000baec g     F .text.itcm	00000060 _fnet_arp_init
60009504 g     F .text.code	00000308 mbedtls_des_setkey
60004680 g     F .text.code	00000070 mbedtls_mpi_sub_int
6000a080 g     F .text.code	000001f4 mbedtls_dhm_calc_secret
0000b544 g     F .text.itcm	00000054 fnet_link_init
000194f0 g     F .text.itcm	000000d8 HardwareSerial::write9bit(unsigned long)
0000dfcc g     F .text.itcm	0000000c _fnet_malloc_max_netbuf
60005544 g     F .text.code	00000042 mbedtls_mpi_fill_random
6002f45c g     O .text.progmem	000006f6 mbedtls_test_ca_key_rsa
000002b0  w    F .text.itcm	000000a4 websockets::network::Teensy41TcpServer::accept()
6002cf6c g     O .text.progmem	00000da7 mbedtls_test_cas_pem
60020aec g     F .text.code	00000278 mbedtls_x509_get_time
00013b80 g     F .text.itcm	000000c4 websockets::WebsocketsClient::WebsocketsClient(std::shared_ptr<websockets::network::TcpClient>)
0000b4ec g     F .text.itcm	0000001c _fnet_service_init
000173b4 g     F .text.itcm	0000002a String::String(String&&)
000000b4  w    F .text.itcm	0000001c websockets::network::Teensy41TcpClient::send(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&)
6000fe68 g     F .text.code	00000004 mbedtls_md5_process
00008af0  w    F .text.itcm	00000014 EthernetClient::remoteIP()
00017a58 g     F .text.itcm	000000ec eepromemu_flash_write
60016180 g     F .text.code	00000120 mbedtls_sha1_self_test
6000a510 g     F .text.code	00000078 mbedtls_ecdh_make_params
00028604 g     F .text.itcm	00000008 __sclose
600066e0 g     F .text.code	0000000a mbedtls_camellia_init
20007980 g     O .data	00000024 fnet_icmp4_prot_if
00014c94 g     F .text.itcm	0000010c websockets::internals::WebsocketsEndpoint::send(char const*, unsigned int, unsigned char, bool, bool, char const*)
0000d610 g     F .text.itcm	00000010 fnet_isr_lock
0001af1c g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
6001dfe0 g     F .text.code	00000030 mbedtls_ssl_send_fatal_handshake_failure
0002272c g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
00018fd8 g     F .text.itcm	00000044 usb_serial_peekchar
6001c888 g     F .text.code	0000000e mbedtls_ssl_conf_truncated_hmac
6003148c g     O .text.progmem	00000373 mbedtls_test_ca_crt_ec
0000854c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
2000178c g     O .data	00000020 vtable for EthernetServer
00019f1c  w    F .text.itcm	00000042 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
00000090  w    F .text.itcm	00000022 websockets::network::Teensy41TcpClient::send(unsigned char const*, unsigned long)
6000f284 g     F .text.code	00000036 mbedtls_md_free
0000b774 g     F .text.itcm	00000066 fnet_tls_set_own_certificate
0001a60c g     F .text.itcm	0000007c __cxa_begin_catch
600066ec g     F .text.code	0000000c mbedtls_camellia_free
600344f0 g     O .text.progmem	00000030 mbedtls_eckeydh_info
00012268 g     F .text.itcm	0000001c _fnet_timer_release
2020000c g     O .bss.dma	00000004 EthernetClass::socket_port
00019364 g     F .text.itcm	00000026 HardwareSerial::available()
6001c95c g     F .text.code	00000048 mbedtls_ssl_get_version
20007b30 g     O .data	00000004 mbedtls_test_cli_crt
600030c0 g     F .text.code	00000050 mbedtls_asn1_write_oid
600110b8 g     F .text.code	0000000a mbedtls_pk_get_type
0000dff8 g     F .text.itcm	00000024 _fnet_malloc_zero
20007344 g     O .data	0000016c __global_locale
60030ee0 g     O .text.progmem	00000004 mbedtls_test_srv_key_ec_len
0000f56c g     F .text.itcm	00000012 fnet_socket_recv
00017300 g     F .text.itcm	00000016 Print::print(long)
00012328 g     F .text.itcm	00000020 _fnet_timer_free
00019cf0 g     F .text.itcm	0000000c std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
60002ff8 g     F .text.code	0000008a mbedtls_asn1_write_mpi
6000f3d8 g     F .text.code	0000001c mbedtls_md
00008c64 g     F .text.itcm	000000c4 EthernetClient::connect(IPAddress, unsigned short)
00019cd0 g     F .text.itcm	00000020 std::__throw_bad_function_call()
00022e78 g     F .text.itcm	00000018 fputs
6000c9ec g     F .text.code	0000001a mbedtls_ecp_gen_keypair
0002149c g     F .text.itcm	0000001e __cxa_call_terminate
60016d2c g     F .text.code	000000e0 mbedtls_sha256_ret
00025a70 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
00018aa0  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00022634 g     F .text.itcm	00000018 .hidden restore_core_regs
60021f48 g     F .text.code	00000780 mbedtls_x509_crt_parse_der
0000dbbc g     F .text.itcm	0000006a _fnet_netbuf_to_buf
60023038 g       .text.code	00000000 __init_array_start
0001a434 g     F .text.itcm	00000020 __cxa_free_exception
0000b508 g     F .text.itcm	0000000c fnet_service_mutex_lock
60033ea0 g     O .text.progmem	00000030 mbedtls_md5_info
000269f0 g     F .text.itcm	00000078 _calloc_r
6000bf98 g     F .text.code	00000034 mbedtls_ecp_point_cmp
00008458 g     F .text.itcm	0000003e DNSClient::fnet_dns_callback(fnet_dns_resolved_addr_t const*, unsigned long, char const*, void*)
60011510 g     F .text.code	0000022c mbedtls_pkcs12_derivation
60010468 g     F .text.code	00000044 mbedtls_oid_get_extended_key_usage
60008744 g     F .text.code	00000004 mbedtls_ctr_drbg_set_reseed_interval
60008c94 g     F .text.code	0000000a mbedtls_des_free
600366a7  w    O .text.progmem	00000001 _serialEventUSB1_default
0000eb24 g     F .text.itcm	00000082 _fnet_socket_conflict
0000c044 g     F .text.itcm	0000002e _fnet_checksum_pseudo_netbuf_end
0000e244 g     F .text.itcm	00000018 fnet_netif_set_ip4_gateway
6000b908 g     F .text.code	00000020 mbedtls_ecp_point_init
6001c8b8 g     F .text.code	0000000e mbedtls_ssl_conf_renegotiation
6000fcf8 g     F .text.code	00000088 mbedtls_md5_update_ret
00019cb4 g     F .text.itcm	0000001c std::bad_function_call::~bad_function_call()
2000c810 g     O .bss	00000004 EthernetClass::stack_heap_ptr
00019c98 g     F .text.itcm	00000008 std::bad_function_call::what() const
60003ee8 g     F .text.code	0000006a mbedtls_mpi_bitlen
00001440  w    F .text.itcm	00000374 ArduinoJson::V702PB2::detail::parseNumber(char const*, ArduinoJson::V702PB2::detail::VariantData&)
00022634 g     F .text.itcm	00000018 .hidden __restore_core_regs
00008b08  w    F .text.itcm	00000004 EthernetClient::localPort()
0000f38c g     F .text.itcm	000000ec fnet_socket_sendto
00022838 g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
6001c8f0 g     F .text.code	0000003c mbedtls_ssl_check_pending
20200014 g     O .bss.dma	00000004 EthernetClass::socket_buf_index
000034f0  w    F .text.itcm	000000b8 unsigned short ArduinoJson::V702PB2::detail::VariantData::asIntegral<unsigned short>() const
20007ec0 g     O NonCacheable	00000000 .hidden __TMC_END__
20001598 g     O .data	0000000c typeinfo for std::bad_function_call
000058f0  w    F .text.itcm	00000118 ArduinoJson::V702PB2::Converter<ArduinoJson::V702PB2::JsonObjectConst, void>::toJson(ArduinoJson::V702PB2::JsonVariantConst, ArduinoJson::V702PB2::JsonVariant)
60030fd0 g     O .text.progmem	00000004 mbedtls_test_srv_crt_ec_len
0000e2a0 g     F .text.itcm	0000001a fnet_netif_get_ip4_addr
6000f2bc g     F .text.code	0000004c mbedtls_md_init_ctx
60012e20 g     F .text.code	0000006c mbedtls_rsa_import
200016d4  w    O .data	00000018 typeinfo name for std::_Sp_make_shared_tag
6000ef6c g     F .text.code	00000012 mbedtls_hmac_drbg_random
6000ba48 g     F .text.code	0000002e mbedtls_ecp_copy
00021f34 g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
6001c604 g     F .text.code	00000006 mbedtls_ssl_conf_psk_cb
00000080  w    F .text.itcm	00000008 ArduinoJson::V702PB2::detail::DefaultAllocator::reallocate(void*, unsigned int)
000162f0 g     F .text.itcm	00000834 websockets::WebsocketsServer::accept()
60002570 g     F .text.code	00000004 mbedtls_aes_encrypt
600046f0 g     F .text.code	00000116 mbedtls_mpi_mul_mpi
0000c848 g     F .text.itcm	00000036 _fnet_ip_queue_read
60003b08 g     F .text.code	00000026 mbedtls_mpi_free
60030590 g     O .text.progmem	0000051b mbedtls_test_ca_crt_rsa
00022750 g     F .text.itcm	00000022 .hidden ___Unwind_Resume
00026354 g     F .text.itcm	0000015c __multiply
6000bfcc g     F .text.code	0000002e mbedtls_ecp_point_read_string
000264b0 g     F .text.itcm	000000c0 __pow5mult
00018e0c g     F .text.itcm	000000ec usb_serial_configure
6001e368 g     F .text.code	00000030 mbedtls_ssl_optimize_checksum
2000c834 g     O .bss	00000004 EventResponder::firstInterrupt
000190f0 g     F .text.itcm	00000018 usb_serial_write
00017b44 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
0000e1f8 g     F .text.itcm	0000002c fnet_netif_is_initialized
6003659c g     O .text.progmem	00000001 _serialEvent5_default
00000006 g       *ABS*	00000000 _itcm_block_count
60007b9c g     F .text.code	00000028 mbedtls_cipher_info_from_string
60002ec0 g     F .text.code	000000e6 mbedtls_asn1_write_len
0000c1c8 g     F .text.itcm	0000002e _fnet_eth_change_addr_notify
0001ad9c g     F .text.itcm	00000014 std::unexpected()
00013ae0  w    F .text.itcm	00000024 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0002613c g     F .text.itcm	0000000c __malloc_lock
00022d70 g     F .text.itcm	0000001c isupper
200027ec g     O .data	00000370 digital_pin_to_info_PGM
00017bfc g     F .text.itcm	00000134 eeprom_write_byte
6000ecdc g     F .text.code	00000008 mbedtls_hmac_drbg_init
200017f8 g     O .data	0000000c vtable for IPAddress
000178a4 g     F .text.itcm	00000024 digitalRead
20001994  w    O .data	0000001c vtable for std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>
600129fc g     F .text.code	00000138 mbedtls_pk_parse_public_key
0000b838 g     F .text.itcm	00000062 fnet_tls_release
6000ecec g     F .text.code	00000004 mbedtls_hmac_drbg_set_reseed_interval
6001c6cc g     F .text.code	00000004 mbedtls_ssl_conf_curves
60034550 g     O .text.progmem	00000030 mbedtls_rsa_info
00021964 g     F .text.itcm	000002c8 .hidden __udivmoddi4
6000ca38 g     F .text.code	000000e0 mbedtls_ecp_check_pub_priv
600366ac g       *ABS*	00000000 _stextload
00010028 g     F .text.itcm	00000024 fnet_rand
60010738 g     F .text.code	00000514 mbedtls_pem_read_buffer
0000bff4 g     F .text.itcm	0000001e _fnet_checksum_netbuf
0000fae8 g     F .text.itcm	00000024 fnet_socket_addr_are_equal
00016fb4 g     F .text.itcm	00000048 IPAddress::printTo(Print&) const
00017ef4  w    F .text.itcm	00000002 serialEvent4()
0001b170 g     F .text.itcm	00000004 std::runtime_error::what() const
60013a78 g     F .text.code	00000150 mbedtls_rsa_rsaes_pkcs1_v15_decrypt
0000e8b8 g     F .text.itcm	00000184 _fnet_raw_input
0002521c g     F .text.itcm	00000010 free
600218bc g     F .text.code	0000009c mbedtls_x509_crt_verify_info
00013cec g     F .text.itcm	000000d8 websockets::WebsocketsClient::WebsocketsClient(websockets::WebsocketsClient const&)
6000a588 g     F .text.code	00000028 mbedtls_ecdh_read_params
00009350  w    F .text.itcm	00000002 Print::flush()
6001c3b8 g     F .text.code	00000006 mbedtls_ssl_conf_verify
6001c400 g     F .text.code	00000008 mbedtls_ssl_conf_session_tickets_cb
2000794c g     O .data	00000034 fnet_fec0_if
2000b830 g     O .bss	00000048 Logic
0001b274 g     F .text.itcm	00000048 std::logic_error::~logic_error()
0001a714 g     F .text.itcm	00000002 std::exception::~exception()
6000c8d4 g     F .text.code	00000038 mbedtls_ecp_check_pubkey
60016004 g     F .text.code	000000c8 mbedtls_sha1_finish_ret
000084a0 g     F .text.itcm	00000098 DNSClient::getHostByName(char const*, IPAddress&, unsigned short)
20200010 g     O .bss.dma	00000004 EthernetClass::socket_addr
00026298 g     F .text.itcm	00000060 __lo0bits
6003131c g     O .text.progmem	0000016a mbedtls_test_ca_key_ec
6000f4f8 g     F .text.code	00000060 mbedtls_md_hmac_finish
600160cc g     F .text.code	0000003c mbedtls_sha1_starts
000215c4 g     F .text.itcm	0000027a .hidden __subdf3
60009fc0 g     F .text.code	000000c0 mbedtls_dhm_make_public
600162c0 g     F .text.code	000000a4 mbedtls_sha256_starts_ret
0001b170 g     F .text.itcm	00000004 std::logic_error::what() const
60036638 g     O .text.progmem	00000062 usb_config_descriptor_480
0000b99c g     F .text.itcm	00000042 fnet_tls_socket_send
0001a1f8 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
00009354 g     F .text.itcm	0000001c EthernetServer::write(unsigned char)
60003d58 g     F .text.code	00000084 mbedtls_mpi_safe_cond_swap
00000488  w    F .text.itcm	0000004a VideoHub::~VideoHub()
20002b70 g     O .data	00000038 fnet_fec_api
6000a5fc g     F .text.code	00000054 mbedtls_ecdh_make_public
60004e88 g     F .text.code	00000094 mbedtls_mpi_mod_mpi
000215c8 g     F .text.itcm	00000276 .hidden __adddf3
60014198 g     F .text.code	000001cc mbedtls_rsa_rsassa_pss_verify_ext
6000a3dc g     F .text.code	00000078 mbedtls_dhm_self_test
00027a00 g     F .text.itcm	00000054 _fflush_r
6000df08 g     F .text.code	0000023c mbedtls_entropy_self_test
6000c178 g     F .text.code	00000058 mbedtls_ecp_tls_read_group
000191ec  w    F .text.itcm	000000f0 yield
6001cd58 g     F .text.code	00000006 mbedtls_ssl_sig_hash_set_const_hash
60014d30 g     F .text.code	0000007c mbedtls_rsa_deduce_crt
0001aeac g     F .text.itcm	0000006e __cxa_rethrow
000128e8  w    F .text.itcm	00000e04 websockets::crypto::internals::sha1::process_block(unsigned char const*)
6001c9f0 g     F .text.code	00000044 mbedtls_ssl_get_max_frag_len
6001035c g     F .text.code	00000044 mbedtls_oid_get_sig_alg_desc
00009370 g     F .text.itcm	00000040 EthernetServer::operator bool()
000173e0 g     F .text.itcm	0000000e String::~String()
00027be0 g     F .text.itcm	00000000 memchr
0000af98 g     F .text.itcm	00000010 fnet_dhcp_cln_set_response_timeout
6001ccf8 g     F .text.code	00000008 mbedtls_ssl_session_init
20007048 g     O .data	00000004 F_BUS_ACTUAL
000090a4  w    F .text.itcm	00000050 EthernetClient::operator bool()
00021f44 g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
20007324 g     O .data	00000008 EthernetClass::_fnet_poll
6000bf84 g     F .text.code	00000012 mbedtls_ecp_is_zero
2000160c g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
600365a0 g     O .text.progmem	00000016 usb_string_product_name_default
00017e80 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00028580 g     F .text.itcm	00000022 __sread
00009bd4 g     F .text.itcm	00000014 EthernetClass::socketDisconnect(unsigned char)
600227d8 g     F .text.code	00000002 startup_default_middle_hook
60008ca0 g     F .text.code	0000000a mbedtls_des3_init
600162b4 g     F .text.code	0000000a mbedtls_sha256_clone
6000e7e0 g     F .text.code	000004dc mbedtls_gcm_self_test
6000c148 g     F .text.code	00000030 mbedtls_ecp_tls_write_point
6000821c g     F .text.code	00000074 mbedtls_cipher_auth_encrypt
20007ec0 g       .data	00000000 _edata
60005040 g     F .text.code	00000134 mbedtls_mpi_write_string
0000e588 g     F .text.itcm	0000005c _fnet_prot_init
6001e4fc g     F .text.code	00000010 mbedtls_ssl_hash_from_md_alg
60020db0 g     F .text.code	0000005c mbedtls_x509_get_ext
00017ee8  w    F .text.itcm	00000002 serialEvent1()
00013a44 g     F .text.itcm	00000018 websockets::messageTypeFromOpcode(unsigned char)
0001b34c g     F .text.itcm	00000048 std::length_error::~length_error()
00022718 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
2000d3c8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000b958 g     F .text.itcm	00000042 fnet_tls_socket_recv
6001c3c8 g     F .text.code	00000006 mbedtls_ssl_conf_dbg
6000f1c0 g     F .text.code	000000a0 mbedtls_md_info_from_string
0002612c g     F .text.itcm	00000010 puts
6003659a g     O .text.progmem	00000001 _serialEvent3_default
00025a20 g     F .text.itcm	00000048 __libc_init_array
00018088  w    F .text.itcm	00000034 _sbrk
60014364 g     F .text.code	00000032 mbedtls_rsa_rsassa_pss_verify
600162a8 g     F .text.code	0000000a mbedtls_sha256_free
6001ee90 g     F .text.code	00000084 mbedtls_ssl_dtls_replay_check
00021fac g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
6000ecf0 g     F .text.code	00000098 mbedtls_hmac_drbg_update
20002c8c g     O .data	00000004 mbedtls_test_srv_key_len
600219f0 g     F .text.code	00000038 mbedtls_x509_crt_is_revoked
0002b808 g     F .text.itcm	0000002c _lseek_r
2000d69b g     O .bss	00000001 _fnet_is_enabled
60007754 g     F .text.code	00000068 mbedtls_ccm_star_auth_decrypt
60016c7c g     F .text.code	000000a4 mbedtls_sha256_starts
6001610c g     F .text.code	00000004 mbedtls_sha1_finish
60004808 g     F .text.code	000001bc mbedtls_mpi_read_string
00022750 g     F .text.itcm	00000022 .hidden _Unwind_Resume
0000d57c g     F .text.itcm	00000038 fnet_event_init
00017f04  w    F .text.itcm	00000002 serialEvent8()
6001617c g     F .text.code	00000004 mbedtls_sha1
00004340  w    F .text.itcm	0000114c Network::pollWebSocketServer()
600041bc g     F .text.code	0000007c mbedtls_mpi_cmp_abs
60002d5c g     F .text.code	000000b8 mbedtls_asn1_get_alg
000182cc g     F .text.itcm	00000630 usb_isr
00021860 g     F .text.itcm	00000022 .hidden __floatsidf
20001658 g     O .data	00000010 typeinfo name for std::logic_error
0001a724 g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
60017f1c g     F .text.code	000000fc mbedtls_sha512_starts
600081c8 g     F .text.code	00000054 mbedtls_cipher_crypt
0001b038 g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
0000da30 g     F .text.itcm	0000016c _fnet_netbuf_copy
6000ee48 g     F .text.code	0000006e mbedtls_hmac_drbg_seed
60003110 g     F .text.code	00000068 mbedtls_asn1_write_algorithm_identifier
6000f354 g     F .text.code	00000030 mbedtls_md_clone
00019914 g     F .text.itcm	00000084 sm_set_pool
0001b1f4 g     F .text.itcm	00000040 std::out_of_range::~out_of_range()
6000fd80 g     F .text.code	000000b0 mbedtls_md5_finish_ret
0000d7ac g     F .text.itcm	00000074 _fnet_mempool_malloc
00013a60  w    F .text.itcm	00000020 std::_Sp_counted_ptr_inplace<websockets::network::Teensy41TcpClient, std::allocator<websockets::network::Teensy41TcpClient>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0001adb0 g     F .text.itcm	00000010 std::get_terminate()
60017038 g     F .text.code	00000108 mbedtls_sha512_starts_ret
60007694 g     F .text.code	00000048 mbedtls_ccm_setkey
0001a228 g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
60008748 g     F .text.code	0000008a mbedtls_ctr_drbg_reseed
60006edc g     F .text.code	00000060 mbedtls_camellia_crypt_ctr
0000e2bc g     F .text.itcm	0000001a fnet_netif_get_ip4_dns
60008c3c g     F .text.code	0000004e mbedtls_ctr_drbg_seed_entropy_len
60001624 g     F .text.code	00000030 ResetHandler
0001b428 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
00009cf4 g     F .text.itcm	00000080 EthernetClass::socketSend(unsigned char, unsigned char const*, unsigned short)
0000f944 g     F .text.itcm	0000003a _fnet_socket_buffer_append_record
0001a268 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
2000185c g     O .data	00000010 vtable for websockets::WebsocketsClient
00016b24 g     F .text.itcm	00000064 websockets::internals::fromInterfaceString[abi:cxx11](String const&&)
600624c0 g       *ABS*	00000000 _sdataload
000190a4 g     F .text.itcm	00000020 usb_serial_getchar
600104e8 g     F .text.code	00000044 mbedtls_oid_get_cipher_alg
0000dfb0 g     F .text.itcm	0000001c _fnet_heap_init
00019eac  w    F .text.itcm	00000016 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
000017b4  w    F .text.itcm	00000100 Settings::Settings()
6001cd28 g     F .text.code	00000014 mbedtls_ssl_sig_hash_set_find
00019c68 g     F .text.itcm	00000030 std::__throw_out_of_range(char const*)
2000c838 g     O .bss	00000004 EventResponder::lastYield
6000ac84 g     F .text.code	0000003c mbedtls_ecdsa_from_keypair
00015894 g     F .text.itcm	000000cc websockets::internals::WebsocketsEndpoint::recv()
00022e90 g     F .text.itcm	00000040 sprintf
0001a47c g     F .text.itcm	00000000 __cxa_end_cleanup
0000e294 g     F .text.itcm	0000000c _fnet_netif_get_default
600150cc g     F .text.code	00000048 mbedtls_sha1_starts_ret
6001c6d0 g     F .text.code	00000004 mbedtls_ssl_conf_sig_hashes
00009c80 g     F .text.itcm	0000001c EthernetClass::socketPeek(unsigned char)
6001d440 g     F .text.code	00000460 mbedtls_ssl_derive_keys
0001b030 g     F .text.itcm	00000002 std::type_info::~type_info()
0000e67c g     F .text.itcm	00000038 _fnet_prot_drain
00017d40 g     F .text.itcm	00000134 memcpy
60010308 g     F .text.code	00000054 mbedtls_oid_get_sig_alg
6003659e g     O .text.progmem	00000001 _serialEvent7_default
6001e15c g     F .text.code	00000090 mbedtls_ssl_write
0000d3b0 g     F .text.itcm	00000006 _fnet_ip4_maximum_packet
00018a98  w    F .text.itcm	00000004 usb_serial_class::peek()
0000cafc g     F .text.itcm	0000003c _fnet_ip4_drain
0001b004 g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000ff38 g     F .text.itcm	00000026 fnet_memcmp
0001ae1c g     F .text.itcm	00000058 __cxa_init_primary_exception
0001adc0 g     F .text.itcm	00000010 std::get_unexpected()
00000eb4  w    F .text.itcm	00000052 ArduinoJson::V702PB2::detail::VariantData::getElement(unsigned int, ArduinoJson::V702PB2::detail::ResourceManager const*) const
0000fb0c g     F .text.itcm	00000018 _fnet_socket_addr_copy
6001cd94 g     F .text.code	000000a0 mbedtls_ssl_handshake_free
6000eeb8 g     F .text.code	000000b4 mbedtls_hmac_drbg_random_with_add
60003ea8 g     F .text.code	0000003e mbedtls_mpi_lsb
000173f0 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20001574 g     O .data	0000000c typeinfo for std::out_of_range
60018150 g     F .text.code	00000004 mbedtls_sha512
0000fd80 g     F .text.itcm	0000001c _fnet_mutex_init
00026148 g     F .text.itcm	0000000c __malloc_unlock
0001b4c8  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
0001a2dc g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00009930 g     F .text.itcm	00000080 EthernetClass::socketStatus(unsigned char)
6001c494 g     F .text.code	0000003c mbedtls_ssl_conf_own_cert
200018ec  w    O .data	00000014 vtable for ArduinoJson::V702PB2::detail::DefaultAllocator
00008d44 g     F .text.itcm	00000034 EthernetClient::flush()
60020814 g     F .text.code	00000010 mbedtls_x509_get_alg_null
00022040 g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
000215c8 g     F .text.itcm	00000276 .hidden __aeabi_dadd
00017f00  w    F .text.itcm	00000002 serialEvent7()
60007cf0 g     F .text.code	0000008c mbedtls_cipher_set_padding_mode
00000738  w    F .text.itcm	00000128 websockets::network::Teensy41TcpClient::readLine[abi:cxx11]()
000218d8 g     F .text.itcm	0000005a .hidden __aeabi_l2d
6001c8d8 g     F .text.code	00000006 mbedtls_ssl_conf_renegotiation_enforced
60003ddc g     F .text.code	0000005e mbedtls_mpi_lset
600077bc g     F .text.code	00000018 mbedtls_ccm_auth_decrypt
60016b74 g     F .text.code	00000108 mbedtls_sha256_finish_ret
00015968  w    F .text.itcm	0000000e std::_Sp_counted_ptr<websockets::network::TcpClient*, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr()
00027c80 g     F .text.itcm	000000dc strlen
00013c44 g     F .text.itcm	000000a8 websockets::WebsocketsClient::WebsocketsClient()
0000548c g     F .text.itcm	00000144 loop
60022f28 g     F .text.code	00000054 analog_init
6001c48c g     F .text.code	00000006 mbedtls_ssl_conf_ca_chain
0001b064 g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
60017140 g     F .text.code	00000b00 mbedtls_internal_sha512_process
6002f458 g     O .text.progmem	00000004 mbedtls_test_ca_key_rsa_len
20002c80 g     O .data	00000004 mbedtls_test_ca_crt_len
6001c488 g     F .text.code	00000004 mbedtls_ssl_conf_cert_profile
00013dc4 g     F .text.itcm	00000060 websockets::WebsocketsClient::onMessage(std::function<void (websockets::WebsocketsClient&, websockets::WebsocketsMessage)>)
00026258 g     F .text.itcm	00000040 __hi0bits
2000bbb0 g     O .bss	0000007c Settings
00008ae8  w    F .text.itcm	00000006 EthernetClient::connectPoll(bool)
60004414 g     F .text.code	000000c2 mbedtls_mpi_add_abs
00022c64 g     F .text.itcm	0000001c strtol
000000ec  w    F .text.itcm	0000000e websockets::network::Teensy41TcpServer::~Teensy41TcpServer()
0000ffd0 g     F .text.itcm	00000056 fnet_strtok_r
60001654 g     F .text.code	0000000a mbedtls_aes_init
0002b6dc g     F .text.itcm	00000106 _wcsnrtombs_l
600227dc g     F .text.code	00000002 startup_default_late_hook
0002264c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
6000f278 g     F .text.code	0000000a mbedtls_md_init
0000be60 g     F .text.itcm	00000028 _fnet_arp_drain
600126b4 g     F .text.code	00000258 mbedtls_pk_parse_key
600138f4 g     F .text.code	00000140 mbedtls_rsa_rsaes_oaep_encrypt
0000eab4 g     F .text.itcm	0000006e _fnet_socket_release
0000d6c8 g     F .text.itcm	00000014 fnet_isr_init
60001ecc g     F .text.code	00000086 mbedtls_aes_crypt_cfb8
60020600 g     F .text.code	00000108 mbedtls_x509_self_test
000195c8 g     F .text.itcm	00000004 HardwareSerial::write(unsigned char)
20007ae4 g     O .data	00000024 fnet_tcp_prot_if
60003178 g     F .text.code	00000058 mbedtls_asn1_write_bool
600031d0 g     F .text.code	00000066 mbedtls_asn1_write_int
0001a150  w    F .text.itcm	00000072 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0000b1d8 g     F .text.itcm	000000a0 _fnet_dns_get_rr_name
20007334  w    O .data	00000004 websockets::crypto::internals::sha1::print_base64(char*, bool) const::table
0000e274 g     F .text.itcm	00000020 fnet_netif_get_default
600098b0 g     F .text.code	0000001e mbedtls_des3_set2key_enc
0000ed6c g     F .text.itcm	000000fc fnet_socket
00000194  w    F .text.itcm	00000010 websockets::network::Teensy41TcpClient::available()
0000bdb0 g     F .text.itcm	00000090 _fnet_arp_resolve
6001c410 g     F .text.code	0000000e mbedtls_ssl_conf_dtls_anti_replay
60033de0 g     O .text.progmem	00000030 mbedtls_sha384_info
0000c18c g     F .text.itcm	00000024 _fnet_eth_init
60033e10 g     O .text.progmem	00000030 mbedtls_sha256_info
0000ee68 g     F .text.itcm	0000016c fnet_socket_connect
6001c3dc g     F .text.code	00000006 mbedtls_ssl_conf_read_timeout
0000c994 g     F .text.itcm	00000058 _fnet_ip4_init
6001a240 g     F .text.code	00000048 mbedtls_ssl_set_client_transport_id
6000768c g     F .text.code	00000008 mbedtls_ccm_init
600205f8 g     F .text.code	00000004 mbedtls_x509_time_is_past
6000fecc g     F .text.code	00000004 mbedtls_md5
0000e224 g     F .text.itcm	00000020 fnet_netif_set_ip4_addr
6000a680 g     F .text.code	00000064 mbedtls_ecdh_calc_secret
00008558 g     F .text.itcm	00000002 EthernetClass::teensy_mutex_unlock(void**)
60018594 g     F .text.code	0000001c mbedtls_ssl_ciphersuite_uses_ec
00019a40 g     F .text.itcm	00000178 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
00005d18  w    F .text.itcm	0000005c ArduinoJson::V702PB2::JsonDocument::JsonDocument(ArduinoJson::V702PB2::JsonDocument const&)
2000ce34 g     O .bss	00000010 extmem_smalloc_pool
20050000 g       .text.csf	00000000 _estack
00019034 g     F .text.itcm	00000070 usb_serial_flush_input
00028534 g     F .text.itcm	00000024 _isatty_r
6001d1c4 g     F .text.code	00000004 mbedtls_ssl_session_reset
60008740 g     F .text.code	00000004 mbedtls_ctr_drbg_set_entropy_len
6001c8c8 g     F .text.code	0000000e mbedtls_ssl_conf_legacy_renegotiation
0001b034 g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
0000fabc g     F .text.itcm	00000012 _fnet_socket_addr_is_broadcast
00013f44 g     F .text.itcm	00000032 websockets::WebsocketsClient::_handlePong(websockets::WebsocketsMessage)
600045bc g     F .text.code	0000004e mbedtls_mpi_sub_mpi
0001a718 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
6001343c g     F .text.code	000003c4 mbedtls_rsa_private


